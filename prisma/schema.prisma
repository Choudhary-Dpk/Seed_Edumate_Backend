generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AdminUsers {
  id               Int              @id @default(autoincrement())
  email            String           @unique
  password_hash    String?
  full_name        String?
  is_active        Boolean          @default(true)
  created_at       DateTime         @default(now())
  updated_at       DateTime         @updatedAt
  phone            String?
  admin_sessions   AdminSessions[]  @relation("AdminSessions")
  admin_tokens     AdminTokens[]    @relation("AdminTokens")
  admin_user_roles AdminUserRoles[] @relation("AdminRole")

  @@map("admin_users")
}

model AdminRoles {
  id           Int                    @id @default(autoincrement())
  role         String                 @unique
  display_name String
  description  String?
  permissions  AdminRolePermissions[]
  users        AdminUserRoles[]

  @@map("admin_roles")
}

model AdminUserRoles {
  id          Int        @id @default(autoincrement())
  user_id     Int
  role_id     Int
  assigned_at DateTime   @default(now())
  role        AdminRoles @relation(fields: [role_id], references: [id], onDelete: Cascade)
  admin_user  AdminUsers @relation("AdminRole", fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([user_id, role_id])
  @@map("admin_user_roles")
}

model AdminPermissions {
  id                     Int                    @id @default(autoincrement())
  permission             String                 @unique
  module                 String?
  description            String?
  admin_role_permissions AdminRolePermissions[]

  @@map("admin_permissions")
}

model AdminRolePermissions {
  id            Int              @id @default(autoincrement())
  role_id       Int
  permission_id Int
  permission    AdminPermissions @relation(fields: [permission_id], references: [id], onDelete: Cascade)
  role          AdminRoles       @relation(fields: [role_id], references: [id], onDelete: Cascade)

  @@unique([role_id, permission_id])
  @@map("admin_role_permissions")
}

model AdminSessions {
  id                 Int        @id @unique @default(autoincrement())
  user_id            Int
  refresh_token_hash String?
  device_info        String?
  ip_address         String?
  is_valid           Boolean?   @default(true)
  created_at         DateTime?  @default(now())
  expires_at         DateTime?  @default(now())
  admin_user         AdminUsers @relation("AdminSessions", fields: [user_id], references: [id], onDelete: Cascade)

  @@map("admin_sessions")
}

model AdminTokens {
  id        Int        @id @default(autoincrement())
  user_id   Int
  createdOn DateTime   @default(now())
  token     String
  user      AdminUsers @relation("AdminTokens", fields: [user_id], references: [id])

  @@map("admin_tokens")
}

model LoanEligibilityMatrix {
  id                      Int      @id @default(autoincrement())
  country_of_study        String?  @db.VarChar(100)
  level_of_education      String?  @db.VarChar(50)
  course_type             String?  @db.VarChar(100)
  is_stem_designated      Boolean?
  analytical_exam_name    String?  @db.VarChar(50)
  language_exam_name      String?  @db.VarChar(50)
  preference              String?  @db.VarChar(20)
  loan_amount             Decimal? @db.Decimal(12, 2)
  loan_amount_currency    String?  @db.VarChar(3)
  analytical_score_min    Decimal? @db.Decimal(6, 2)
  analytical_score_max    Decimal? @db.Decimal(6, 2)
  language_exam_score_min Decimal? @db.Decimal(6, 2)
  language_exam_score_max Decimal? @db.Decimal(6, 2)

  @@index([loan_amount, loan_amount_currency], map: "idx_amount_currency")
  @@index([analytical_exam_name], map: "idx_analytical_exam")
  @@index([country_of_study, level_of_education], map: "idx_country_education")
  @@index([country_of_study], map: "idx_country_study")
  @@index([course_type], map: "idx_course_type")
  @@index([loan_amount_currency], map: "idx_currency")
  @@index([level_of_education], map: "idx_education_level")
  @@index([language_exam_name], map: "idx_language_exam")
  @@index([loan_amount], map: "idx_loan_amount")
  @@index([preference], map: "idx_preference")
  @@index([is_stem_designated], map: "idx_stem_designated")
  @@index([is_stem_designated, preference], map: "idx_stem_preference")
  @@map("loan_eligibility_matrix")
}

model B2BPartnersRoles {
  id           Int                          @id @default(autoincrement())
  role         String                       @unique
  display_name String
  description  String?
  permissions  B2BPartnersRolePermissions[]
  users        B2BPartnersUserRoles[]

  @@map("b2b_partners_roles")
}

model B2BPartnersUserRoles {
  id      Int              @id @default(autoincrement())
  user_id Int              @map("user_id")
  role_id Int              @map("role_id")
  role    B2BPartnersRoles @relation(fields: [role_id], references: [id], onDelete: Cascade)
  user    B2BPartnersUsers @relation("UserRole", fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([user_id, role_id])
  @@map("b2b_partners_user_roles")
}

model B2BPartnersSessions {
  id                 Int              @id @default(autoincrement())
  user_id            Int              @map("user_id")
  refresh_token_hash String           @map("refresh_token_hash")
  device_info        String?          @map("device_info")
  ip_address         String?          @map("ip_address") @db.Inet
  is_valid           Boolean          @default(true) @map("is_valid")
  created_at         DateTime         @default(now()) @map("created_at")
  expires_at         DateTime?        @map("expires_at")
  user               B2BPartnersUsers @relation("Session", fields: [user_id], references: [id], onDelete: Cascade)

  @@map("b2b_partners_sessions")
}

model LoginHistory {
  id          Int              @id @default(autoincrement())
  user_id     Int              @map("user_id")
  ip_address  String?          @map("ip_address") @db.Inet
  device_info String?          @map("device_info")
  status      LoginStatus      @map("status")
  created_at  DateTime         @default(now()) @map("created_at")
  user        B2BPartnersUsers @relation("LoginHistory", fields: [user_id], references: [id], onDelete: Cascade)

  @@map("login_history")
}

model B2BPartnersPermissions {
  id         Int                          @id @default(autoincrement())
  permission String                       @map("permission")
  module     String?                      @map("module")
  roles      B2BPartnersRolePermissions[]

  @@map("b2b_partners_permissions")
}

model B2BPartnersRolePermissions {
  id            Int                    @id @default(autoincrement())
  role_id       Int                    @map("role_id")
  permission_id Int                    @map("permission_id")
  permission    B2BPartnersPermissions @relation(fields: [permission_id], references: [id], onDelete: Cascade)
  role          B2BPartnersRoles       @relation(fields: [role_id], references: [id], onDelete: Cascade)

  @@unique([role_id, permission_id])
  @@map("b2b_partners_role_permissions")
}

model HSB2BPartners {
  id                       Int                                      @id @default(autoincrement())
  deleted_by_id            Int?
  business_address         String?
  business_type            String?
  city                     String?
  country                  String?
  gst_number               String?
  incorporation_date       DateTime?
  pan_number               String?
  partner_display_name     String?
  partner_name             String?
  partner_type             String?
  pincode                  String?
  registration_number      String?
  state                    String?
  website_url              String?
  created_by               String?
  created_date             DateTime?
  data_source              String?
  integration_status       String?
  internal_tags            String?
  last_modified_by         String?
  last_modified_date       DateTime?
  notes                    String?
  partner_record_status    String?
  portal_access_provided   String?
  api_access_provided      String?
  hs_created_by_user_id    Int?                                     @map("hs_created_by_user_id")
  hs_createdate            DateTime?                                @map("hs_createdate")
  hs_lastmodifieddate      DateTime?                                @map("hs_lastmodifieddate")
  hs_object_id             String?                                  @map("hs_object_id")
  hs_updated_by_user_id    Int?                                     @map("hs_updated_by_user_id")
  hubspot_owner_id         String?                                  @map("hubspot_owner_id")
  created_at               DateTime                                 @default(now())
  updated_at               DateTime                                 @default(now())
  is_deleted               Boolean                                  @default(false)
  user                     B2BPartnersUsers[]
  deleted_by               B2BPartnersUsers?                        @relation("PartnerDeletedBy", fields: [deleted_by_id], references: [id])
  business_capabilities    HSB2BPartnersBusinessCapabilities?
  commission_structure     HSB2BPartnersCommissionStructure?
  compliance               HSB2BPartnersComplianceAndDocumentation?
  contact_info             HSB2BPartnersContactInfo?
  financial_tracking       HSB2BPartnersFinancialTracking?
  lead_attribution         HSB2BPartnersLeadAttribution?
  marketing_promo          HSB2BPartnersMarketingAndPromotion?
  partnership_details      HSB2BPartnersPartnershipDetails?
  performance_metrics      HSB2BPartnersPerformanceMetrics?
  relationship_managemenet HSB2BPartnersRelationshipManagement?
  system_tracking          HSB2BPartnersSystemTracking?
  b2b_partner_contacts     HSEdumateContacts[]                      @relation("B2BPartnerContacts")

  @@map("hs_b2b_partners")
}

model HSB2BPartnersBusinessCapabilities {
  id                       Int           @id @default(autoincrement())
  partner_id               Int           @unique
  experience_years         Float?
  student_capacity_monthly Float?
  student_capacity_yearly  Float?
  target_courses           String?
  target_desrinations      String?
  target_universities      String?
  team_size                Float?
  partner                  HSB2BPartners @relation(fields: [partner_id], references: [id], onDelete: Cascade)

  @@map("hs_b2b_partners_business_capabilities")
}

model HSB2BPartnersCommissionStructure {
  id                          Int           @id @default(autoincrement())
  partner_id                  Int           @unique
  bank_account_number         String?
  bank_branch                 String?
  bank_name                   String?
  beneficiary_name            String?
  bonus_structure             String?
  commission_model            String?
  commission_rate             Float?
  commission_type             String?
  fixed_commission_amount     Float?
  gst_applicable              String?
  ifsc_code                   String?
  invoice_requirements        String?
  payment_frequency           String?
  payment_method              String?
  payment_terms               String?
  tds_applicable              String?
  tds_rate                    Float?
  tiered_commission_structure String?
  partner                     HSB2BPartners @relation(fields: [partner_id], references: [id], onDelete: Cascade)

  @@map("hs_b2b_partners_commission_structure")
}

model HSB2BPartnersComplianceAndDocumentation {
  id                             Int           @id @default(autoincrement())
  partner_id                     Int           @unique
  agreement_signed_date          DateTime?
  background_verification_status String?
  kyc_completion_date            DateTime?
  kyc_status                     String?
  partner                        HSB2BPartners @relation(fields: [partner_id], references: [id], onDelete: Cascade)

  @@map("hs_b2b_partners_compliance_and_documentation")
}

model HSB2BPartnersContactInfo {
  id                          Int           @id @default(autoincrement())
  partner_id                  Int           @unique
  accounts_contact_email      String?
  accounts_contact_person     String?
  accounts_contact_phone      String?
  marketing_contact_email     String?
  marketing_contact_person    String?
  marketing_contact_phone     String?
  primary_contact_designation String?
  primary_contact_email       String?
  primary_contact_person      String?
  primary_contact_phone       String?
  secondary_contact_email     String?
  secondary_contact_person    String?
  secondary_contact_phone     String?
  partner                     HSB2BPartners @relation(fields: [partner_id], references: [id], onDelete: Cascade)

  @@map("hs_b2b_partners_contact_info")
}

model HSB2BPartnersFinancialTracking {
  id                         Int           @id @default(autoincrement())
  partner_id                 Int           @unique
  average_monthly_commission Float?
  current_month_commission   Float?
  last_payment_amount        Float?
  last_payment_date          DateTime?
  lifetime_value             String?
  next_payment_due_date      DateTime?
  outstanding_commission     Float?
  payment_status             String?
  total_commission_earned    Float?
  total_commission_paid      Float?
  ytd_commission_earned      Float?
  ytd_commission_paid        Float?
  partner                    HSB2BPartners @relation(fields: [partner_id], references: [id], onDelete: Cascade)

  @@map("hs_b2b_partners_financial_tracking")
}

model HSB2BPartnersLeadAttribution {
  id                     Int           @id @default(autoincrement())
  partner_id             Int           @unique
  lead_submission_method String?
  lead_tracking_method   String?
  tracking_link          String?
  unique_referral_code   String?
  utm_source_assigned    String?
  partner                HSB2BPartners @relation(fields: [partner_id], references: [id], onDelete: Cascade)

  @@map("hs_b2b_partners_lead_attribution")
}

model HSB2BPartnersMarketingAndPromotion {
  id                           Int           @id @default(autoincrement())
  partner_id                   Int           @unique
  brand_usage_guidelines       String?
  co_marketing_approval        String?
  content_collaboration        String?
  digital_presence_rating      Float?
  event_participation          String?
  marketing_materials_provided String?
  promotional_activities       String?
  social_media_followers       Float?
  partner                      HSB2BPartners @relation(fields: [partner_id], references: [id], onDelete: Cascade)

  @@map("hs_b2b_partners_marketing_and_promotion")
}

model HSB2BPartnersPartnershipDetails {
  id                     Int           @id @default(autoincrement())
  partner_id             Int           @unique
  agreement_type         String?
  partnership_end_date   DateTime?
  partnership_start_date DateTime?
  partnership_status     String?
  partner                HSB2BPartners @relation(fields: [partner_id], references: [id], onDelete: Cascade)

  @@map("hs_b2b_partners_partnership_details")
}

model HSB2BPartnersPerformanceMetrics {
  id                              Int           @id @default(autoincrement())
  partner_id                      Int           @unique
  application_conversion_rate     Float?
  applications_approved           Float?
  approval_conversion_rate        Float?
  average_lead_quality_score      Float?
  average_loan_amount             Float?
  best_performing_month           String?
  last_lead_date                  DateTime?
  lead_conversion_rate            Float?
  leads_converted_to_applications Float?
  loans_disbursed                 Float?
  partner_rating                  Float?
  qualified_leads_provided        Float?
  seasonal_performance_pattern    String?
  total_leads_provided            Float?
  total_loan_value_generated      Float?
  partner                         HSB2BPartners @relation(fields: [partner_id], references: [id], onDelete: Cascade)

  @@map("hs_b2b_partners_performance_metrics")
}

model HSB2BPartnersRelationshipManagement {
  id                         Int           @id @default(autoincrement())
  partner_id                 Int           @unique
  assigned_account_manager   String?
  communication_frequency    String?
  escalation_history         String?
  feedback_comments          String?
  joint_marketing_activities String?
  last_interaction_date      DateTime?
  relationship_status        String?
  satisfaction_score         Float?
  training_completed         String?
  partner                    HSB2BPartners @relation(fields: [partner_id], references: [id], onDelete: Cascade)

  @@map("hs_b2b_partners_relationship_mgmt")
}

model HSB2BPartnersSystemTracking {
  id                     Int                   @id @default(autoincrement())
  partner_id             Int                   @unique @map("partner_id")
  partner_name           String?               @map("partner_name")
  api_access_provided    ApiAccessStatus      @default(NOT_REQUIRED) @map("api_access_provided") 
  created_by             String?               @map("created_by")
  created_date           DateTime?             @map("created_date")
  data_source            B2BDataSource        @default(MANUAL_ENTRY) @map("data_source")
  integration_status     B2BIntegrationStatus @default(NOT_REQUIRED) @map("integration_status")
  internal_tags          String?               @map("internal_tags")
  last_modified_by       String?               @map("last_modified_by")
  last_modified_date     DateTime?             @map("last_modified_date")
  notes                  String?               @map("notes")
  partner_record_status  PartnerRecordStatus  @default(INACTIVE) @map("partner_record_status")
  portal_access_provided PortalAccessStatus    @default(NO) @map("portal_access_provided")
  created_at             DateTime?             @default(now()) @map("created_at")
  updated_at             DateTime?             @default(now()) @updatedAt @map("updated_at")
  partner                HSB2BPartners         @relation(fields: [partner_id], references: [id], onDelete: Cascade)

  @@index([partner_name])
  @@index([partner_record_status])
  @@index([integration_status])
  @@index([data_source])
  @@index([created_date])
  @@index([last_modified_date])
  @@map("hs_b2b_partners_system_tracking")
}

model B2BPartnersTokens {
  id        Int              @id @default(autoincrement())
  token     String
  user_id   Int
  createdOn DateTime         @default(now())
  user      B2BPartnersUsers @relation("Tokens", fields: [user_id], references: [id])

  @@map("b2b_partners_tokens")
}

model B2BPartnersUserOtps {
  id        Int      @id @default(autoincrement())
  user_id   Int
  otp       String
  createdOn DateTime @default(now())

  @@map("b2b_partners_userOtps")
}

model currency_conversion {
  id            Int      @id @default(autoincrement())
  from_currency String   @db.VarChar(3)
  to_currency   String   @db.VarChar(3)
  exchange_rate Decimal  @db.Decimal(12, 6)
  last_updated  DateTime @default(now()) @db.Timestamp(6)
  is_active     Boolean  @default(true)

  @@unique([from_currency, to_currency])
}

model B2BPartnersUsers {
  id                           Int                                    @id @default(autoincrement())
  b2b_id                       Int
  email                        String                                 @unique @map("email")
  password_hash                String?                                @map("password_hash")
  full_name                    String?                                @map("full_name")
  is_active                    Boolean                                @default(true) @map("is_active")
  created_at                   DateTime                               @default(now()) @map("created_at")
  updated_at                   DateTime                               @default(now()) @updatedAt @map("updated_at")
  sessions                     B2BPartnersSessions[]                  @relation("Session")
  tokens                       B2BPartnersTokens[]                    @relation("Tokens")
  roles                        B2BPartnersUserRoles[]                 @relation("UserRole")
  b2b_partner                  HSB2BPartners                          @relation(fields: [b2b_id], references: [id])
  email_history                EmailHistory[]                         @relation("EmailHistory")
  uploaded_files               FileUploads[]                          @relation("FileUpload")
  deleted_by_partners          HSB2BPartners[]                        @relation("PartnerDeletedBy")
  deleted_by_commission        HSCommissionSettlements[]              @relation("CommissionDeletedBy")
  deleted_By_contacts          HSEdumateContacts[]                    @relation("ContactsDeletedBy")
  deleted_by_contacts_info     HSEdumateContactsPersonalInformation[] @relation("ContactsDeletedBy")
  assigned_applications        HSLoanApplications[]                   @relation("AssignedCounselor")
  created_applications         HSLoanApplications[]                   @relation("CreatedBy")
  deleted_by_loan_applications HSLoanApplications[]                   @relation("DeletedBy")
  modified_applications        HSLoanApplications[]                   @relation("LastModifiedBy")
  loan_applications            HSLoanApplications[]                   @relation("UserLoanApplications")
  deleted_by_loan_products     HSLoanProducts[]                       @relation("LoanProuductsDeletedBy")
  login_history                LoginHistory[]                         @relation("LoginHistory")

  @@map("b2b_partners_users")
}

model HSLoanApplications {
  id                      Int                                         @id @default(autoincrement())
  application_date        DateTime                                    @default(now())
  lead_reference_code     String?
  student_id              String?
  student_name            String?
  student_email           String?
  student_phone           String?
  application_source      ApplicationSource?                          @default(DIRECT)
  assigned_counselor_id   Int?
  b2b_partner_id          Int?
  is_deleted              Boolean?                                    @default(false)
  user_id                 Int?
  contact_id              Int?
  created_by_id           Int?
  last_modified_by_id     Int?
  deleted_by_id           Int?
  created_at              DateTime?                                   @default(now())
  updated_at              DateTime?                                   @default(now()) @updatedAt
  deleted_at              DateTime?
  hs_created_by_user_id   Int?                                        @map("hs_created_by_user_id")
  hs_createdate           DateTime?                                   @map("hs_createdate")
  hs_lastmodifieddate     DateTime?                                   @map("hs_lastmodifieddate")
  hs_object_id            String?                                     @map("hs_object_id")
  hs_updated_by_user_id   Int?                                        @map("hs_updated_by_user_id")
  hubspot_owner_id        String?                                     @map("hubspot_owner_id")
  assigned_counselor      B2BPartnersUsers?                           @relation("AssignedCounselor", fields: [assigned_counselor_id], references: [id])
  edumate_contact         HSEdumateContacts?                          @relation(fields: [contact_id], references: [id])
  created_by              B2BPartnersUsers?                           @relation("CreatedBy", fields: [created_by_id], references: [id])
  deleted_by              B2BPartnersUsers?                           @relation("DeletedBy", fields: [deleted_by_id], references: [id])
  last_modified_by        B2BPartnersUsers?                           @relation("LastModifiedBy", fields: [last_modified_by_id], references: [id])
  user                    B2BPartnersUsers?                           @relation("UserLoanApplications", fields: [user_id], references: [id])
  academic_details        HSLoanApplicationsAcademicDetails?
  additional_services     HSLoanApplicationsAdditionalServices?
  commission_records      HSLoanApplicationsCommissionRecords?
  communication_prefs     HSLoanApplicationsCommunicationPreferences?
  document_management     HSLoanApplicationsDocumentManagement?
  financial_requirements  HSLoanApplicationsFinancialRequirements?
  lender_information      HSLoanApplicationsLenderInformation?
  processing_timeline     HSLoanApplicationsProcessingTimeline?
  rejection_details       HSLoanApplicationsRejectionDetails?
  loan_application_status HSLoanApplicationsStatus?
  system_tracking         HSLoanApplicationsSystemTracking?

  @@index([student_email])
  @@index([application_date])
  @@index([assigned_counselor_id])
  @@map("hs_loan_applications")
}

model HSLoanApplicationsAcademicDetails {
  id                        Int                @id @default(autoincrement())
  loan_application_id       Int                @unique
  target_course             String?
  target_university         String?
  target_university_country String?
  course_level              CourseLevel?
  course_start_date         DateTime?
  course_end_date           DateTime?
  course_duration           Int?
  admission_status          AdmissionStatus?   @default(NOT_APPLIED)
  visa_status               VisaStatus?        @default(NOT_APPLIED)
  i20_cas_received          I20CasStatus?      @default(NOT_APPLICABLE)
  created_at                DateTime?          @default(now())
  updated_at                DateTime?          @default(now()) @updatedAt
  loan_application          HSLoanApplications @relation(fields: [loan_application_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_applications_academic_details")
}

model HSLoanApplicationsFinancialRequirements {
  id                     Int                @id @default(autoincrement())
  loan_application_id    Int                @unique
  loan_amount_requested  Decimal?           @db.Decimal(12, 2)
  loan_amount_approved   Decimal?           @db.Decimal(12, 2)
  loan_amount_disbursed  Decimal?           @db.Decimal(12, 2)
  tuition_fee            Decimal?           @db.Decimal(12, 2)
  living_expenses        Decimal?           @db.Decimal(12, 2)
  travel_expenses        Decimal?           @db.Decimal(12, 2)
  insurance_cost         Decimal?           @db.Decimal(12, 2)
  other_expenses         Decimal?           @db.Decimal(12, 2)
  total_funding_required Decimal?           @db.Decimal(12, 2)
  scholarship_amount     Decimal?           @db.Decimal(12, 2)
  self_funding_amount    Decimal?           @db.Decimal(12, 2)
  created_at             DateTime?          @default(now())
  updated_at             DateTime?          @default(now()) @updatedAt
  loan_application       HSLoanApplications @relation(fields: [loan_application_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_applications_financial_requirements")
}

model HSLoanApplicationsStatus {
  id                  Int                    @id @default(autoincrement())
  loan_application_id Int                    @unique
  status              ApplicationStatusEnum? @default(PRE_APPROVED)
  priority_level      PriorityLevel?         @default(LOW)
  application_notes   String?
  internal_notes      String?
  record_status       RecordStatus?          @default(ACTIVE)
  created_at          DateTime?              @default(now())
  updated_at          DateTime?              @default(now()) @updatedAt
  loan_application    HSLoanApplications     @relation(fields: [loan_application_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_applications_status")
}

model HSLoanApplicationsLenderInformation {
  id                       Int                @id @default(autoincrement())
  loan_application_id      Int                @unique
  primary_lender_id        String?
  primary_lender_name      String?
  loan_product_id          String?
  loan_product_name        String?
  loan_product_type        LoanProductType?
  interest_rate_offered    Decimal?           @db.Decimal(10, 2)
  interest_rate_type       InterestRateType?
  loan_tenure_years        Int?
  moratorium_period_months Int?
  emi_amount               Decimal?           @db.Decimal(12, 2)
  processing_fee           Decimal?           @db.Decimal(12, 2)
  co_signer_required       Boolean?           @default(false)
  collateral_required      Boolean?           @default(false)
  collateral_type          String?
  collateral_value         Decimal?           @db.Decimal(12, 2)
  guarantor_details        String?
  created_at               DateTime?          @default(now())
  updated_at               DateTime?          @default(now()) @updatedAt
  loan_application         HSLoanApplications @relation(fields: [loan_application_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_applications_lender_information")
}

model HSLoanApplicationsDocumentManagement {
  id                       Int                @id @default(autoincrement())
  loan_application_id      Int                @unique
  documents_required_list  String?
  documents_submitted_list String?
  documents_pending_list   String?
  created_at               DateTime?          @default(now())
  updated_at               DateTime?          @default(now()) @updatedAt
  loan_application         HSLoanApplications @relation(fields: [loan_application_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_applications_document_management")
}

model HSLoanApplicationsProcessingTimeline {
  id                         Int                @id @default(autoincrement())
  loan_application_id        Int                @unique
  lender_submission_date     DateTime?
  lender_acknowledgment_date DateTime?
  approval_date              DateTime?
  sanction_letter_date       DateTime?
  disbursement_request_date  DateTime?
  disbursement_date          DateTime?
  total_processing_days      Int?
  sla_breach                 Boolean?           @default(false)
  delay_reason               DelayReason?
  created_at                 DateTime?          @default(now())
  updated_at                 DateTime?          @default(now()) @updatedAt
  loan_application           HSLoanApplications @relation(fields: [loan_application_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_applications_processing_timeline")
}

model HSLoanApplicationsRejectionDetails {
  id                  Int                @id @default(autoincrement())
  loan_application_id Int                @unique
  rejection_date      DateTime?
  rejection_reason    RejectionReason?
  rejection_details   String?
  appeal_submitted    Boolean?           @default(false)
  appeal_outcome      AppealOutcome?     @default(NOT_APPLICABLE)
  resolution_provided String?
  created_at          DateTime?          @default(now())
  updated_at          DateTime?          @default(now()) @updatedAt
  loan_application    HSLoanApplications @relation(fields: [loan_application_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_applications_rejection_details")
}

model HSLoanApplicationsCommunicationPreferences {
  id                           Int                   @id @default(autoincrement())
  loan_application_id          Int                   @unique
  communication_preference     CommunicationChannel? @default(EMAIL)
  follow_up_frequency          FollowUpFrequency?    @default(AS_NEEDED)
  last_contact_date            DateTime?
  next_follow_up_date          DateTime?
  customer_satisfaction_rating Int?                  @db.SmallInt
  customer_feedback            String?
  complaint_raised             Boolean?              @default(false)
  complaint_details            String?
  complaint_resolution_date    DateTime?
  created_at                   DateTime?             @default(now())
  updated_at                   DateTime?             @default(now()) @updatedAt
  loan_application             HSLoanApplications    @relation(fields: [loan_application_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_applications_communication_preferences")
}

model HSLoanApplicationsSystemTracking {
  id                        Int                      @id @default(autoincrement())
  loan_application_id       Int                      @unique
  application_source_system ApplicationSourceSystem? @default(MANUAL_ENTRY)
  integration_status        IntegrationStatus?       @default(NOT_REQUIRED)
  audit_trail               String?
  hs_object_id              String?
  hs_merged_object_ids      String?
  hs_object_source_label    String?
  application_record_status RecordStatus?            @default(ACTIVE)
  external_reference_id     String?
  created_at                DateTime?                @default(now())
  created_by                String?
  last_modified_by          String?
  updated_at                DateTime?                @default(now()) @updatedAt
  loan_application          HSLoanApplications       @relation(fields: [loan_application_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_applications_system_tracking")
}

model HSLoanApplicationsCommissionRecords {
  id                            Int                @id @default(autoincrement())
  loan_application_id           Int                @unique
  commission_amount             Decimal?           @db.Decimal(12, 2)
  commission_rate               Decimal?           @db.Decimal(10, 2)
  commission_calculation_base   CommissionBase?
  commission_status             CommissionStatus   @default(NOT_APPLICABLE)
  commission_approval_date      DateTime?
  commission_payment_date       DateTime?
  partner_commission_applicable Boolean?           @default(false)
  settlement_id                 String?
  created_at                    DateTime?          @default(now())
  updated_at                    DateTime?          @default(now()) @updatedAt
  loan_application              HSLoanApplications @relation(fields: [loan_application_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_applications_commission_records")
}

model HSLoanApplicationsAdditionalServices {
  id                        Int                @id @default(autoincrement())
  loan_application_id       Int                @unique
  additional_services_notes String?
  created_at                DateTime?          @default(now())
  updated_at                DateTime?          @default(now()) @updatedAt
  loan_application          HSLoanApplications @relation(fields: [loan_application_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_applications_additional_services")
}

model FileUploads {
  id                Int              @id @default(autoincrement())
  filename          String
  file_data         Json
  total_records     Int              @default(0)
  mime_type         String?
  entity_type_id    Int
  processed_records Int              @default(0)
  failed_records    Int              @default(0)
  uploaded_by_id    Int
  created_at        DateTime         @default(now())
  updated_at        DateTime         @updatedAt
  processed_at      DateTime?
  entity_type       FileEntities     @relation(fields: [entity_type_id], references: [id])
  uploaded_by       B2BPartnersUsers @relation("FileUpload", fields: [uploaded_by_id], references: [id])

  @@index([entity_type_id])
  @@index([created_at])
  @@map("file_uploads")
}

model FileEntities {
  id          Int           @id @default(autoincrement())
  type        String        @unique @map("type")
  description String?       @map("description")
  uploads     FileUploads[]

  @@index([type])
  @@map("file_entities")
}

model EmailTypes {
  id            Int            @id @default(autoincrement())
  subject       String         @unique @map("subject")
  type          String         @map("type")
  created_at    DateTime       @default(now()) @map("created_at")
  email_history EmailHistory[]

  @@index([subject, type])
  @@map("email_types")
}

model EmailHistory {
  id            Int               @id @default(autoincrement())
  user_id       Int?              @map("user_id")
  reciepient    String            @map("reciepient")
  cc            String?           @map("cc")
  bcc           String?           @map("bcc")
  email_type_id Int               @map("email_type_id")
  sent_at       DateTime?         @map("sent_at")
  created_at    DateTime          @default(now()) @map("created_at")
  email_type    EmailTypes        @relation(fields: [email_type_id], references: [id])
  user          B2BPartnersUsers? @relation("EmailHistory", fields: [user_id], references: [id])

  @@index([user_id])
  @@index([email_type_id])
  @@index([sent_at])
  @@map("email_history")
}

model HSEdumateContactsApplicationJourney {
  id                                Int                       @id @default(autoincrement())
  contact_id                        Int                       @unique @map("contact_id")
  assigned_counselor                String?                   @map("assigned_counselor")
  counselor_notes                   String?                   @map("counselor_notes")
  current_status_disposition        CurrentStatusDisposition? @map("current_status_disposition")
  current_status_disposition_reason StatusDispositionReason?  @map("current_status_disposition_reason")
  priority_level                    PriorityLevel?            @map("priority_level")
  first_contact_date                DateTime?                 @map("first_contact_date")
  last_contact_date                 DateTime?                 @map("last_contact_date")
  follow_up_date                    DateTime?                 @map("follow_up_date")
  next_follow_up_date               DateTime?                 @map("next_follow_up_date")
  created_at                        DateTime                  @default(now()) @map("created_at")
  updated_at                        DateTime                  @updatedAt @map("updated_at")
  contact                           HSEdumateContacts         @relation(fields: [contact_id], references: [id], onDelete: Cascade)

  @@map("hs_edumate_contacts_application_journey")
}

model HSEdumateContactsAcademicProfiles {
  id                          Int                            @id @default(autoincrement())
  contact_id                  Int                            @unique @map("contact_id")
  admission_status            EdumateContactAdmissionStatus? @map("admission_status")
  current_education_level     CurrentEducationLevel?         @map("current_education_level")
  current_institution         String?                        @map("current_institution")
  current_course_major        String?                        @map("current_course_major")
  current_cgpa_percentage     Float?                         @map("current_cgpa_percentage")
  current_graduation_year     Int?                           @map("current_graduation_year")
  course_duration_months      Int?                           @map("course_duration_months")
  cat_score                   Int?                           @map("cat_score")
  gre_score                   Int?                           @map("gre_score")
  gmat_score                  Int?                           @map("gmat_score")
  toefl_score                 Int?                           @map("toefl_score")
  ielts_score                 Float?                         @map("ielts_score")
  sat_score                   Int?                           @map("sat_score")
  duolingo_score              Int?                           @map("duolingo_score")
  nmat_score                  Int?                           @map("nmat_score")
  xat_score                   Int?                           @map("xat_score")
  other_test_scores           String?                        @map("other_test_scores")
  target_degree_level         TargetDegreeLevel?             @map("target_degree_level")
  target_course_major         String?                        @map("target_course_major")
  preferred_study_destination PreferredStudyDestination?     @map("preferred_study_destination")
  target_universities         String?                        @map("target_universities")
  intended_start_term         IntendedStartTerm?             @map("intended_start_term")
  intended_start_date         DateTime?                      @map("intended_start_date")
  intake_month                String?                        @map("intake_month")
  intake_year                 String?                        @map("intake_year")
  created_at                  DateTime                       @default(now()) @map("created_at")
  updated_at                  DateTime                       @updatedAt @map("updated_at")
  contact                     HSEdumateContacts              @relation(fields: [contact_id], references: [id], onDelete: Cascade)

  @@map("hs_edumate_contacts_academic_profiles")
}

model HSEdumateContacts {
  id                           Int                                   @id @default(autoincrement())
  deleted_by_id                Int?
  b2b_partner_id               Int?
  hs_created_by_user_id        Int?                                  @map("hs_created_by_user_id")
  hs_createdate                DateTime?                             @map("hs_createdate")
  hs_lastmodifieddate          DateTime?                             @map("hs_lastmodifieddate")
  hs_object_id                 String?                               @map("hs_object_id")
  hs_updated_by_user_id        Int?                                  @map("hs_updated_by_user_id")
  hubspot_owner_id             String?                               @map("hubspot_owner_id")
  base_currency                String?                               @map("base_currency")
  study_destination_currency   String?                               @map("study_destination_currency")
  user_selected_currency       String?                               @map("user_selected_currency")
  course_type                  EdumateContactCourseType?             @map("course_type")
  co_applicant_1_email         String?                               @map("co_applicant_1_email")
  co_applicant_1_mobile_number String?                               @map("co_applicant_1_mobile_number")
  created_at                   DateTime                              @default(now()) @map("created_at")
  updated_at                   DateTime                              @updatedAt @map("updated_at")
  is_deleted                   Boolean                               @default(false)
  b2b_partner                  HSB2BPartners?                        @relation("B2BPartnerContacts", fields: [b2b_partner_id], references: [id])
  deleted_by                   B2BPartnersUsers?                     @relation("ContactsDeletedBy", fields: [deleted_by_id], references: [id])
  academic_profile             HSEdumateContactsAcademicProfiles?
  application_journey          HSEdumateContactsApplicationJourney?
  financial_Info               HSEdumateContactsFinancialInfo?
  leads                        HSEdumateContactsLeadAttribution?
  loan_preference              HSEdumateContactsLoanPreferences?
  personal_information         HSEdumateContactsPersonalInformation?
  system_tracking              HSEdumateContactsSystemTracking?
  loan_application             HSLoanApplications[]
  eligibility_lead             MktEligibilityCheckerLeads?
  emi_lead                     MktEmiCalculatorLeads?

  @@map("hs_edumate_contacts")
}

model HSEdumateContactsSystemTracking {
  id                    Int                  @id @default(autoincrement())
  contact_id            Int                  @unique @map("contact_id")
  created_by            Int?                 @map("created_by")
  created_date          DateTime?            @map("created_date")
  last_modified_by      String?              @map("last_modified_by")
  last_modified_date    DateTime?            @map("last_modified_date")
  data_source           DataSource?          @map("data_source")
  student_record_status StudentRecordStatus? @map("student_record_status")
  tags                  String?              @map("tags")
  gdpr_consent          GDPRConsent?         @map("gdpr_consent")
  marketing_consent     MarketingConsent?    @map("marketing_consent")
  created_at            DateTime             @default(now()) @map("created_at")
  updated_at            DateTime             @updatedAt @map("updated_at")
  contact               HSEdumateContacts    @relation(fields: [contact_id], references: [id], onDelete: Cascade)

  @@map("hs_edumate_contacts_system_tracking")
}

model HSEdumateContactsFinancialInfo {
  id                          Int                           @id @default(autoincrement())
  contact_id                  Int                           @unique @map("contact_id")
  annual_family_income        Decimal?                      @map("annual_family_income") @db.Decimal(15, 2)
  currency                    FinancialCurrency?            @map("currency")
  co_applicant_1_name         String?                       @map("co_applicant_1_name")
  co_applicant_1_income       Decimal?                      @map("co_applicant_1_income") @db.Decimal(15, 2)
  co_applicant_1_occupation   CoApplicantOccupation?        @map("co_applicant_1_occupation")
  co_applicant_1_relationship CoApplicantRelationship?      @map("co_applicant_1_relationship")
  co_applicant_2_name         String?                       @map("co_applicant_2_name")
  co_applicant_2_income       Decimal?                      @map("co_applicant_2_income") @db.Decimal(15, 2)
  co_applicant_2_occupation   CoApplicantOccupation?        @map("co_applicant_2_occupation")
  co_applicant_2_relationship CoApplicantRelationship?      @map("co_applicant_2_relationship")
  co_applicant_3_name         String?                       @map("co_applicant_3_name")
  co_applicant_3_income       Decimal?                      @map("co_applicant_3_income") @db.Decimal(15, 2)
  co_applicant_3_occupation   CoApplicantOccupation?        @map("co_applicant_3_occupation")
  co_applicant_3_relationship CoApplicantRelationship?      @map("co_applicant_3_relationship")
  collateral_available        CollateralAvailable?          @map("collateral_available")
  collateral_type             EdumateContactCollateralType? @map("collateral_type")
  collateral_value            Decimal?                      @map("collateral_value") @db.Decimal(15, 2)
  collateral_2_available      CollateralAvailable?          @map("collateral_2_available")
  collateral_2_type           EdumateContactCollateralType? @map("collateral_2_type")
  collateral_2_value          Decimal?                      @map("collateral_2_value") @db.Decimal(15, 2)
  living_expenses             Decimal?                      @map("living_expenses") @db.Decimal(15, 2)
  other_expenses              Decimal?                      @map("other_expenses") @db.Decimal(15, 2)
  total_course_cost           Decimal?                      @map("total_course_cost") @db.Decimal(15, 2)
  tuition_fee                 Decimal?                      @map("tuition_fee") @db.Decimal(15, 2)
  loan_amount_required        Decimal?                      @map("loan_amount_required") @db.Decimal(15, 2)
  scholarship_amount          Decimal?                      @map("scholarship_amount") @db.Decimal(15, 2)
  self_funding_amount         Decimal?                      @map("self_funding_amount") @db.Decimal(15, 2)
  created_at                  DateTime                      @default(now()) @map("created_at")
  updated_at                  DateTime                      @updatedAt @map("updated_at")
  contact                     HSEdumateContacts             @relation(fields: [contact_id], references: [id], onDelete: Cascade)

  @@map("hs_edumate_contacts_financial_info")
}

model HSEdumateContactsLeadAttribution {
  id                            Int                          @id @default(autoincrement())
  contact_id                    Int                          @unique @map("contact_id")
  lead_source                   LeadSource?                  @map("lead_source")
  lead_source_detail            String?                      @map("lead_source_detail")
  lead_quality_score            Float?                       @map("lead_quality_score")
  lead_reference_code           String?                      @map("lead_reference_code")
  b2b_partner_id                String?                      @map("b2b_partner_id")
  b2b_partner_name              String?                      @map("b2b_partner_name")
  partner_commission_applicable PartnerCommissionApplicable? @map("partner_commission_applicable")
  referral_person_name          String?                      @map("referral_person_name")
  referral_person_contact       String?                      @map("referral_person_contact")
  utm_source                    String?                      @map("utm_source")
  utm_medium                    String?                      @map("utm_medium")
  utm_campaign                  String?                      @map("utm_campaign")
  utm_term                      String?                      @map("utm_term")
  utm_content                   String?                      @map("utm_content")
  created_at                    DateTime                     @default(now()) @map("created_at")
  updated_at                    DateTime                     @updatedAt @map("updated_at")
  contact                       HSEdumateContacts            @relation(fields: [contact_id], references: [id], onDelete: Cascade)

  @@map("hs_edumate_contacts_lead_attribution")
}

model HSEdumateContactsLoanPreferences {
  id                        Int                      @id @default(autoincrement())
  contact_id                Int                      @unique @map("contact_id")
  loan_type_preference      LoanTypePreference?      @map("loan_type_preference")
  preferred_lenders         PreferredLenders[]       @map("preferred_lenders")
  repayment_type_preference RepaymentTypePreference? @map("repayment_type_preference")
  created_at                DateTime                 @default(now()) @map("created_at")
  updated_at                DateTime                 @updatedAt @map("updated_at")
  contact                   HSEdumateContacts        @relation(fields: [contact_id], references: [id], onDelete: Cascade)

  @@map("hs_edumate_contacts_loan_preferences")
}

model HSEdumateContactsPersonalInformation {
  id                        Int               @id @default(autoincrement())
  contact_id                Int               @unique @map("contact_id")
  first_name                String            @map("first_name")
  last_name                 String?           @map("last_name")
  email                     String?           @map("email")
  phone_number              String?           @map("phone_number")
  date_of_birth             DateTime?         @map("date_of_birth")
  gender                    Gender?           @map("gender")
  nationality               Nationality?      @map("nationality")
  current_address           String?           @map("current_address")
  city_current_address      String?           @map("citycurrent_address")
  state_current_address     String?           @map("state_current_address")
  country_current_address   String?           @map("country_current_address")
  pincode_current_address   String?           @map("pincode_current_address")
  permanent_address         String?           @map("permanent_address")
  city_permanent_address    String?           @map("city_permanent_address")
  state_permanent_address   String?           @map("state_permanent_address")
  country_permanent_address String?           @map("country_permanent_address")
  pincode_permanent_address String?           @map("pincode_permanent_address")
  created_at                DateTime          @default(now()) @map("created_at")
  updated_at                DateTime          @updatedAt @map("updated_at")
  deleted_by_id             Int?
  is_deleted                Boolean           @default(false)
  contact                   HSEdumateContacts @relation(fields: [contact_id], references: [id], onDelete: Cascade)
  deleted_by                B2BPartnersUsers? @relation("ContactsDeletedBy", fields: [deleted_by_id], references: [id])

  @@map("hs_edumate_contacts_personal_information")
}

model HSLenders {
  id                     Int                           @id @default(autoincrement())
  external_id            String?                       @unique @map("external_id")
  lender_display_name    String                        @map("lender_display_name")
  lender_name            String                        @map("lender_name")
  legal_name             String?                       @map("legal_name")
  short_code             String?                       @map("short_code")
  lender_logo_url        String?                       @map("lender_logo_url")
  website_url            String?                       @map("website_url")
  lender_category        LenderCategory?               @map("lender_category")
  lender_type            LenderType?                   @map("lender_type")
  is_active              Boolean?                      @default(true) @map("is_active")
  created_at             DateTime?                     @default(now()) @map("created_at")
  updated_at             DateTime?                     @updatedAt @map("updated_at")
  created_by             String?                       @map("created_by")
  updated_by             String?                       @map("updated_by")
  hs_created_by_user_id  Int?                          @map("hs_created_by_user_id")
  hs_createdate          DateTime?                     @map("hs_createdate")
  hs_lastmodifieddate    DateTime?                     @map("hs_lastmodifieddate")
  hs_object_id           String?                       @map("hs_object_id")
  hs_updated_by_user_id  Int?                          @map("hs_updated_by_user_id")
  hubspot_owner_id       String?                       @map("hubspot_owner_id")
  is_deleted             Boolean?                      @default(false)
  business_metrics       HSLendersBusinessMetrics?
  contact_info           HSLendersContactInfo?
  operational_details    HSLendersOperationalDetails?
  partnership            HSLendersPartnershipsDetails?
  lender_system_tracking HSLendersSystemTracking?
  loan_products          HSLoanProducts[]

  @@index([lender_category])
  @@index([lender_type])
  @@index([created_at])
  @@map("hs_lenders")
}

model HSLendersSystemTracking {
  id                     Int                 @default(autoincrement())
  lender_id              Int                 @unique
  data_source            LenderDataSource?   @default(MANUAL_ENTRY)
  lender_record_status   LenderRecordStatus? @default(INACTIVE)
  notes                  String?
  performance_rating     PerformanceRating?  @default(AVERAGE)
  created_at             DateTime            @default(now())
  updated_at             DateTime            @default(now()) @updatedAt
  last_modified_by       String?
  last_modified_date     DateTime?
  lender_system_tracking HSLenders           @relation(fields: [lender_id], references: [id], onDelete: Cascade)

  @@map("hs_lenders_system_tracking")
}

model HSLendersContactInfo {
  id                                 Int       @id @default(autoincrement())
  lender_id                          Int       @unique @map("lender_id")
  primary_contact_email              String?   @map("primary_contact_email")
  primary_contact_phone              String?   @map("primary_contact_phone")
  primary_contact_designation        String?   @map("primary_contact_designation")
  primary_contact_person             String?   @map("primary_contact_person")
  relationship_manager_email         String?   @map("relationship_manager_email")
  relationship_manager_name          String?   @map("relationship_manager_name")
  relationship_manager_phone         String?   @map("relationship_manager_phone")
  escalation_hierarchy_1_designation String?   @map("escalation_hierarchy_1_designation")
  escalation_hierarchy_1_email       String?   @map("escalation_hierarchy_1_email")
  escalation_hierarchy_1_name        String?   @map("escalation_hierarchy_1_name")
  escalation_hierarchy_1_phone       String?   @map("escalation_hierarchy_1_phone")
  customer_service_email             String?   @map("customer_service_email")
  customer_service_number            String?   @map("customer_service_number")
  created_at                         DateTime  @default(now()) @map("created_at")
  updated_at                         DateTime  @updatedAt @map("updated_at")
  lender                             HSLenders @relation(fields: [lender_id], references: [id], onDelete: Cascade)

  @@map("hs_lenders_contact_info")
}

model HSLendersBusinessMetrics {
  id                           Int       @id @default(autoincrement())
  lender_id                    Int       @unique @map("lender_id")
  average_approval_rate        Int?      @map("average_approval_rate")
  monthly_application_volume   Int?      @map("monthly_application_volume")
  quarterly_application_volume Int?      @map("quarterly_application_volume")
  yearly_application_volume    Int?      @map("yearly_application_volume")
  average_processing_days      Int?      @map("average_processing_days")
  average_disbursement_days    Int?      @map("average_disbursement_days")
  created_at                   DateTime  @default(now()) @map("created_at")
  updated_at                   DateTime  @updatedAt @map("updated_at")
  lender                       HSLenders @relation(fields: [lender_id], references: [id], onDelete: Cascade)

  @@map("hs_lenders_business_metrics")
}

model HSLendersLoanOfferings {
  id                                Int                    @id @default(autoincrement())
  co_signer_requirements            CoSignerRequirement?   @default(NOT_REQUIRED)
  collateral_requirements           LenderCollateralType?  @default(NO_COLLATERAL)
  interest_rate_range_max_secured   Int?                   @map("interest_rate_range_max_secured")
  interest_rate_range_max_unsecured Int?                   @map("interest_rate_range_max_unsecured")
  interest_rate_range_min_secured   Int?                   @map("interest_rate_range_min_secured")
  interest_rate_range_min_unsecured Int?                   @map("interest_rate_range_min_unsecured")
  margin_money_requirement          Int?                   @map("margin_money_requirement")
  maximum_loan_amount_secured       Int?                   @map("maximum_loan_amount_secured")
  maximum_loan_amount_unsecured     Int?                   @map("maximum_loan_amount_unsecured")
  minimum_loan_amount_secured       Int?                   @map("minimum_loan_amount_secured")
  minimum_loan_amount_unsecured     Int?                   @map("minimum_loan_amount_unsecured")
  not_supported_universities        String?                @map("not_supported_universities")
  processing_fee_range              String?                @map("processing_fee_range")
  special_programs                  String?                @map("special_programs")
  supported_course_types            SupportedCourseTypes?  @default(CERTIFICATE)
  supported_destinations            SupportedDestinations? @default(US)
  created_at                        DateTime               @default(now())
  updated_at                        DateTime               @default(now()) @updatedAt

  @@map("hs_lenders_loan_offerings")
}

model HSLendersOperationalDetails {
  id                         Int                    @id @default(autoincrement())
  lender_id                  Int                    @unique @map("lender_id")
  api_connectivity_status    APIConnectivityStatus? @map("api_connectivity_status")
  digital_integration_level  IntegrationLevel?      @map("digital_integration_level")
  documentation_requirements Json?                  @map("documentation_requirements")
  holiday_processing         HolidayProcessing?     @default(NO)
  late_payment_charges       String?                @map("late_payment_charges")
  prepayment_charges         String?                @map("prepayment_charges")
  repayment_options          RepaymentOptions?      @default(EMI)
  turnaround_time_commitment Int?                   @map("turnaround_time_commitment")
  working_hours              String?                @map("working_hours")
  created_at                 DateTime               @default(now()) @map("created_at")
  updated_at                 DateTime               @updatedAt @map("updated_at")
  lender                     HSLenders              @relation(fields: [lender_id], references: [id], onDelete: Cascade)

  @@map("hs_lenders_operational_details")
}

model HSLendersPartnershipsDetails {
  id                     Int                @id @default(autoincrement())
  lender_id              Int                @unique @map("lender_id")
  partnership_type       String?            @map("partnership_type")
  agreement_start_date   DateTime?          @map("agreement_start_date")
  agreement_end_date     DateTime?          @map("agreement_end_date")
  auto_renewal           Boolean            @default(false) @map("auto_renewal")
  renewal_notice_days    Int?               @map("renewal_notice_days")
  commission_structure   String?            @map("commission_structure")
  commission_percentage  Decimal?           @map("commission_percentage") @db.Decimal(10, 2)
  partnership_end_date   DateTime?          @map("partnership_end_date")
  partnership_start_date DateTime?          @map("partnership_start_date")
  partnership_status     PartnershipStatus? @default(PENDING) @map("partnership_status")
  payout_terms           PayoutTerms?       @default(CUSTOM)
  revenue_share_model    String?            @map("revenue_share_model")
  created_at             DateTime           @default(now()) @map("created_at")
  updated_at             DateTime           @updatedAt @map("updated_at")
  lender                 HSLenders          @relation(fields: [lender_id], references: [id], onDelete: Cascade)

  @@map("hs_lenders_partnerships_details")
}

model HSLoanProducts {
  id                                Int                                     @id @default(autoincrement())
  deleted_by_id                     Int?
  is_deleted                        Boolean?                                @default(false)
  lender_id                         Int                                     @map("lender_id")
  lender_name                       String?                                 @map("lender_name")
  partner_name                      String?                                 @map("partner_name")
  product_description               String?                                 @map("product_description")
  product_display_name              String?                                 @map("product_display_name")
  product_category                  ProductCategory?                        @map("product_category")
  product_status                    ProductStatus?                          @default(ACTIVE) @map("product_status")
  product_type                      ProductType?
  last_updated_date                 DateTime?                               @map("last_updated_date")
  is_active                         Boolean?                                @default(true) @map("is_active")
  created_at                        DateTime?                               @default(now()) @map("created_at")
  updated_at                        DateTime?                               @updatedAt @map("updated_at")
  created_by                        String?                                 @map("created_by")
  updated_by                        String?                                 @map("updated_by")
  hs_created_by_user_id             Int?                                    @map("hs_created_by_user_id")
  hs_createdate                     DateTime?                               @map("hs_createdate")
  hs_lastmodifieddate               DateTime?                               @map("hs_lastmodifieddate")
  hs_object_id                      String?                                 @map("hs_object_id")
  hs_updated_by_user_id             Int?                                    @map("hs_updated_by_user_id")
  hubspot_owner_id                  String?                                 @map("hubspot_owner_id")
  deleted_by                        B2BPartnersUsers?                       @relation("LoanProuductsDeletedBy", fields: [deleted_by_id], references: [id])
  lender                            HSLenders                               @relation(fields: [lender_id], references: [id], onDelete: Cascade)
  processing_details                HSLoanProductsApplicationAndProcessing?
  collateral_security               HSLoanProductsCollateralAndSecurity?
  loan_product_competitive_analysis HSLoanProductsCompetitiveAnalytics?
  eligibility_criteria              HSLoanProductsEligibilityCriteria[]
  financial_terms                   HSLoanProductsFinancialTerms?
  geographic_coverage               HSLoanProductsGeographicCoverage?
  performance_metrics               HSLoanProductsPerformanceMetrics?
  repayment_terms                   HSLoanProductsRepaymentTerms?
  special_features                  HSLoanProductsSpecialFeatures?
  system_integration                HSLoanProductsSystemIntegration?
  system_tracking                   HSLoanProductsSystemTracking?

  @@index([lender_id])
  @@index([is_active])
  @@index([product_type])
  @@index([product_category])
  @@index([product_status])
  @@index([created_at])
  @@map("hs_loan_products")
}

model HSLoanProductsSystemTracking {
  id                    Int                  @id @default(autoincrement())
  loan_product_id       Int                  @unique
  change_log            String?              @map("change_log")
  created_by            String?              @map("created_by")
  created_date          DateTime?            @map("created_date")
  last_modified_by      String?              @map("last_modified_by")
  last_modified_date    DateTime?            @map("last_modified_date")
  next_review_date      DateTime?            @map("next_review_date")
  notes                 String?              @map("notes")
  product_record_status ProductRecordStatus?
  review_frequency      ReviewFrequency?
  version_number        Int?                 @map("version_number")
  created_at            DateTime             @default(now())
  updated_at            DateTime             @default(now()) @updatedAt
  product               HSLoanProducts       @relation(fields: [loan_product_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_products_system_tracking")
}

model HSLoanProductsCompetitiveAnalytics {
  id                                Int                           @id @default(autoincrement())
  loan_product_id                   Int                           @unique
  market_positioning                LoanProductMarketPositioning?
  pricing_strategy                  PricingStrategy?
  created_at                        DateTime                      @default(now())
  updated_at                        DateTime                      @default(now()) @updatedAt
  loan_product_competitive_analysis HSLoanProducts                @relation(fields: [loan_product_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_products_competitive_analysis")
}

model HSLoanProductsEligibilityCriteria {
  id                              Int                      @id @default(autoincrement())
  loan_product_id                 Int                      @map("loan_product_id")
  criteria_type                   String?                  @map("criteria_type")
  criteria_name                   String?                  @map("criteria_name")
  criteria_description            String?                  @map("criteria_description")
  is_mandatory                    Boolean                  @default(true) @map("is_mandatory")
  validation_rule                 Json?                    @map("validation_rule")
  min_age                         Int?                     @map("min_age")
  max_age                         Int?                     @map("max_age")
  max_age_at_maturity             Int?                     @map("max_age_at_maturity")
  min_academic_percentage         Decimal?                 @map("min_academic_percentage") @db.Decimal(10, 2)
  entrance_exam_required          Boolean                  @default(false) @map("entrance_exam_required")
  entrance_exam_list              Json?                    @map("entrance_exam_list")
  minimum_percentage_required     Decimal?                 @map("minimum_percentage_required") @db.Decimal(10, 2)
  nationality_restrictions        NationalityRestrictions? @map("nationality_restrictions")
  residency_requirements          ResidencyRequirements?   @map("residency_requirements")
  target_segment                  TargetSegment?           @map("target_segment")
  maximum_family_income           Decimal?                 @map("maximum_family_income") @db.Decimal(10, 2)
  minimum_family_income           Decimal?                 @map("minimum_family_income") @db.Decimal(10, 2)
  min_annual_income               Decimal?                 @map("min_annual_income") @db.Decimal(10, 2)
  min_co_applicant_income         Decimal?                 @map("min_co_applicant_income") @db.Decimal(10, 2)
  employment_criteria             String?                  @map("employment_criteria")
  co_applicant_income_criteria    String?                  @map("co_applicant_income_criteria")
  co_applicant_required           String?                  @map("co_applicant_required")
  co_applicant_relationship       Json?                    @map("co_applicant_relationship")
  guarantor_required              Boolean?                 @default(false) @map("guarantor_required")
  min_credit_score                Int?                     @map("min_credit_score")
  credit_history_required         Boolean?                 @default(false) @map("credit_history_required")
  indian_citizen_only             Boolean?                 @default(true) @map("indian_citizen_only")
  nri_eligible                    Boolean?                 @default(false) @map("nri_eligible")
  pio_oci_eligible                Boolean?                 @default(false) @map("pio_oci_eligible")
  work_experience_required        Boolean?                 @default(false) @map("work_experience_required")
  min_work_experience_months      Int?                     @map("min_work_experience_months")
  admission_confirmation_required Boolean?                 @default(true) @map("admission_confirmation_required")
  created_at                      DateTime                 @default(now()) @map("created_at")
  updated_at                      DateTime                 @updatedAt @map("updated_at")
  loan_product                    HSLoanProducts           @relation(fields: [loan_product_id], references: [id], onDelete: Cascade)

  @@index([loan_product_id])
  @@map("hs_loan_products_eligibility_criteria")
}

model HSLoanProductsCollateralAndSecurity {
  id                             Int                          @id @default(autoincrement())
  loan_product_id                Int                          @unique @map("product_id")
  collateral_margin              Int?                         @map("collateral_margin")
  collateral_required            CollateralRequirement?       @map("collateral_required")
  collateral_threshold_amount    Decimal?                     @map("collateral_threshold_amount") @db.Decimal(10, 2)
  collateral_types_accepted      CollateralType?              @default(NA_PLOT)
  guarantor_required_security    GurantorRequired?            @default(NOT_REQUIRED)
  insurance_coverage_percentage  Int?                         @map("insurance_coverage_percentage")
  insurance_required             InsuranceRequired?           @default(NOT_REQUIRED)
  third_party_guarantee_required ThirdPartyGuaranteeRequired? @default(NO)
  created_at                     DateTime                     @default(now()) @map("created_at")
  updated_at                     DateTime                     @updatedAt @map("updated_at")
  product                        HSLoanProducts               @relation(fields: [loan_product_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_products_collateral_and_security")
}

model HSLoanProductsRepaymentTerms {
  id                        Int                 @id @default(autoincrement())
  loan_product_id           Int                 @unique @map("product_id")
  moratorium_type           MoratoriumType?     @map("moratorium_type")
  moratorium_period         Int?                @map("moratorium_period")
  repayment_frequency       RepaymentFrequency? @map("repayment_frequency")
  repayment_period_maximum  Int?                @map("repayment_period_maximum")
  repayment_period_minimum  Int?                @map("repayment_period_minimum")
  prepayment_allowed        Boolean?            @default(true) @map("prepayment_allowed")
  prepayment_charges        Decimal?            @map("prepayment_charges") @db.Decimal(10, 2)
  prepayment_lock_in_period Int?                @map("prepayment_lock_in_period")
  foreclosure_allowed       Boolean?            @default(true) @map("foreclosure_allowed")
  foreclosure_charges       String?             @map("foreclosure_charges")
  late_payment_charges      String?             @map("late_payment_charges")
  bounce_charges            Decimal?            @map("bounce_charges") @db.Decimal(10, 2)
  part_payment_allowed      PartPaymentAllowed? @map("part_payment_allowed")
  part_payment_minimum      Int?                @map("part_payment_minimum")
  created_at                DateTime            @default(now()) @map("created_at")
  updated_at                DateTime            @updatedAt @map("updated_at")
  product                   HSLoanProducts      @relation(fields: [loan_product_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_products_repayment_terms")
}

model HSLoanProductsApplicationAndProcessing {
  id                           Int                  @id @default(autoincrement())
  loan_product_id              Int                  @unique @map("product_id")
  application_mode             ApplicationMode?     @map("application_mode")
  disbursement_process         DisbursementProcess? @map("disbursement_process")
  disbursement_timeline        String?              @map("disbursement_timeline")
  partial_disbursement_allowed Boolean?             @default(false) @map("partial_disbursement_allowed")
  disbursement_stages          Json?                @map("disbursement_stages")
  documentation_list           String?              @map("documentation_list")
  mandatory_documents          String?              @map("mandatory_documents")
  optional_documents           String?              @map("optional_documents")
  created_at                   DateTime             @default(now()) @map("created_at")
  updated_at                   DateTime             @updatedAt @map("updated_at")
  product                      HSLoanProducts       @relation(fields: [loan_product_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_products_application_and_processing")
}

model HSLoanProductsGeographicCoverage {
  id                         Int                     @id @default(autoincrement())
  loan_product_id            Int                     @unique @map("product_id")
  course_restrictions        String?                 @map("course_restrictions")
  not_supported_universities String?                 @map("not_supported_universities")
  restricted_countries       String?                 @map("restricted_countries")
  course_duration_minimum    Int?                    @map("course_duration_minimum")
  course_duration_maximum    Int?                    @map("course_duration_maximum")
  supported_course_types     LoanProductCourseTypes? @map("supported_course_types")
  created_at                 DateTime                @default(now()) @map("created_at")
  updated_at                 DateTime                @updatedAt @map("updated_at")
  product                    HSLoanProducts          @relation(fields: [loan_product_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_products_geographic_coverage")
}

model HSLoanProductsSpecialFeatures {
  id                          Int                       @id @default(autoincrement())
  loan_product_id             Int                       @unique @map("product_id")
  digital_features            DigitalFeatures?          @map("digital_features")
  customer_support_features   CustomerSupportFeatures?  @map("customer_support_features")
  flexible_repayment_options  FlexibleRepaymentOptions? @map("flexible_repayment_options")
  tax_benefits_available      String?                   @map("tax_benefits_available")
  forex_tax_benefits          String?                   @map("forex_tax_benefits")
  grace_period_benefits       String?                   @map("grace_period_benefits")
  insurance_coverage_included Boolean?                  @default(false) @map("insurance_coverage_included")
  loyalty_benefits            String?                   @map("loyalty_benefits")
  created_at                  DateTime                  @default(now()) @map("created_at")
  updated_at                  DateTime                  @updatedAt @map("updated_at")
  product                     HSLoanProducts            @relation(fields: [loan_product_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_products_special_features")
}

model HSLoanProductsPerformanceMetrics {
  id                           Int            @id @default(autoincrement())
  loan_product_id              Int            @unique @map("product_id")
  application_volume_monthly   Int?           @map("application_volume_monthly")
  application_volume_quarterly Int?           @map("application_volume_quarterly")
  application_volume_yearly    Int?           @map("application_volume_yearly")
  approval_rate                Decimal?       @map("approval_rate") @db.Decimal(10, 2)
  average_loan_amount          Decimal?       @map("average_loan_amount") @db.Decimal(10, 2)
  average_processing_days      Int?           @map("average_processing_days")
  customer_satisfaction_rating Int?           @map("customer_satisfaction_rating")
  product_popularity_score     Int?           @map("product_popularity_score")
  created_at                   DateTime?      @default(now()) @map("created_at")
  updated_at                   DateTime?      @updatedAt @map("updated_at")
  product                      HSLoanProducts @relation(fields: [loan_product_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_products_performance_metrics")
}

model HSLoanProductsSystemIntegration {
  id                          Int                    @id @default(autoincrement())
  loan_product_id             Int                    @unique @map("product_id")
  api_availability            ApiAvailability?       @map("api_availability")
  technical_documentation_url String?                @map("technical_documentation_url")
  integration_complexity      IntegrationComplexity? @map("integration_complexity")
  data_format                 DataFormat?            @map("data_format")
  sandbox_environment         SandboxEnvironment?    @map("sandbox_environment")
  webhook_support             WebHookSupport?        @map("webhook_support")
  created_at                  DateTime?              @default(now()) @map("created_at")
  updated_at                  DateTime?              @updatedAt @map("updated_at")
  product                     HSLoanProducts         @relation(fields: [loan_product_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_products_system_integration")
}

model HSLoanProductsFinancialTerms {
  id                            Int                @id @default(autoincrement())
  loan_product_id               Int                @unique @map("product_id")
  interest_rate_type            InterestRateType?  @map("interest_rate_type")
  interest_rate_range_min       Decimal?           @map("interest_rate_range_min") @db.Decimal(10, 2)
  interest_rate_range_max       Decimal?           @map("interest_rate_range_max") @db.Decimal(10, 2)
  legal_charges                 Decimal?           @map("legal_charges") @db.Decimal(10, 2)
  loan_to_value_ratio           Int?               @map("loan_to_value_ratio")
  rack_rate                     Decimal?           @map("rack_rate") @db.Decimal(10, 2)
  valuation_charges             Decimal?           @map("valuation_charges") @db.Decimal(10, 2)
  processing_fee_type           ProcessingFeeType? @map("processing_fee_type")
  processing_fee_percentage     Decimal?           @map("processing_fee_percentage") @db.Decimal(10, 2)
  processing_fee_amount         Decimal?           @map("processing_fee_amount") @db.Decimal(10, 2)
  processing_fee_minimum        Decimal?           @map("processing_fee_minimum") @db.Decimal(10, 2)
  processing_fee_maximum        Decimal?           @map("processing_fee_maximum") @db.Decimal(10, 2)
  administrative_charges        Decimal?           @map("administrative_charges") @db.Decimal(10, 2)
  margin_money_percentage       Decimal?           @map("margin_money_percentage") @db.Decimal(10, 2)
  maximum_loan_amount_secured   Decimal?           @map("maximum_loan_amount_secured") @db.Decimal(10, 2)
  maximum_loan_amount_unsecured Decimal?           @map("maximum_loan_amount_unsecured") @db.Decimal(10, 2)
  minimum_loan_amount_secured   Decimal?           @map("minimum_loan_amount_secured") @db.Decimal(10, 2)
  minimum_loan_amount_unsecured Decimal?           @map("minimum_loan_amount_unsecured") @db.Decimal(10, 2)
  created_at                    DateTime?          @default(now()) @map("created_at")
  updated_at                    DateTime?          @updatedAt @map("updated_at")
  product                       HSLoanProducts     @relation(fields: [loan_product_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_products_financial_terms")
}

model HSLoanDocuments {
  id                    Int                                  @id @default(autoincrement())
  document_category     DocumentCategory                     @map("document_category")
  document_description  String?                              @map("document_description")
  document_display_name String?                              @map("document_display_name")
  document_id           String?                              @unique @map("document_id")
  document_name         String?                              @map("document_name")
  document_priority     DocumentPriority?                    @default(OPTIONAL) @map("document_priority")
  document_stage        DocumentStage?                       @map("document_stage")
  document_sub_category String?                              @map("document_sub_category")
  document_type         DocumentType?                        @map("document_type")
  is_active             Boolean?                             @default(true) @map("is_active")
  created_at            DateTime?                            @default(now()) @map("created_at")
  updated_at            DateTime?                            @updatedAt @map("updated_at")
  created_by            String?                              @map("created_by")
  updated_by            String?                              @map("updated_by")
  hs_created_by_user_id Int?                                 @map("hs_created_by_user_id")
  hs_createdate         DateTime?                            @map("hs_createdate")
  hs_lastmodifieddate   DateTime?                            @map("hs_lastmodifieddate")
  hs_object_id          String?                              @map("hs_object_id")
  hs_updated_by_user_id Int?                                 @map("hs_updated_by_user_id")
  hubspot_owner_id      String?                              @map("hubspot_owner_id")
  alternative_docs      HSLoanDocumentsAlternativeDocuments?
  applicability_rules   HSLoanDocumentsApplicability?
  compliance_config     HSLoanDocumentsCompliance?
  customer_experience   HSLoanDocumentsCustomerExperience?
  digital_config        HSLoanDocumentsDigitalConfigs?
  performance_metrics   HSLoanDocumentsPerformanceMetrics?
  processing_workflow   HSLoanDocumentsProcessingWorkflow?
  specifications        HSLoanDocumentsSpecification?
  system_tracking       HSLoanDocumentsSystemTracking?

  @@index([document_category])
  @@index([document_type])
  @@index([created_at])
  @@map("hs_loan_documents")
}

model HSLoanDocumentsSystemTracking {
  id                      String                @id @default(cuid())
  document_master_id      Int                   @unique @map("document_master_id")
  change_history          String?               @map("change_history")
  created_by              String?               @map("created_by")
  created_date            DateTime?             @map("created_date")
  document_record_status  DocumentRecordStatus? @map("document_record_status")
  improvement_suggestions String?               @map("improvement_suggestions")
  last_modified_by        String?               @map("last_modified_by")
  last_modified_date      DateTime?             @map("last_modified_date")
  next_review_date        DateTime?             @map("next_review_date")
  notes                   String?               @map("notes")
  review_frequency        ReviewFrequency?      @map("review_frequency")
  version_number          String?               @map("version_number")
  created_at              DateTime              @default(now()) @map("created_at")
  updated_at              DateTime              @updatedAt @map("updated_at")
  document_master         HSLoanDocuments       @relation(fields: [document_master_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_documents_system_tracking")
}

model HSLoanDocumentsProcessingWorkflow {
  id                            String                     @id @default(cuid())
  document_master_id            Int                        @unique @map("document_master_id")
  auto_extraction_possible      AutoExtractionPossible?    @map("auto_extraction_possible")
  data_points_extractable       String?                    @map("data_points_extractable")
  maximum_resubmission_attempts Int?                       @map("maximum_resubmission_attempts")
  ocr_compatibility             OCRCompatibility?          @map("ocr_compatibility")
  parallel_processing_allowed   ParallelProcessingAllowed? @map("parallel_processing_allowed")
  rejection_criteria            String?                    @map("rejection_criteria")
  resubmission_allowed          ResubmissionAllowed?       @map("resubmission_allowed")
  validation_rules              String?                    @map("validation_rules")
  created_at                    DateTime                   @default(now()) @map("created_at")
  updated_at                    DateTime                   @updatedAt @map("updated_at")
  document_master               HSLoanDocuments            @relation(fields: [document_master_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_documents_processing_workflow")
}

model HSLoanDocumentsSpecification {
  id                        Int                      @id @default(autoincrement())
  document_master_id        Int                      @unique @map("document_master_id")
  accepted_formats          AcceptedFormats?
  color_requirements        ColorRequirements?
  combined_document_allowed CombinedDocumentAllowed?
  language_requirements     LanguageRequirements?
  maximum_file_size_mb      Float?
  multiple_pages_allowed    MultiplePagesAllowed?
  quality_standards         QualityStandards?
  resolution_requirements   String?
  createdAt                 DateTime                 @default(now())
  updatedAt                 DateTime                 @updatedAt
  document_master           HSLoanDocuments          @relation(fields: [document_master_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_documents_specification")
}

model HSLoanDocumentsApplicability {
  id                          Int                   @id @default(autoincrement())
  document_master_id          Int                   @unique @map("document_master_id")
  applicable_for_student      ApplicabilityStatus   @map("applicable_for_student")
  applicable_for_coapplicant1 ApplicabilityStatus   @map("applicable_for_coapplicant1")
  applicable_for_coapplicant2 ApplicabilityStatus   @map("applicable_for_coapplicant2")
  applicable_for_coapplicant3 ApplicabilityStatus   @map("applicable_for_coapplicant3")
  applicable_for_guarantor    ApplicabilityStatus   @map("applicable_for_guarantor")
  age_criteria                String?               @map("age_criteria")
  collateral_dependency       CollateralDependency?
  income_criteria             String?               @map("income_criteria")
  loan_amount_threshold       String?               @map("loan_amount_threshold")
  required_for_countries      RequiredForCountries? @map("required_for_countries")
  required_for_courses        RequiredForCourses?   @map("required_for_courses")
  required_for_lenders        Json?                 @map("required_for_lenders")
  required_for_loan_products  Json?                 @map("required_for_loan_products")
  created_at                  DateTime              @default(now()) @map("created_at")
  updated_at                  DateTime              @updatedAt @map("updated_at")
  document_master             HSLoanDocuments       @relation(fields: [document_master_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_documents_applicability")
}

model HSLoanDocumentsCompliance {
  id                    Int             @id @default(autoincrement())
  document_master_id    Int             @unique @map("document_master_id")
  data_retention_policy String?         @map("data_retention_policy")
  data_sensitivity      DataSensitivity @map("data_sensitivity")
  gdpr_relevance        GdprRelevance?  @map("gdpr_relevance")
  created_at            DateTime        @default(now()) @map("created_at")
  updated_at            DateTime        @updatedAt @map("updated_at")
  document_master       HSLoanDocuments @relation(fields: [document_master_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_documents_compliance")
}

model HSLoanDocumentsDigitalConfigs {
  id                         Int                       @id @default(autoincrement())
  document_master_id         Int                       @unique @map("document_master_id")
  api_integration_available  DocumentAvailability?     @map("api_integration_available")
  automated_processing       AutomatedProcessing?      @map("automated_processing")
  blockchain_verification    BlockchainVerification?   @map("blockchain_verification")
  digital_signature_required DigitalSignatureRequired? @map("digital_signature_required")
  e_signature_accepted       ESignatureAccepted?       @map("e_signature_accepted")
  real_time_verification     RealTimeVerification?     @map("real_time_verification")
  created_at                 DateTime                  @default(now()) @map("created_at")
  updated_at                 DateTime                  @updatedAt @map("updated_at")
  document_master            HSLoanDocuments           @relation(fields: [document_master_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_documents_digital_configs")
}

model HSLoanDocumentsAlternativeDocuments {
  id                             Int             @id @default(autoincrement())
  primary_document_id            Int             @unique @map("primary_document_id")
  alternative_documents_accepted String          @map("alternative_documents_accepted")
  equivalent_documents           String?         @map("equivalent_documents")
  exemption_criteria             String?         @map("exemption_criteria")
  special_cases_handling         String?         @map("special_cases_handling")
  waiver_conditions              String?         @map("waiver_conditions")
  created_at                     DateTime        @default(now()) @map("created_at")
  updated_at                     DateTime        @updatedAt @map("updated_at")
  primary_document               HSLoanDocuments @relation(fields: [primary_document_id], references: [id], onDelete: Cascade)

  @@index([primary_document_id])
  @@map("hs_loan_documents_alternative_documents")
}

model HSLoanDocumentsPerformanceMetrics {
  id                            String          @id @default(cuid())
  document_master_id            Int             @unique @map("document_master_id")
  acceptance_rate               Float?          @map("acceptance_rate")
  automation_level              Float?          @map("automation_level")
  average_processing_time_hours Float?          @map("average_processing_time_hours")
  bottleneck_score              Float?          @map("bottleneck_score")
  customer_satisfaction_score   Float?          @map("customer_satisfaction_score")
  error_rate                    Float?          @map("error_rate")
  rejection_rate                Float?          @map("rejection_rate")
  resubmission_rate             Float?          @map("resubmission_rate")
  submission_rate               Float?          @map("submission_rate")
  verification_success_rate     Float?          @map("verification_success_rate")
  created_at                    DateTime        @default(now()) @map("created_at")
  updated_at                    DateTime        @updatedAt @map("updated_at")
  document_master               HSLoanDocuments @relation(fields: [document_master_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_documents_performance_metrics")
}

model HSLoanDocumentsCustomerExperience {
  id                        Int                   @id @default(autoincrement())
  document_master_id        Int                   @unique @map("document_master_id")
  customer_support_faq      Json?                 @map("customer_support_faq")
  sample_document_available DocumentAvailability?
  created_at                DateTime              @default(now()) @map("created_at")
  updated_at                DateTime              @updatedAt @map("updated_at")
  document_master           HSLoanDocuments       @relation(fields: [document_master_id], references: [id], onDelete: Cascade)

  @@map("hs_loan_documents_customer_experience")
}

model HSCommissionSettlements {
  id                          Int                                           @id @default(autoincrement())
  lead_reference_id           String?                                       @map("lead_reference_id")
  student_id                  String?                                       @map("student_id")
  deleted_by_id               Int?
  partner_id                  Int?                                          @map("partner_id")
  partner_name                String?                                       @map("partner_name")
  student_name                String?                                       @map("student_name")
  verified_by                 String?                                       @map("verified_by")
  settlement_period           SettlementPeriod?                             @map("settlement_period")
  settlement_month            SettlementMonth?                              @map("settlement_month")
  settlement_year             Int?                                          @map("settlement_year")
  settlement_reference_number String?                                       @map("settlement_reference_number")
  is_deleted                  Boolean?                                      @default(false)
  is_active                   Boolean?                                      @default(true) @map("is_active")
  created_at                  DateTime?                                     @default(now()) @map("created_at")
  updated_at                  DateTime?                                     @updatedAt @map("updated_at")
  created_by                  String?                                       @map("created_by")
  updated_by                  String?                                       @map("updated_by")
  hs_created_by_user_id       Int?                                          @map("hs_created_by_user_id")
  hs_createdate               DateTime?                                     @map("hs_createdate")
  hs_lastmodifieddate         DateTime?                                     @map("hs_lastmodifieddate")
  hs_object_id                String?                                       @map("hs_object_id")
  hs_updated_by_user_id       Int?                                          @map("hs_updated_by_user_id")
  hubspot_owner_id            String?                                       @map("hubspot_owner_id")
  deleted_by                  B2BPartnersUsers?                             @relation("CommissionDeletedBy", fields: [deleted_by_id], references: [id])
  calculation_details         HSCommissionSettlementsCommissionCalculation?
  communication               HSCommissionSettlementsCommunication?
  documentaion                HSCommissionSettlementsDocumentation?
  hold_dispute                HSCommissionSettlementsHoldAndDisputes?
  loan_details                HSCommissionSettlementsLoanDetails?
  payment_details             HSCommissionSettlementsPaymentProcessing?
  performance_metrics         HSCommissionSettlementsPerformanceAnalytics?
  reconciliation              HSCommissionSettlementsReconciliations?
  status_history              HSCommissionSettlementsSettlementStatus?
  system_tracking             HSCommissionSettlementsSystemTracking?
  tax_deductions              HSCommissionSettlementsTaxAndDeductions?
  transaction                 HSCommissionSettlementsTransactionDetails?

  @@index([partner_id])
  @@index([lead_reference_id])
  @@index([student_id])
  @@index([created_at])
  @@map("hs_commission_settlements")
}

model HSCommissionSettlementsSettlementStatus {
  id                  Int                     @id @default(autoincrement())
  settlement_id       Int                     @unique @map("settlement_id")
  calculated_by       String?                 @map("calculated_by")
  calculation_date    DateTime?
  settlement_status   SettlementStatus?
  verification_date   DateTime?
  verification_status VerificationStatus?
  created_at          DateTime                @default(now()) @map("created_at")
  updated_at          DateTime                @updatedAt @map("updated_at")
  settlement          HSCommissionSettlements @relation(fields: [settlement_id], references: [id], onDelete: Cascade)

  @@index([settlement_id])
  @@index([created_at])
  @@map("hs_commission_settlements_settlement_status")
}

model HSCommissionSettlementsSystemTracking {
  id                         Int                     @id @default(autoincrement())
  settlement_id              Int                     @unique @map("settlement_id")
  audit_trail                String?                 @map("audit_trail")
  change_log                 String?                 @map("change_log")
  created_by                 String?                 @map("created_by")
  created_date               DateTime?               @default(now()) @map("created_date")
  data_source                CommissionDataSource?   @map("data_source")
  integration_status         IntegrationStatus?      @map("integration_status")
  internal_notes             String?                 @map("internal_notes")
  last_modified_by           String?                 @map("last_modified_by")
  last_modified_date         DateTime?               @updatedAt @map("last_modified_date")
  notes                      String?                 @map("notes")
  settlement_record_status   SettlementRecordStatus? @map("settlement_record_status")
  system_generated           SystemGenerated?        @map("system_generated")
  version_number             String?                 @map("version_number")
  batch_payment_id           String?                 @map("batch_payment_id")
  disbursement_trigger       DisbursementTrigger?    @map("disbursement_trigger")
  original_transaction_id    String?                 @map("original_transaction_id")
  related_settlement_id      String?                 @map("related_settlement_id")
  transaction_sub_type       String?                 @map("transaction_sub_type")
  transaction_type           TransactionTypes?       @map("transaction_type")
  created_at                 DateTime                @default(now()) @map("created_at")
  updated_at                 DateTime                @updatedAt @map("updated_at")
  settlement_system_tracking HSCommissionSettlements @relation(fields: [settlement_id], references: [id], onDelete: Cascade)

  @@map("hs_commission_settlements_system_tracking")
}

model HSCommissionSettlementsTransactionDetails {
  id                      Int                     @id @default(autoincrement())
  settlement_id           Int                     @unique @map("settlement_id")
  batch_payment_id        String?                 @map("batch_payment_id")
  disbursement_trigger    DisbursementTrigger?    @map("disbursement_trigger")
  original_transaction_id String?                 @map("original_transaction_id")
  related_settlement_id   String?                 @map("related_settlement_id")
  transaction_sub_type    String?                 @map("transaction_sub_type")
  transaction_type        TransactionTypes?       @map("transaction_type")
  created_at              DateTime                @default(now()) @map("created_at")
  updated_at              DateTime                @updatedAt @map("updated_at")
  transaction             HSCommissionSettlements @relation(fields: [settlement_id], references: [id], onDelete: Cascade)

  @@map("hs_commission_settlements_transaction_details")
}

model HSCommissionSettlementsCommissionCalculation {
  id                      Int                     @id @default(autoincrement())
  settlement_id           Int                     @unique @map("settlement_id")
  commission_model        CommissionModel?        @map("commission_model")
  commission_rate_applied Decimal?                @map("commission_rate_applied") @db.Decimal(10, 2)
  commission_tier_applied String?                 @map("commission_tier_applied")
  gross_commission_amount Decimal?                @map("gross_commission_amount") @db.Decimal(12, 2)
  bonus_amount            Decimal?                @map("bonus_amount") @db.Decimal(12, 2)
  bonus_rate_applied      Decimal?                @map("bonus_rate_applied") @db.Decimal(10, 2)
  incentive_amount        Decimal?                @map("incentive_amount") @db.Decimal(12, 2)
  adjustment_amount       Decimal?                @map("adjustment_amount") @db.Decimal(12, 2)
  adjustment_reason       String?                 @map("adjustment_reason")
  penalty_amount          Decimal?                @map("penalty_amount") @db.Decimal(12, 2)
  total_gross_amount      Decimal?                @map("total_gross_amount") @db.Decimal(12, 2)
  created_at              DateTime                @default(now()) @map("created_at")
  updated_at              DateTime                @updatedAt @map("updated_at")
  settlement              HSCommissionSettlements @relation(fields: [settlement_id], references: [id], onDelete: Cascade)

  @@map("hs_commission_settlements_commission_calculations")
}

model HSCommissionSettlementsCommunication {
  id                        Int                      @id @default(autoincrement())
  settlement_id             Int                      @unique @map("settlement_id")
  acknowledgment_date       DateTime?                @map("acknowledgment_date")
  acknowledgment_received   AcknowledgmentStatus?    @map("acknowledgment_received")
  communication_log         String?                  @map("communication_log")
  email_sent_count          Int?                     @map("email_sent_count")
  last_communication_date   DateTime?                @map("last_communication_date")
  notification_date         DateTime?                @map("notification_date")
  notification_method       NotificationMethod?      @map("notification_method")
  partner_notification_sent PartnerNotificationSent? @map("partner_notification_sent")
  sms_sent_count            Int?                     @map("sms_sent_count")
  created_at                DateTime                 @default(now()) @map("created_at")
  updated_at                DateTime                 @updatedAt @map("updated_at")
  settlement                HSCommissionSettlements  @relation(fields: [settlement_id], references: [id], onDelete: Cascade)

  @@map("hs_commission_settlements_communication")
}

model HSCommissionSettlementsLoanDetails {
  id                          Int                     @id @default(autoincrement())
  settlement_id               Int                     @unique @map("settlement_id")
  course_name                 String?                 @map("course_name")
  lender_name                 String                  @map("lender_name")
  loan_amount_disbursed       Decimal?                @map("loan_amount_disbursed") @db.Decimal(12, 2)
  loan_disbursement_date      DateTime?               @map("loan_disbursement_date")
  loan_product_name           String?                 @map("loan_product_name")
  student_destination_country String?                 @map("student_destination_country")
  university_name             String?                 @map("university_name")
  created_at                  DateTime                @default(now()) @map("created_at")
  updated_at                  DateTime                @updatedAt @map("updated_at")
  settlement                  HSCommissionSettlements @relation(fields: [settlement_id], references: [id], onDelete: Cascade)

  @@index([settlement_id])
  @@index([loan_disbursement_date])
  @@map("hs_commission_settlements_loan_details")
}

model HSCommissionSettlementsPaymentProcessing {
  id                         Int                     @id @default(autoincrement())
  settlement_id              Int                     @unique @map("settlement_id")
  beneficiary_name           String?                 @map("beneficiary_name")
  beneficiary_account_number String?                 @map("beneficiary_account_number")
  beneficiary_bank_name      String?                 @map("beneficiary_bank_name")
  beneficiary_ifsc_code      String?                 @map("beneficiary_ifsc_code")
  last_retry_date            DateTime?               @map("last_retry_date")
  payment_completed_date     DateTime?               @map("payment_completed_date")
  payment_failure_reason     String?                 @map("payment_failure_reason")
  payment_initiation_date    DateTime?               @map("payment_initiation_date")
  payment_method             PaymentMethod?          @map("payment_method")
  payment_reference_number   String?                 @map("payment_reference_number")
  payment_status             PaymentStatus?          @map("payment_status")
  retry_attempt_count        Int?                    @map("retry_attempt_count")
  bank_transaction_id        String?                 @unique @map("bank_transaction_id")
  payment_gateway_reference  String?                 @map("payment_gateway_reference")
  created_at                 DateTime                @default(now()) @map("created_at")
  updated_at                 DateTime                @updatedAt @map("updated_at")
  settlement                 HSCommissionSettlements @relation(fields: [settlement_id], references: [id], onDelete: Cascade)

  @@map("hs_commission_settlements_payment_processing")
}

model HSCommissionSettlementsTaxAndDeductions {
  id                           Int                     @id @default(autoincrement())
  settlement_id                Int                     @unique @map("settlement_id")
  gst_applicable               Boolean?                @default(true) @map("gst_applicable")
  gst_rate_applied             Decimal?                @map("gst_rate_applied") @db.Decimal(10, 2)
  gst_amount                   Decimal?                @map("gst_amount") @db.Decimal(12, 2)
  net_payable_amount           Decimal?                @map("net_payable_amount") @db.Decimal(12, 2)
  service_tax_amount           Int?                    @map("service_tax_amount")
  other_deductions             Decimal?                @map("other_deductions") @db.Decimal(12, 2)
  other_deductions_description String?                 @map("other_deductions_description")
  tds_applicable               Boolean?                @default(true) @map("tds_applicable")
  tds_rate_applied             Decimal?                @map("tds_rate_applied") @db.Decimal(10, 2)
  tds_amount                   Decimal?                @map("tds_amount") @db.Decimal(12, 2)
  tds_certificate_number       Int?                    @map("tds_certificate_number")
  withholding_tax_applicable   Boolean?                @default(false) @map("withholding_tax_applicable")
  withholding_tax_rate         Decimal?                @map("withholding_tax_rate") @db.Decimal(10, 2)
  withholding_tax_amount       Decimal?                @map("withholding_tax_amount") @db.Decimal(12, 2)
  total_deductions             Decimal?                @map("total_deductions") @db.Decimal(12, 2)
  created_at                   DateTime                @default(now()) @map("created_at")
  updated_at                   DateTime                @updatedAt @map("updated_at")
  settlement                   HSCommissionSettlements @relation(fields: [settlement_id], references: [id], onDelete: Cascade)

  @@map("hs_commission_settlements_tax_and_deductions")
}

model HSCommissionSettlementsDocumentation {
  id                       Int                     @id @default(autoincrement())
  settlement_id            Int                     @unique @map("settlement_id")
  agreement_reference      String?                 @map("agreement_reference")
  invoice_required         Boolean?                @default(true) @map("invoice_required")
  invoice_number           String?                 @unique @map("invoice_number")
  invoice_date             DateTime?               @map("invoice_date")
  invoice_amount           Decimal?                @map("invoice_amount") @db.Decimal(12, 2)
  invoice_status           InvoiceStatus?          @map("invoice_status")
  invoice_url              String?                 @map("invoice_url")
  payment_terms_applied    String?                 @map("payment_terms_applied")
  supporting_documents     String?                 @map("supporting_documents")
  tax_certificate_required TaxCertificateRequired? @map("tax_certificate_required")
  tax_certificate_url      String?                 @map("tax_certificate_url")
  created_at               DateTime                @default(now()) @map("created_at")
  updated_at               DateTime                @updatedAt @map("updated_at")
  settlement               HSCommissionSettlements @relation(fields: [settlement_id], references: [id], onDelete: Cascade)

  @@map("hs_commission_settlements_documentation")
}

model HSCommissionSettlementsHoldAndDisputes {
  id                       Int                     @id @default(autoincrement())
  settlement_id            Int                     @unique @map("settlement_id")
  dispute_date             DateTime?               @map("dispute_date")
  dispute_description      String?                 @map("dispute_description")
  dispute_raised           Boolean?                @default(false) @map("dispute_raised")
  dispute_raised_by        String?                 @map("dispute_raised_by")
  dispute_resolution       String?                 @map("dispute_resolution")
  dispute_resolution_date  DateTime?               @map("dispute_resolution_date")
  dispute_resolved_by      String?                 @map("dispute_resolved_by")
  hold_date                DateTime?               @map("hold_date")
  hold_initiated_by        String?                 @map("hold_initiated_by")
  hold_reason              HoldReason?             @map("hold_reason")
  hold_release_approved_by String?                 @map("hold_release_approved_by")
  hold_release_date        DateTime?               @map("hold_release_date")
  on_hold                  Boolean?                @default(false) @map("on_hold")
  created_at               DateTime                @default(now()) @map("created_at")
  updated_at               DateTime                @updatedAt @map("updated_at")
  settlement               HSCommissionSettlements @relation(fields: [settlement_id], references: [id], onDelete: Cascade)

  @@map("hs_commission_settlements_hold_and_disputes")
}

model HSCommissionSettlementsReconciliations {
  id                       Int                     @id @default(autoincrement())
  settlement_id            Int                     @unique @map("settlement_id")
  reconciliation_status    ReconciliationStatus?   @default(PENDING) @map("reconciliation_status")
  reconciliation_date      DateTime?               @map("reconciliation_date")
  reconciled_by            String?                 @map("reconciled_by")
  reconciliation_notes     String?                 @map("reconciliation_notes")
  bank_statement_reference String?                 @map("bank_statement_reference")
  discrepancy_amount       Decimal?                @map("discrepancy_amount") @db.Decimal(12, 2)
  discrepancy_reason       String?                 @map("discrepancy_reason")
  created_at               DateTime                @default(now()) @map("created_at")
  updated_at               DateTime                @updatedAt @map("updated_at")
  settlement               HSCommissionSettlements @relation(fields: [settlement_id], references: [id], onDelete: Cascade)

  @@map("hs_commission_settlements_reconciliations")
}

model HSCommissionSettlementsPerformanceAnalytics {
  id                          Int                     @id @default(autoincrement())
  settlement_id               Int                     @unique @map("settlement_id")
  sla_breach                  Boolean?                @default(false) @map("sla_breach")
  sla_breach_reason           String?                 @map("sla_breach_reason")
  partner_satisfaction_rating Decimal?                @map("partner_satisfaction_rating") @db.Decimal(3, 2)
  payment_delay_days          Int?                    @map("payment_delay_days")
  processing_time_days        Int?                    @map("processing_time_days")
  created_at                  DateTime                @default(now()) @map("created_at")
  updated_at                  DateTime                @updatedAt @map("updated_at")
  settlement                  HSCommissionSettlements @relation(fields: [settlement_id], references: [id], onDelete: Cascade)

  @@map("hs_commission_settlements_performance_analytics")
}

model MktEligibilityCheckerLeads {
  id         Int               @id @default(autoincrement())
  contact_id Int               @unique
  created_at DateTime          @default(now())
  updated_at DateTime          @updatedAt
  contact    HSEdumateContacts @relation(fields: [contact_id], references: [id])

  @@map("mkt_eligibility_checker_leads")
}

model MktEmiCalculatorLeads {
  id         Int               @id @default(autoincrement())
  contact_id Int               @unique
  created_at DateTime          @default(now())
  updated_at DateTime          @updatedAt
  contact    HSEdumateContacts @relation(fields: [contact_id], references: [id])

  @@map("mkt_emi_calculator_leads")
}

model CurrencyConfigs {
  id                  Int      @id @default(autoincrement())
  code                String   @unique @db.VarChar(3)
  iso_code            String   @db.VarChar(3)
  symbol              String   @db.VarChar(10)
  name                String   @db.VarChar(100)
  countries           Json
  position            String   @db.VarChar(10)
  thousands_separator String   @default(",") @db.VarChar(1)
  decimal_separator   String   @default(".") @db.VarChar(1)
  min_loan_amount     Decimal  @db.Decimal(15, 2)
  max_loan_amount     Decimal  @db.Decimal(15, 2)
  formatting          Json
  quick_amounts       Json
  large_amount_units  Json
  is_active           Boolean  @default(true)
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt

  @@index([code], map: "idx_currency_code")
  @@index([is_active], map: "idx_currency_active")
  @@index([code, is_active], map: "idx_currency_code_active")
  @@map("currency_configs")
}

model AuditLog {
  id             Int         @id @default(autoincrement())
  table_name     String      @map("table_name")
  record_id      String      @map("record_id")
  action         AuditAction @map("action")
  old_values     Json?       @map("old_values")
  new_values     Json?       @map("new_values")
  changed_fields String[]    @map("changed_fields")
  changed_by     Int?        @map("changed_by")
  changed_at     DateTime    @default(now()) @map("changed_at")
  ip_address     String?     @map("ip_address")
  user_agent     String?     @map("user_agent")

  @@index([table_name, record_id])
  @@index([changed_by])
  @@index([changed_at])
  @@map("audit_logs")
}

enum AuditAction {
  CREATE
  UPDATE
  DELETE
}

enum I20CasStatus {
  YES            @map("Yes")
  NO             @map("No")
  NOT_APPLICABLE @map("Not Applicable")
  PENDING        @map("Pending")
}

enum ApplicationStatusEnum {
  PRE_APPROVED           @map("Pre-Approved")
  APPROVED               @map("Approved")
  SANCTION_LETTER_ISSUED @map("Sanction Letter Issued")
  DISBURSEMENT_PENDING   @map("Disbursement Pending")
  DISBURSED              @map("Disbursed")
  REJECTED               @map("Rejected")
  ON_HOLD                @map("On Hold")
  WITHDRAWN              @map("Withdrawn")
  CANCELLED              @map("Cancelled")
}

enum PriorityLevel {
  HIGH   @map("High")
  MEDIUM @map("Medium")
  LOW    @map("Low")
  URGENT @map("Urgent")
}

enum RecordStatus {
  ACTIVE    @map("Active")
  COMPLETED @map("Completed")
  CANCELLED @map("Cancelled")
  ARCHIVED  @map("Archived")
}

enum LoanProductType {
  SECURED           @map("Secured")
  UNSECURED         @map("Unsecured")
  GOVERNMENT_SCHEME @map("Government Scheme")
}

enum InterestRateType {
  FIXED        @map("Fixed")
  FLOATING     @map("Floating")
  HYBRID       @map("Hybrid")
  CHOICE_BASED @map("Choice Based")
}

enum DelayReason {
  INCOMPLETE_DOCUMENTS    @map("Incomplete Documents")
  CUSTOMER_NOT_RESPONDING @map("Customer Not Responding")
  LENDER_PROCESSING       @map("Lender Processing")
  INTERNAL_REVIEW         @map("Internal Review")
  COMPLIANCE_CHECK        @map("Compliance Check")
  OTHER                   @map("Other")
}

enum RejectionReason {
  INSUFFICIENT_INCOME     @map("Insufficient Income")
  POOR_CREDIT_SCORE       @map("Poor Credit Score")
  INCOMPLETE_DOCUMENTS    @map("Incomplete Documents")
  COURSE_NOT_APPROVED     @map("Course Not Approved")
  UNIVERSITY_NOT_APPROVED @map("University Not Approved")
  HIGH_RISK_PROFILE       @map("High Risk Profile")
  POLICY_CHANGES          @map("Policy Changes")
  INVALID_FORMAT          @map("Invalid Format")
  EXPIRED_DOCUMENT        @map("Expired Document")
  UNCLEAR_IMAGE           @map("Unclear Image")
  INCOMPLETE_INFORMATION  @map("Incomplete Information")
  MISMATCH_DATA           @map("Mismatch Data")
  FRAUDULENT              @map("Fraudulent")
  WRONG_DOCUMENT          @map("Wrong Document")
  NOT_CERTIFIED           @map("Not Certified")
  OTHER                   @map("Other")

  @@map("rejection_reason")
}

enum AppealOutcome {
  PENDING        @map("Pending")
  APPROVED       @map("Approved")
  REJECTED       @map("Rejected")
  NOT_APPLICABLE @map("Not Applicable")
}

enum CommunicationChannel {
  PHONE      @map("Phone")
  EMAIL      @map("Email")
  WHATSAPP   @map("Whatsapp")
  SMS        @map("Sms")
  VIDEO_CALL @map("Video Call")
}

enum FollowUpFrequency {
  DAILY     @map("Daily")
  WEEKLY    @map("Weekly")
  BI_WEEKLY @map("Bi Weekly")
  MONTHLY   @map("Monthly")
  AS_NEEDED @map("As Needed")
}

enum ApplicationSourceSystem {
  MANUAL_ENTRY   @map("Manual Entry")
  WEBSITE_FORM   @map("Website Form")
  PARTNER_PORTAL @map("Partner Portal")
  IMPORT         @map("Import")
  API            @map("Api")
}

enum IntegrationStatus {
  SYNCED       @map("Synced")
  PENDING_SYNC @map("Pending Sync")
  SYNC_FAILED  @map("Sync Failed")
  NOT_REQUIRED @map("Not Required")
}

enum CommissionBase {
  LOAN_AMOUNT  @map("Loan Amount")
  FIXED_AMOUNT @map("Fixed Amount")
  TIERED       @map("Tiered")
}

enum CommissionStatus {
  NOT_APPLICABLE       @map("Not Applicable")
  PENDING_CALCULATION  @map("Pending Calculation")
  CALCULATED           @map("Calculated")
  APPROVED_FOR_PAYMENT @map("Approved For Payment")
  PAID                 @map("Paid")
  ON_HOLD              @map("On Hold")
}

enum AdmissionStatus {
  NOT_APPLIED         @map("Not Applied")
  APPLIED             @map("Applied")
  INTERVIEW_SCHEDULED @map("Interview Scheduled")
  WAITLISTED          @map("Waitlisted")
  ADMITTED            @map("Admitted")
  REJECTED            @map("Rejected")

  @@map("admission_status")
}

enum EducationLevel {
  HIGH_SCHOOL @map("High School")
  BACHELOR    @map("Bachelor")
  MASTER      @map("Master")
  PHD         @map("Phd")
  DIPLOMA     @map("Diploma")
  OTHER       @map("Other")

  @@map("education_level")
}

enum AcademicTerm {
  FALL   @map("Fall")
  SPRING @map("Spring")
  SUMMER @map("Summer")
  WINTER @map("Winter")

  @@map("academic_term")
}

enum ApplicationStatuses {
  LEAD                  @map("Lead")
  PROSPECT              @map("Prospect")
  APPLICATION_STARTED   @map("Application Started")
  APPLICATION_SUBMITTED @map("Application Submitted")
  IN_REVIEW             @map("In Review")
  APPROVED              @map("Approved")
  REJECTED              @map("Rejected")
  ENROLLED              @map("Enrolled")
  DEFERRED              @map("Deferred")
  WITHDRAWN             @map("Withdrawn")

  @@map("application_status")
}

enum AdmissionStatuses {
  NOT_APPLIED @map("Not Applied")
  APPLIED     @map("Applied")
  ADMITTED    @map("Admitted")
  WAITLISTED  @map("Waitlisted")
  REJECTED    @map("Rejected")
  DEFERRED    @map("Deferred")
}

enum VisaStatus {
  NOT_APPLIED @map("Not Applied")
  APPLIED     @map("Applied")
  APPROVED    @map("Approved")
  REJECTED    @map("Rejected")
  PENDING     @map("Pending")
}

enum ApplicationSource {
  DIRECT        @map("Direct")
  B2B_PARTNER   @map("B2b Partner")
  WEBSITE       @map("Website")
  REFERRAL      @map("Referral")
  ADVERTISEMENT @map("Advertisement")
}

enum CourseLevel {
  BACHELORS    @map("Bachelors")
  MASTERS      @map("Masters")
  PHD          @map("Phd")
  DIPLOMA      @map("Diploma")
  CERTIFICATE  @map("Certificate")
  PROFESSIONAL @map("Professional")
}

enum LenderCategory {
  DOMESTIC      @map("Domestic")
  INTERNATIONAL @map("International")
  BOTH          @map("Both")

  @@map("hs_lenders_category")
}

enum LenderType {
  PUBLIC_BANK          @map("Public Bank")
  PRIVATE_BANK         @map("Private Bank")
  NBFC                 @map("Nbfc")
  CREDIT_UNION         @map("Credit Union")
  INTERNATIONAL_LENDER @map("International Lender")
  FINTECH              @map("Fintech")

  @@map("hs_lenders_type")
}

enum LenderStatus {
  ACTIVE           @map("Active")
  INACTIVE         @map("Inactive")
  SUSPENDED        @map("Suspended")
  PENDING_APPROVAL @map("Pending Approval")
  UNDER_REVIEW     @map("Under Review")

  @@map("hs_lenders_status")
}

enum CoSignerRequirement {
  ALWAYS_REQUIRED    @map("Always Required")
  SOMETIMES_REQUIRED @map("Sometimes Required")
  NOT_REQUIRED       @map("Not Required")

  @@map("co_signer_requirement")
}

enum CollateralType {
  RESIDENTIAL_PROPERTY  @map("Residential Property")
  COMMERCIAL_PROPERTY   @map("Commercial Property")
  NON_AGRICULTURAL_LAND @map("Non Agricultural Land")
  FIXED_DEPOSITS        @map("Fixed Deposits")
  GOVERNMENT_SECURITIES @map("Government Securities")
  LIC_POLICIES          @map("Lic Policies")
  NSC_KVP               @map("Nsc Kvp")
  GOLD                  @map("Gold")
  SHARES_MUTUAL_FUNDS   @map("Shares Mutual Funds")
  PROPERTY              @map("Property")
  SECURITIES            @map("Securities")
  GUARANTOR_ONLY        @map("Guarantor Only")
  NO_COLLATERAL         @map("No Collateral")
  NA_PLOT               @map("Na Plot")

  @@map("collateral_type")
}

enum CourseType {
  UNDERGRADUATE     @map("Undergraduate")
  GRADUATE          @map("Graduate")
  PHD               @map("Phd")
  DIPLOMA           @map("Diploma")
  CERTIFICATE       @map("Certificate")
  PROFESSIONAL      @map("Professional")
  TECHNICAL         @map("Technical")
  FULL_TIME         @map("Full Time")
  PART_TIME         @map("Part Time")
  DISTANCE_LEARNING @map("Distance Learning")
  ONLINE            @map("Online")
  EXECUTIVE         @map("Executive")
  REGULAR           @map("Regular")
  ACCELERATED       @map("Accelerated")

  @@map("course_type")
}

enum APIConnectivityStatus {
  CONNECTED      @map("Connected")
  DISCONNECTED   @map("Disconnected")
  IN_PROGRESS    @map("In Progress")
  FAILED         @map("Failed")
  NOT_APPLICABLE @map("Not Applicable")

  @@map("api_connectivity_status")
}

enum IntegrationLevel {
  FULL_DIGITAL    @map("Full Digital")
  PARTIAL_DIGITAL @map("Partial Digital")
  MANUAL          @map("Manual")
  HYBRID          @map("Hybrid")

  @@map("integration_level")
}

enum DataSource {
  MANUAL_ENTRY        @map("Manual Entry")
  API_SYNC            @map("Api Sync")
  IMPORT              @map("Import")
  THIRD_PARTY         @map("Third Party")
  SYSTEM_GENERATED    @map("System Generated")
  API                 @map("Api")
  WEBSITE_FORM        @map("Website Form")
  PARTNER_INTEGRATION @map("Partner Integration")

  @@map("data_source")
}

enum PartnershipStatus {
  ACTIVE     @map("Active")
  INACTIVE   @map("Inactive")
  PENDING    @map("Pending")
  TERMINATED @map("Terminated")
  ON_HOLD    @map("On Hold")

  @@map("partnership_status")
}

enum ProductStatus {
  ACTIVE       @map("Active")
  INACTIVE     @map("Inactive")
  DISCONTINUED @map("Discontinued")
  COMING_SOON  @map("Coming Soon")
  UNDER_REVIEW @map("Under Review")

  @@map("product_status")
}

enum ProductType {
  SECURED_EDUCATION_LOAN   @map("Secured Education Loan")
  UNSECURED_EDUCATION_LOAN @map("Unsecured Education Loan")
  GOVERNMENT_SCHEME        @map("Government Scheme")
  SCHOLAR_LOAN             @map("Scholar Loan")
  EXPRESS_LOAN             @map("Express Loan")
  PREMIUM_LOAN             @map("Premium Loan")
  SKILL_DEVELOPMENT_LOAN   @map("Skill Development Loan")

  @@map("product_type")
}

enum ProductCategory {
  DOMESTIC      @map("Domestic")
  INTERNATIONAL @map("International")
  BOTH          @map("Both")
  VOCATIONAL    @map("Vocational")
  PROFESSIONAL  @map("Professional")

  @@map("loan_category")
}

enum ApplicationMode {
  ONLINE     @map("Online")
  OFFLINE    @map("Offline")
  HYBRID     @map("Hybrid")
  MOBILE_APP @map("Mobile App")
  PORTAL     @map("Portal")

  @@map("application_mode")
}

enum DisbursementProcess {
  DIRECT_TO_UNIVERSITY @map("Direct To University")
  DIRECT_TO_STUDENT    @map("Direct To Student")
  INSTALLMENT_BASED    @map("Installment Based")
  FULL_AMOUNT          @map("Full Amount")
  PARTIAL_DISBURSEMENT @map("Partial Disbursement")

  @@map("disbursement_process")
}

enum CollateralRequirement {
  ALWAYS_REQUIRED @map("Always Required")
  ABOVE_THRESHOLD @map("Above Threshold")
  NOT_REQUIRED    @map("Not Required")
  OPTIONAL        @map("Optional")

  @@map("collateral_requirement")
}

enum ProcessingFeeType {
  PERCENTAGE   @map("Percentage")
  FIXED_AMOUNT @map("Fixed Amount")
  NIL          @map("Nil")
  TIERED       @map("Tiered")

  @@map("processing_fee_type")
}

enum RepaymentFrequency {
  MONTHLY     @map("Monthly")
  QUARTERLY   @map("Quarterly")
  HALF_YEARLY @map("Half Yearly")
  ANNUALLY    @map("Annually")
  FLEXIBLE    @map("Flexible")
  CUSTOM      @map("Custom")

  @@map("repayment_frequency")
}

enum MoratoriumType {
  COMPLETE      @map("Complete")
  INTEREST_ONLY @map("Interest Only")
  PARTIAL_EMI   @map("Partial Emi")
  NO_MORATORIUM @map("No Moratorium")

  @@map("moratorium_type")
}

enum IntegrationComplexity {
  SIMPLE       @map("Simple")
  MODERATE     @map("Moderate")
  COMPLEX      @map("Complex")
  VERY_COMPLEX @map("Very Complex")

  @@map("integration_complexity")
}

enum MarketPositioning {
  PREMIUM         @map("Premium")
  COMPETITIVE     @map("Competitive")
  BUDGET          @map("Budget")
  VALUE_FOR_MONEY @map("Value For Money")
  NICHE           @map("Niche")

  @@map("market_positioning")
}

enum LoanStatus {
  NOT_APPLIED         @map("Not Applied")
  EXPLORING           @map("Exploring")
  APPLICATION_STARTED @map("Application Started")
  DOCUMENTS_PENDING   @map("Documents Pending")
  UNDER_REVIEW        @map("Under Review")
  APPROVED            @map("Approved")
  REJECTED            @map("Rejected")
  DISBURSED           @map("Disbursed")
  ACTIVE              @map("Active")
  CLOSED              @map("Closed")

  @@map("loan_status")
}

enum Gender {
  MALE              @map("Male")
  FEMALE            @map("Female")
  OTHER             @map("Other")
  PREFER_NOT_TO_SAY @map("Prefer Not To Say")

  @@map("gender")
}

enum EmploymentStatus {
  EMPLOYED      @map("Employed")
  UNEMPLOYED    @map("Unemployed")
  SELF_EMPLOYED @map("Self Employed")
  STUDENT       @map("Student")
  RETIRED       @map("Retired")

  @@map("employment_status")
}

enum MaritalStatus {
  SINGLE   @map("Single")
  MARRIED  @map("Married")
  DIVORCED @map("Divorced")
  WIDOWED  @map("Widowed")

  @@map("marital_status")
}

enum DocumentCategory {
  STUDENT_DOCUMENTS        @map("Student Documents")
  CO_APPLICANT_1_DOCUMENTS @map("Co-Applicant 1 Documents")
  CO_APPLICANT_2_DOCUMENTS @map("Co-Applicant 2 Documents")
  CO_APPLICANT_3_DOCUMENTS @map("Co-Applicant 3 Documents")
  COLLATERAL_DOCUMENTS     @map("Collateral Documents")
  INSTITUTIONAL_DOCUMENTS  @map("Institutional Documents")
  SUPPORTING_DOCUMENTS     @map("Supporting Documents")

  @@map("hs_loan_documents_category")
}

enum DocumentType {
  IDENTITY_PROOF      @map("Identity Proof")
  ADDRESS_PROOF       @map("Address Proof")
  INCOME_PROOF        @map("Income Proof")
  ACADEMIC_DOCUMENTS  @map("Academic Documents")
  EMPLOYMENT_PROOF    @map("Employment Proof")
  PROPERTY_DOCUMENTS  @map("Property Documents")
  BANK_STATEMENTS     @map("Bank Statements")
  TAX_DOCUMENTS       @map("Tax Documents")
  ADMISSION_DOCUMENTS @map("Admission Documents")
  VISA_DOCUMENTS      @map("Visa Documents")
  FINANCIAL_DOCUMENTS @map("Financial Documents")
  GUARANTEE_DOCUMENTS @map("Guarantee Documents")
  OTHER               @map("Other")

  @@map("hs_loan_documents_type")
}

enum DocumentPriority {
  MANDATORY    @map("Mandatory")
  CONDITIONAL  @map("Conditional")
  OPTIONAL     @map("Optional")
  NICE_TO_HAVE @map("Nice To Have")

  @@map("hs_loan_documents_priority")
}

enum DocumentStage {
  APPLICATION       @map("Application")
  INITIAL_REVIEW    @map("Initial Review")
  CREDIT_ASSESSMENT @map("Credit Assessment")
  FINAL_APPROVAL    @map("Final Approval")
  DISBURSEMENT      @map("Disbursement")
  POST_DISBURSEMENT @map("Post Disbursement")

  @@map("hs_loan_documents_stage")
}

enum DocumentFormat {
  PDF                @map("Pdf")
  JPG                @map("Jpg")
  JPEG               @map("Jpeg")
  PNG                @map("Png")
  TIFF               @map("Tiff")
  DOC                @map("Doc")
  DOCX               @map("Docx")
  ORIGINAL_HARD_COPY @map("Original Hard Copy")
  SCANNED_COPY       @map("Scanned Copy")
  DIGITAL_COPY       @map("Digital Copy")

  @@map("hs_loan_documents_format")
}

enum DocumentStatus {
  ACTIVE       @map("Active")
  INACTIVE     @map("Inactive")
  UNDER_REVIEW @map("Under Review")
  DEPRECATED   @map("Deprecated")
  ARCHIVED     @map("Archived")

  @@map("hs_loan_documents_status")
}

enum VerificationStatus {
  PENDING                  @map("Pending")
  IN_PROGRESS              @map("In Progress")
  VERIFIED                 @map("Verified")
  REJECTED                 @map("Rejected")
  EXPIRED                  @map("Expired")
  NOT_REQUIRED             @map("Not Required")
  ADDITIONAL_INFO_REQUIRED @map("Additional Info Required")

  @@map("verification_status")
}

enum VerificationMethod {
  MANUAL      @map("Manual")
  AUTOMATED   @map("Automated")
  HYBRID      @map("Hybrid")
  THIRD_PARTY @map("Third Party")
  BLOCKCHAIN  @map("Blockchain")
  DIGILOCKER  @map("Digilocker")

  @@map("verification_method")
}

enum DataSensitivity {
  HIGHLY_SENSITIVE @map("Highly Sensitive")
  SENSITIVE        @map("Sensitive")
  MODERATE         @map("Moderate")
  LOW              @map("Low")
  PUBLIC           @map("Public")

  @@map("data_sensitivity")
}

enum ApplicabilityStatus {
  YES         @map("Yes")
  NO          @map("No")
  CONDITIONAL @map("Conditional")

  @@map("applicability_status")
}

enum AutomationLevel {
  FULL        @map("Full")
  PARTIAL     @map("Partial")
  MANUAL_ONLY @map("Manual Only")
  HYBRID      @map("Hybrid")

  @@map("automation_level")
}

enum CommissionModel {
  PERCENTAGE        @map("Percentage")
  FIXED_AMOUNT      @map("Fixed Amount")
  TIERED            @map("Tiered")
  HYBRID            @map("Hybrid")
  PERFORMANCE_BASED @map("Performance Based")

  @@map("commission_model")
}

enum SettlementStatus {
  PENDING_CALCULATION @map("Pending Calculation")
  CALCULATED          @map("Calculated")
  PENDING_APPROVAL    @map("Pending Approval")
  APPROVED            @map("Approved")
  PAYMENT_INITIATED   @map("Payment Initiated")
  PAID                @map("Paid")
  ON_HOLD             @map("On Hold")
  REJECTED            @map("Rejected")
  CANCELLED           @map("Cancelled")
  DISPUTED            @map("Disputed")

  @@map("settlement_status")
}

enum PaymentStatus {
  PENDING    @map("Pending")
  INITIATED  @map("Initiated")
  IN_PROCESS @map("In Process")
  COMPLETED  @map("Completed")
  FAILED     @map("Failed")
  CANCELLED  @map("Cancelled")
  RETURNED   @map("Returned")

  @@map("payment_status")
}

enum PaymentMethod {
  BANK_TRANSFER      @map("Bank Transfer")
  NEFT               @map("Neft")
  RTGS               @map("Rtgs")
  IMPS               @map("Imps")
  UPI                @map("Upi")
  CHEQUE             @map("Cheque")
  DEMAND_DRAFT       @map("Demand Draft")
  DIGITAL_WALLET     @map("Digital Wallet")
  INTERNATIONAL_WIRE @map("International Wire")

  @@map("payment_method")
}

enum SettlementPeriod {
  MONTHLY     @map("Monthly")
  QUARTERLY   @map("Quarterly")
  HALF_YEARLY @map("Half Yearly")
  YEARLY      @map("Yearly")
  AD_HOC      @map("Ad Hoc")

  @@map("settlement_period")
}

enum DisbursementTrigger {
  LOAN_DISBURSED       @map("Loan Disbursed")
  APPLICATION_APPROVED @map("Application Approved")
  TARGET_ACHIEVED      @map("Target Achieved")
  MANUAL_TRIGGER       @map("Manual Trigger")
  SCHEDULED_PAYMENT    @map("Scheduled Payment")

  @@map("disbursement_trigger")
}

enum InvoiceStatus {
  PENDING   @map("Pending")
  GENERATED @map("Generated")
  SENT      @map("Sent")
  RECEIVED  @map("Received")
  APPROVED  @map("Approved")
  REJECTED  @map("Rejected")

  @@map("invoice_status")
}

enum ReconciliationStatus {
  PENDING           @map("Pending")
  RECONCILED        @map("Reconciled")
  DISCREPANCY_FOUND @map("Discrepancy Found")
  UNDER_REVIEW      @map("Under Review")
  RESOLVED          @map("Resolved")

  @@map("reconciliation_status")
}

enum HoldReason {
  DOCUMENT_VERIFICATION_PENDING @map("Document Verification Pending")
  INVOICE_ISSUES                @map("Invoice Issues")
  PARTNER_AGREEMENT_DISPUTE     @map("Partner Agreement Dispute")
  CALCULATION_ERROR             @map("Calculation Error")
  COMPLIANCE_ISSUES             @map("Compliance Issues")
  MANAGEMENT_REVIEW             @map("Management Review")
  LEGAL_ISSUES                  @map("Legal Issues")
  SYSTEM_ERROR                  @map("System Error")

  @@map("hold_reason")
}

enum NotificationMethod {
  EMAIL               @map("Email")
  SMS                 @map("Sms")
  WHATSAPP            @map("Whatsapp")
  PHONE_CALL          @map("Phone Call")
  PORTAL_NOTIFICATION @map("Portal Notification")

  @@map("notification_method")
}

enum AcknowledgmentStatus {
  YES     @map("Yes")
  NO      @map("No")
  PENDING @map("Pending")

  @@map("acknowledgment_status")
}

enum ApiAccessStatus {
  YES          @map("Yes")
  NO           @map("No")
  NOT_REQUIRED @map("Not Required")

  @@map("api_access_status")
}

enum B2BDataSource {
  MANUAL_ENTRY        @map("Manual Entry")
  IMPORT              @map("Import")
  PARTNER_APPLICATION @map("Partner Application")
  REFERRAL            @map("Referral")

  @@map("b2b_data_source")
}

enum B2BIntegrationStatus {
  NOT_REQUIRED @map("Not Required")
  PENDING      @map("Pending")
  COMPLETE     @map("Complete")
  ISSUES       @map("Issues")

  @@map("b2b_integration_status")
}

enum PartnerRecordStatus {
  ACTIVE       @map("Active")
  INACTIVE     @map("Inactive")
  SUSPENDED    @map("Suspended")
  UNDER_REVIEW @map("Under Review")
  ARCHIVED     @map("Archived")

  @@map("b2b_partners_record_status")
}

enum PortalAccessStatus {
  YES     @map("Yes")
  NO      @map("No")
  PENDING @map("Pending")

  @@map("b2b_portal_access_status")
}

enum LoginStatus {
  success @map("Success")
  failed  @map("Failed")
  logout  @map("Logout")
}

enum LenderCollateralType {
  PROPERTY       @map("Property")
  FIXED_DEPOSITS @map("Fixed Deposits")
  LIC_POLICIES   @map("Lic Policies")
  SECURITIES     @map("Securities")
  GUARANTOR_ONLY @map("Guarantor Only")
  NO_COLLATERAL  @map("No Collateral")
  NA_PLOT        @map("Na Plot")
}

enum SupportedCourseTypes {
  UNDERGRADUATE @map("Undergraduate")
  GRADUATE      @map("Graduate")
  PHD           @map("Phd")
  DIPLOMA       @map("Diploma")
  CERTIFICATE   @map("Certificate")
  PROFESSIONAL  @map("Professional")
  TECHNICAL     @map("Technical")
}

enum SupportedDestinations {
  US        @map("Us")
  UK        @map("Uk")
  CANADA    @map("Canada")
  AUSTRALIA @map("Australia")
  GERMANY   @map("Germany")
  FRANCE    @map("France")
  SINGAPORE @map("Singapore")
  ITALY     @map("Italy")
  UAE       @map("Uae")
  OTHER     @map("Other")
}

enum HolidayProcessing {
  YES     @map("Yes")
  NO      @map("No")
  LIMITED @map("Limited")
}

enum RepaymentOptions {
  EMI            @map("Emi")
  SIMPLE_INT     @map("Simple Int")
  PARTIAL_INT    @map("Partial Int")
  COMPLETE_MORAT @map("Complete Morat")

  @@map("repayment_options")
}

enum PayoutTerms {
  NET_30 @map("Net 30")
  NET_45 @map("Net 45")
  NET_60 @map("Net 60")
  CUSTOM @map("Custom")

  @@map("payout_terms")
}

enum PerformanceRating {
  EXCELLENT @map("Excellent")
  GOOD      @map("Good")
  AVERAGE   @map("Average")
  POOR      @map("Poor")

  @@map("performance_rating")
}

enum LenderRecordStatus {
  ACTIVE       @map("Active")
  INACTIVE     @map("Inactive")
  UNDER_REVIEW @map("Under Review")
  SUSPENDED    @map("Suspended")

  @@map("hs_lenders_record_status")
}

enum LenderDataSource {
  MANUAL_ENTRY    @map("Manual Entry")
  IMPORT          @map("Import")
  API_INTEGRATION @map("Api Integration")

  @@map("hs_lenders_data_source")
}

enum GurantorRequired {
  ALWAYS          @map("Always")
  ABOVE_THRESHOLD @map("Above Threshold")
  NOT_REQUIRED    @map("Not Required")
  OPTIONAL        @map("Optional")

  @@map("guarantor_required")
}

enum InsuranceRequired {
  LIFE_INSURANCE     @map("Life Insurance")
  PROPERTY_INSURANCE @map("Property Insurance")
  BOTH               @map("Both")
  NOT_REQUIRED       @map("Not Required")

  @@map("insurance_required")
}

enum ThirdPartyGuaranteeRequired {
  YES          @map("Yes")
  NO           @map("No")
  CASE_BY_CASE @map("Case By Case")

  @@map("third_party_guarantee_required")
}

enum LoanProductMarketPositioning {
  PREMIUM     @map("Premium")
  MID_MARKET  @map("Mid-Market")
  BUDGET      @map("Budget")
  NICHE       @map("Niche")
  MASS_MARKET @map("Mass Market")

  @@map("hs_loan_products_market_segment")
}

enum PricingStrategy {
  COMPETITIVE @map("Competitive")
  PREMIUM     @map("Premium")
  PENETRATION @map("Penetration")
  VALUE_BASED @map("Value Based")

  @@map("pricing_strategy")
}

enum NationalityRestrictions {
  INDIAN @map("Indian")
  OTHERS @map("Others")

  @@map("nationality_restrictions")
}

enum ResidencyRequirements {
  RESIDENT     @map("Resident")
  NON_RESIDENT @map("Non-Resident")

  @@map("residency_requirements")
}

enum TargetSegment {
  UNDERGRADUATE @map("Undergraduate")
  GRADUATE      @map("Graduate")
  PHD           @map("Phd")
  DIPLOMA       @map("Diploma")
  CERTIFICATE   @map("Certificate")
  PROFESSIONAL  @map("Professional")
  TECHNICAL     @map("Technical")
  MEDICAL       @map("Medical")
  MANAGEMENT    @map("Management")

  @@map("target_segment")
}

enum LoanProductCourseTypes {
  FULL_TIME         @map("Full Time")
  PART_TIME         @map("Part Time")
  DISTANCE_LEARNING @map("Distance Learning")
  ONLINE            @map("Online")
  EXECUTIVE         @map("Executive")
  REGULAR           @map("Regular")
  ACCELERATED       @map("Accelerated")

  @@map("hs_loan_products_course_types")
}

enum PartPaymentAllowed {
  YES            @map("Yes")
  NO             @map("No")
  MINIMUM_AMOUNT @map("Minimum Amount")

  @@map("part_payment_allowed")
}

enum CustomerSupportFeatures {
  TWENTY_FOUR_SEVEN_SUPPORT @map("24x7 Support")
  DEDICATED_RM              @map("Dedicated Rm")
  ONLINE_CHAT               @map("Online Chat")
  VIDEO_KYC                 @map("Video Kyc")
  DOOR_STEP_SERVICE         @map("Door Step Service")

  @@map("customer_support_features")
}

enum DigitalFeatures {
  ONLINE_APPLICATION    @map("Online Application")
  DIGITAL_DOCUMENTATION @map("Digital Documentation")
  E_STATEMENTS          @map("E-Statements")
  MOBILE_APP            @map("Mobile App")
  SMS_ALERTS            @map("Sms Alerts")
  EMAIL_NOTIFICATIONS   @map("Email Notifications")

  @@map("digital_features")
}

enum FlexibleRepaymentOptions {
  STEP_UP_EMI     @map("Step Up Emi")
  STEP_DOWN_EMI   @map("Step Down Emi")
  BULLET_PAYMENT  @map("Bullet Payment")
  FLEXIBLE_EMI    @map("Flexible Emi")
  HOLIDAY_OPTIONS @map("Holiday Options")

  @@map("flexible_repayment_options")
}

enum SandboxEnvironment {
  AVAILABLE     @map("Available")
  NOT_AVAILABLE @map("Not Available")
  ON_REQUEST    @map("On Request")

  @@map("sandbox_environment")
}

enum DataFormat {
  JSON   @map("Json")
  XML    @map("Xml")
  CSV    @map("Csv")
  API    @map("Api")
  MANUAL @map("Manual")

  @@map("data_format")
}

enum ApiAvailability {
  YES               @map("Yes")
  NO                @map("No")
  UNDER_DEVELOPMENT @map("Under Development")
  PLANNED           @map("Planned")

  @@map("api_availability")
}

enum WebHookSupport {
  YES     @map("Yes")
  NO      @map("No")
  LIMITED @map("Limited")

  @@map("webhook_support")
}

enum ProductRecordStatus {
  ACTIVE       @map("Active")
  INACTIVE     @map("Inactive")
  UNDER_REVIEW @map("Under Review")
  DISCONTINUED @map("Discontinued")

  @@map("product_record_status")
}

enum ReviewFrequency {
  MONTHLY     @map("Monthly")
  QUARTERLY   @map("Quarterly")
  HALF_YEARLY @map("Half-yearly")
  YEARLY      @map("Yearly")

  @@map("review_frequency")
}

enum SettlementMonth {
  JANUARY   @map("January")
  FEBRUARY  @map("February")
  MARCH     @map("March")
  APRIL     @map("April")
  MAY       @map("May")
  JUNE      @map("June")
  JULY      @map("July")
  AUGUST    @map("August")
  SEPTEMBER @map("September")
  OCTOBER   @map("October")
  NOVEMBER  @map("November")
  DECEMBER  @map("December")

  @@map("settlement_month")
}

enum TaxCertificateRequired {
  YES            @map("Yes")
  NO             @map("No")
  AUTO_GENERATED @map("Auto Generated")

  @@map("tax_certificate_required")
}

enum CommissionDataSource {
  MANUAL_ENTRY          @map("Manual Entry")
  AUTOMATED_CALCULATION @map("Automated Calculation")
  IMPORT                @map("Import")
  API                   @map("Api")
  BULK_UPLOAD           @map("Bulk Upload")

  @@map("commission_data_source")
}

enum SettlementRecordStatus {
  ACTIVE              @map("Active")
  COMPLETED           @map("Completed")
  CANCELLED           @map("Cancelled")
  ARCHIVED            @map("Archived")
  UNDER_INVESTIGATION @map("Under Investigation")

  @@map("settlement_record_status")
}

enum SystemGenerated {
  YES       @map("Yes")
  NO        @map("No")
  PARTIALLY @map("Partially")

  @@map("system_generated")
}

enum PartnerNotificationSent {
  YES     @map("Yes")
  NO      @map("No")
  PENDING @map("Pending")
  FAILED  @map("Failed")

  @@map("partner_notification_sent")
}

enum TransactionTypes {
  COMMISSION_PAYMENT @map("Commission Payment")
  BONUS_PAYMENT      @map("Bonus Payment")
  ADJUSTMENT         @map("Adjustment")
  REVERSAL           @map("Reversal")
  PENALTY_DEDUCTION  @map("Penalty Deduction")
  ADVANCE_PAYMENT    @map("Advance Payment")
  FINAL_SETTLEMENT   @map("Final Settlement")

  @@map("transaction_types")
}

enum CollateralDependency {
  YES            @map("Yes")
  NO             @map("No")
  NOT_APPLICABLE @map("Not Applicable")

  @@map("collateral_dependency")
}

enum RequiredForCountries {
  US        @map("Us")
  UK        @map("Uk")
  CANADA    @map("Canada")
  AUSTRALIA @map("Australia")
  GERMANY   @map("Germany")
  FRANCE    @map("France")
  OTHER     @map("Other")

  @@map("required_for_countries")
}

enum RequiredForCourses {
  ENGINEERING @map("Engineering")
  MBA         @map("Mba")
  MS          @map("Ms")
  MEDICINE    @map("Medicine")
  LAW         @map("Law")
  ARTS        @map("Arts")
  SCIENCE     @map("Science")
  OTHER       @map("Other")

  @@map("required_for_courses")
}

enum GdprRelevance {
  YES            @map("Yes")
  NO             @map("No")
  PARTIAL        @map("Partial")
  NOT_APPLICABLE @map("Not Applicable")

  @@map("gdpr_relevance")
}

enum DocumentAvailability {
  YES          @map("Yes")
  NO           @map("No")
  PLANNED      @map("Planned")
  NOT_REQUIRED @map("Not Required")

  @@map("hs_loan_documents_availability")
}

enum AutomatedProcessing {
  FULL        @map("Full")
  PARTIAL     @map("Partial")
  MANUAL_ONLY @map("Manual Only")
  HYBRID      @map("Hybrid")

  @@map("automated_processing")
}

enum BlockchainVerification {
  YES            @map("Yes")
  NO             @map("No")
  NOT_APPLICABLE @map("Not Applicable")
  FUTURE         @map("Future")

  @@map("blockchain_verification")
}

enum DigitalSignatureRequired {
  YES       @map("Yes")
  NO        @map("No")
  OPTIONAL  @map("Optional")
  PREFERRED @map("Preferred")

  @@map("digital_signature_required")
}

enum ESignatureAccepted {
  YES          @map("Yes")
  NO           @map("No")
  CASE_BY_CASE @map("Case By Case")

  @@map("e_signature_accepted")
}

enum RealTimeVerification {
  YES            @map("Yes")
  NO             @map("No")
  PLANNED        @map("Planned")
  NOT_APPLICABLE @map("Not Applicable")

  @@map("real_time_verification")
}

enum AcceptedFormats {
  PDF                @map("Pdf")
  JPG                @map("Jpg")
  JPEG               @map("Jpeg")
  PNG                @map("Png")
  TIFF               @map("Tiff")
  DOC                @map("Doc")
  DOCX               @map("Docx")
  ORIGINAL_HARD_COPY @map("Original Hard Copy")
  SCANNED_COPY       @map("Scanned Copy")
  DIGITAL_COPY       @map("Digital Copy")

  @@map("accepted_formats")
}

enum ColorRequirements {
  COLOR_ONLY       @map("Color Only")
  BLACK_WHITE_ONLY @map("Black White Only")
  BOTH_ACCEPTABLE  @map("Both Acceptable")
  COLOR_PREFERRED  @map("Color Preferred")

  @@map("color_requirements")
}

enum CombinedDocumentAllowed {
  YES              @map("Yes")
  NO               @map("No")
  SINGLE_PAGE_ONLY @map("Single Page Only")

  @@map("combined_document_allowed")
}

enum LanguageRequirements {
  ENGLISH                        @map("English")
  HINDI                          @map("Hindi")
  REGIONAL_WITH_TRANSLATION      @map("Regional With Translation")
  NOTARIZED_TRANSLATION_REQUIRED @map("Notarized Translation Required")

  @@map("language_requirements")
}

enum MultiplePagesAllowed {
  YES              @map("Yes")
  NO               @map("No")
  SINGLE_PAGE_ONLY @map("Single Page Only")

  @@map("multiple_pages_allowed")
}

enum QualityStandards {
  CLEAR_LEGIBLE       @map("Clear Legible")
  ALL_CORNERS_VISIBLE @map("All Corners Visible")
  NO_SHADOWS          @map("No Shadows")
  ORIGINAL_COLORS     @map("Original Colors")
  STAMPED_SIGNED      @map("Stamped Signed")
  NOTARIZED           @map("Notarized")
  APOSTILLED          @map("Apostilled")

  @@map("quality_standards")
}

enum AutoExtractionPossible {
  YES     @map("Yes")
  NO      @map("No")
  PARTIAL @map("Partial")

  @@map("auto_extraction_possible")
}

enum OCRCompatibility {
  HIGH           @map("High")
  MEDIUM         @map("Medium")
  LOW            @map("Low")
  NOT_COMPATIBLE @map("Not Compatible")

  @@map("ocr_compatibility")
}

enum ParallelProcessingAllowed {
  YES       @map("Yes")
  NO        @map("No")
  PREFERRED @map("Preferred")

  @@map("parallel_processing_allowed")
}

enum ResubmissionAllowed {
  YES              @map("Yes")
  NO               @map("No")
  LIMITED_ATTEMPTS @map("Limited Attempts")

  @@map("resubmission_allowed")
}

enum DocumentRecordStatus {
  ACTIVE       @map("Active")
  INACTIVE     @map("Inactive")
  UNDER_REVIEW @map("Under Review")
  DEPRECATED   @map("Deprecated")

  @@map("hs_loan_documents_record_status")
}

enum DocumentReviewFrequency {
  MONTHLY     @map("Monthly")
  QUARTERLY   @map("Quarterly")
  HALF_YEARLY @map("Half-yearly")
  YEARLY      @map("Yearly")
  AS_NEEDED   @map("As Needed")

  @@map("hs_loan_documents_review_frequency")
}

enum EdumateContactAdmissionStatus {
  NOT_APPLIED         @map("Not Applied")
  APPLIED             @map("Applied")
  INTERVIEW_SCHEDULED @map("Interview Scheduled")
  WAITLISTED          @map("Waitlisted")
  ADMITTED            @map("Admitted")
  REJECTED            @map("Rejected")

  @@map("edumate_contact_admission_status")
}

enum CurrentEducationLevel {
  HIGH_SCHOOL @map("High School")
  BACHELORS   @map("Bachelors")
  MASTERS     @map("Masters")
  PHD         @map("Phd")
  DIPLOMA     @map("Diploma")
  OTHER       @map("Other")

  @@map("current_education_level")
}

enum IntendedStartTerm {
  FALL   @map("Fall")
  SPRING @map("Spring")
  SUMMER @map("Summer")
  WINTER @map("Winter")

  @@map("intended_start_term")
}

enum PreferredStudyDestination {
  US          @map("Us")
  UK          @map("Uk")
  CANADA      @map("Canada")
  AUSTRALIA   @map("Australia")
  GERMANY     @map("Germany")
  FRANCE      @map("France")
  SINGAPORE   @map("Singapore")
  ITALY       @map("Italy")
  UAE         @map("Uae")
  JAPAN       @map("Japan")
  CHINA       @map("China")
  INDIA       @map("India")
  NEW_ZEALAND @map("New Zealand")
  IRELAND     @map("Ireland")
  OTHER       @map("Other")

  @@map("preferred_study_destination")
}

enum TargetDegreeLevel {
  BACHELORS           @map("Bachelors")
  MASTERS             @map("Masters")
  PHD                 @map("Phd")
  DIPLOMA             @map("Diploma")
  CERTIFICATE         @map("Certificate")
  PROFESSIONAL_COURSE @map("Professional Course")

  @@map("target_degree_level")
}

enum CurrentStatusDisposition {
  NOT_INTERESTED             @map("Not Interested")
  WRONG_NUMBER               @map("Wrong Number")
  CALL_NOT_ANSWERED          @map("Call Not Answered")
  FOLLOW_UP                  @map("Follow Up")
  INT_FOR_NEXT_YEAR          @map("Int For Next Year")
  PARTIAL_DOCUMENTS_RECEIVED @map("Partial Documents Received")

  @@map("current_status_disposition")
}

enum StatusDispositionReason {
  ALREADY_APPLIED     @map("Already Applied")
  NOT_LOOKING_AT_LOAN @map("Not Looking At Loan")
  SELF_FUNDING        @map("Self Funding")
  OTHERS              @map("Others")

  @@map("status_disposition_reason")
}

enum EdumateContactCourseType {
  STEM     @map("Stem")
  BUSINESS @map("Business")
  OTHERS   @map("Others")

  @@map("edumate_contact_course_type")
}

enum CoApplicantOccupation {
  SALARIED      @map("Salaried")
  SELF_EMPLOYED @map("Self Employed")
  RETIRED       @map("Retired")
  OTHERS        @map("Others")

  @@map("co_applicant_occupation")
}

enum CoApplicantRelationship {
  FATHER       @map("Father")
  MOTHER       @map("Mother")
  SPOUSE       @map("Spouse")
  SIBLING      @map("Sibling")
  UNCLE        @map("Uncle")
  AUNT         @map("Aunt")
  GRAND_FATHER @map("Grand Father")
  GRAND_MOTHER @map("Grand Mother")
  OTHERS       @map("Others")

  @@map("co_applicant_relationship")
}

enum CollateralAvailable {
  YES @map("Yes")
  NO  @map("No")

  @@map("collateral_available")
}

enum EdumateContactCollateralType {
  PROPERTY @map("Property")
  FD       @map("Fd")
  NA_PLOT  @map("Na Plot")
  OTHER    @map("Other")

  @@map("edumate_contact_collateral_type")
}

enum FinancialCurrency {
  INR   @map("Inr")
  USD   @map("Usd")
  EUR   @map("Eur")
  GBP   @map("Gbp")
  CAD   @map("Cad")
  AUD   @map("Aud")
  OTHER @map("Other")

  @@map("financial_currency")
}

enum LeadSource {
  ORGANIC_SEARCH @map("Organic Search")
  SOCIAL_MEDIA   @map("Social Media")
  B2B_PARTNER    @map("B2b Partner")
  REFERRAL       @map("Referral")
  ADVERTISEMENT  @map("Advertisement")
  WEBSITE        @map("Website")
  WALK_IN        @map("Walk-in")
  OTHER          @map("Other")

  @@map("lead_source")
}

enum PartnerCommissionApplicable {
  YES @map("Yes")
  NO  @map("No")

  @@map("partner_commission_applicable")
}

enum LoanTypePreference {
  SECURED           @map("Secured")
  UNSECURED         @map("Unsecured")
  GOVERNMENT_SCHEME @map("Government Scheme")
  NO_PREFERENCE     @map("No Preference")

  @@map("loan_type_preference")
}

enum PreferredLenders {
  AXIS @map("Axis")

  @@map("preferred_lenders")
}

enum RepaymentTypePreference {
  EMI            @map("Emi")
  SIMPLE_INT     @map("Simple Int")
  PARTIAL_INT    @map("Partial Int")
  COMPLETE_MORAT @map("Complete Morat")

  @@map("repayment_type_preference")
}

enum Nationality {
  AFGHANISTAN                              @map("Afghanistan")
  ALBANIA                                  @map("Albania")
  ANTARCTICA                               @map("Antarctica")
  ALAND_ISLANDS                            @map("Åland Islands")
  ALGERIA                                  @map("Algeria")
  AMERICAN_SAMOA                           @map("American Samoa")
  ANDORRA                                  @map("Andorra")
  ANGOLA                                   @map("Angola")
  ANGUILLA                                 @map("Anguilla")
  ANTIGUA_AND_BARBUDA                      @map("Antigua And Barbuda")
  ARUBA                                    @map("Aruba")
  ASIA_PACIFIC_REGION                      @map("Asia/Pacific Region")
  AZERBAIJAN                               @map("Azerbaijan")
  ARGENTINA                                @map("Argentina")
  ARMENIA                                  @map("Armenia")
  AUSTRALIA                                @map("Australia")
  AUSTRIA                                  @map("Austria")
  BAHAMAS                                  @map("Bahamas")
  BAHRAIN                                  @map("Bahrain")
  BANGLADESH                               @map("Bangladesh")
  BARBADOS                                 @map("Barbados")
  BELGIUM                                  @map("Belgium")
  BHUTAN                                   @map("Bhutan")
  BOLIVIA                                  @map("Bolivia")
  BOSNIA_AND_HERZEGOVINA                   @map("Bosnia And Herzegovina")
  BOTSWANA                                 @map("Botswana")
  BOUVET_ISLAND                            @map("Bouvet Island")
  BRAZIL                                   @map("Brazil")
  CARIBBEAN_NETHERLANDS                    @map("Caribbean Netherlands")
  BELIZE                                   @map("Belize")
  SOLOMON_ISLANDS                          @map("Solomon Islands")
  BRUNEI                                   @map("Brunei")
  BULGARIA                                 @map("Bulgaria")
  BURUNDI                                  @map("Burundi")
  BELARUS                                  @map("Belarus")
  BERMUDA                                  @map("Bermuda")
  CAMBODIA                                 @map("Cambodia")
  CAYMAN_ISLANDS                           @map("Cayman Islands")
  CAMEROON                                 @map("Cameroon")
  CANADA                                   @map("Canada")
  CAPE_VERDE                               @map("Cape Verde")
  CENTRAL_AFRICAN_REPUBLIC                 @map("Central African Republic")
  CUBA                                     @map("Cuba")
  CURACAO                                  @map("Curaçao")
  SRI_LANKA                                @map("Sri Lanka")
  CHAD                                     @map("Chad")
  CHILE                                    @map("Chile")
  CHINA                                    @map("China")
  CHRISTMAS_ISLAND                         @map("Christmas Island")
  COCOS_KEELING_ISLANDS                    @map("Cocos (Keeling) Islands")
  COLOMBIA                                 @map("Colombia")
  COMOROS                                  @map("Comoros")
  CONGO                                    @map("Congo")
  DEMOCRATIC_REPUBLIC_OF_THE_CONGO         @map("Democratic Republic Of The Congo")
  COOK_ISLANDS                             @map("Cook Islands")
  COSTA_RICA                               @map("Costa Rica")
  CROATIA                                  @map("Croatia")
  CYPRUS                                   @map("Cyprus")
  CZECH_REPUBLIC                           @map("Czech Republic")
  BENIN                                    @map("Benin")
  DENMARK                                  @map("Denmark")
  DOMINICA                                 @map("Dominica")
  DOMINICAN_REPUBLIC                       @map("Dominican Republic")
  ECUADOR                                  @map("Ecuador")
  EL_SALVADOR                              @map("El Salvador")
  EQUATORIAL_GUINEA                        @map("Equatorial Guinea")
  ETHIOPIA                                 @map("Ethiopia")
  ERITREA                                  @map("Eritrea")
  ESTONIA                                  @map("Estonia")
  EUROPE                                   @map("Europe")
  SOUTH_GEORGIA_AND_SOUTH_SANDWICH_ISLANDS @map("South Georgia And The South Sandwich Islands")
  FIJI                                     @map("Fiji")
  FINLAND                                  @map("Finland")
  FRANCE                                   @map("France")
  FALKLAND_ISLANDS                         @map("Falkland Islands")
  FAROE_ISLANDS                            @map("Faroe Islands")
  FRENCH_POLYNESIA                         @map("French Polynesia")
  FRENCH_SOUTHERN_AND_ANTARCTIC_LANDS      @map("French Southern And Antarctic Lands")
  DJIBOUTI                                 @map("Djibouti")
  GABON                                    @map("Gabon")
  GEORGIA                                  @map("Georgia")
  GAMBIA                                   @map("Gambia")
  GERMANY                                  @map("Germany")
  GHANA                                    @map("Ghana")
  GREENLAND                                @map("Greenland")
  GUADELOUPE                               @map("Guadeloupe")
  GUERNSEY                                 @map("Guernsey")
  KIRIBATI                                 @map("Kiribati")
  GREECE                                   @map("Greece")
  GRENADA                                  @map("Grenada")
  GUAM                                     @map("Guam")
  GUATEMALA                                @map("Guatemala")
  GUINEA                                   @map("Guinea")
  GUYANA                                   @map("Guyana")
  FRENCH_GUIANA                            @map("French Guiana")
  GIBRALTAR                                @map("Gibraltar")
  HAITI                                    @map("Haiti")
  HEARD_ISLAND_AND_MCDONALD_ISLANDS        @map("Heard Island And Mcdonald Islands")
  VATICAN_CITY                             @map("Vatican City")
  HONDURAS                                 @map("Honduras")
  HUNGARY                                  @map("Hungary")
  HONG_KONG                                @map("Hong Kong")
  ISLE_OF_MAN                              @map("Isle Of Man")
  IRAN                                     @map("Iran")
  JERSEY                                   @map("Jersey")
  MACAU                                    @map("Macau")
  MARTINIQUE                               @map("Martinique")
  MONTSERRAT                               @map("Montserrat")
  MYANMAR_BURMA                            @map("Myanmar (Burma)")
  NORTH_KOREA                              @map("North Korea")
  PALESTINE                                @map("Palestine")
  PUERTO_RICO                              @map("Puerto Rico")
  REUNION                                  @map("Réunion")
  SAINT_BARTHELEMY                         @map("Saint Barthélemy")
  SAINT_MARTIN                             @map("Saint Martin")
  SINT_MAARTEN                             @map("Sint Maarten")
  SOUTH_SUDAN                              @map("South Sudan")
  SUDAN                                    @map("Sudan")
  SYRIA                                    @map("Syria")
  TAIWAN                                   @map("Taiwan")
  TURKS_AND_CAICOS_ISLANDS                 @map("Turks And Caicos Islands")
  US_VIRGIN_ISLANDS                        @map("U.S. Virgin Islands")
  ICELAND                                  @map("Iceland")
  INDIA                                    @map("India")
  INDONESIA                                @map("Indonesia")
  IRAQ                                     @map("Iraq")
  IRELAND                                  @map("Ireland")
  ISRAEL                                   @map("Israel")
  ITALY                                    @map("Italy")
  BRITISH_INDIAN_OCEAN_TERRITORY           @map("British Indian Ocean Territory")
  COTE_DIVOIRE                             @map("Cote Divoire")
  JAMAICA                                  @map("Jamaica")
  JAPAN                                    @map("Japan")
  KAZAKHSTAN                               @map("Kazakhstan")
  JORDAN                                   @map("Jordan")
  KENYA                                    @map("Kenya")
  SOUTH_KOREA                              @map("South Korea")
  KOSOVO                                   @map("Kosovo")
  KUWAIT                                   @map("Kuwait")
  KYRGYZSTAN                               @map("Kyrgyzstan")
  LAOS                                     @map("Laos")
  LEBANON                                  @map("Lebanon")
  LESOTHO                                  @map("Lesotho")
  LATVIA                                   @map("Latvia")
  LIBERIA                                  @map("Liberia")
  LIBYA                                    @map("Libya")
  LIECHTENSTEIN                            @map("Liechtenstein")
  LITHUANIA                                @map("Lithuania")
  LUXEMBOURG                               @map("Luxembourg")
  MADAGASCAR                               @map("Madagascar")
  MALAWI                                   @map("Malawi")
  MALAYSIA                                 @map("Malaysia")
  MALDIVES                                 @map("Maldives")
  MALI                                     @map("Mali")
  MALTA                                    @map("Malta")
  MAURITANIA                               @map("Mauritania")
  MAURITIUS                                @map("Mauritius")
  MAYOTTE                                  @map("Mayotte")
  MEXICO                                   @map("Mexico")
  MONACO                                   @map("Monaco")
  MONGOLIA                                 @map("Mongolia")
  MOLDOVA                                  @map("Moldova")
  MONTENEGRO                               @map("Montenegro")
  MOROCCO                                  @map("Morocco")
  MOZAMBIQUE                               @map("Mozambique")
  OMAN                                     @map("Oman")
  NAMIBIA                                  @map("Namibia")
  NAURU                                    @map("Nauru")
  NEPAL                                    @map("Nepal")
  NETHERLANDS                              @map("Netherlands")
  NEW_CALEDONIA                            @map("New Caledonia")
  VANUATU                                  @map("Vanuatu")
  NETHERLANDS_ANTILLES                     @map("Netherlands Antilles")
  NEW_ZEALAND                              @map("New Zealand")
  NICARAGUA                                @map("Nicaragua")
  NIGER                                    @map("Niger")
  NIGERIA                                  @map("Nigeria")
  NIUE                                     @map("Niue")
  NORFOLK_ISLAND                           @map("Norfolk Island")
  NORWAY                                   @map("Norway")
  NORTHERN_MARIANA_ISLANDS                 @map("Northern Mariana Islands")
  UNITED_STATES_MINOR_OUTLYING_ISLANDS     @map("United States Minor Outlying Islands")
  MICRONESIA                               @map("Micronesia")
  MARSHALL_ISLANDS                         @map("Marshall Islands")
  PALAU                                    @map("Palau")
  PAKISTAN                                 @map("Pakistan")
  PANAMA                                   @map("Panama")
  PAPUA_NEW_GUINEA                         @map("Papua New Guinea")
  PARAGUAY                                 @map("Paraguay")
  PERU                                     @map("Peru")
  PHILIPPINES                              @map("Philippines")
  PITCAIRN_ISLANDS                         @map("Pitcairn Islands")
  POLAND                                   @map("Poland")
  PORTUGAL                                 @map("Portugal")
  GUINEA_BISSAU                            @map("Guinea-Bissau")
  EAST_TIMOR                               @map("East Timor")
  QATAR                                    @map("Qatar")
  ROMANIA                                  @map("Romania")
  RUSSIA                                   @map("Russia")
  RWANDA                                   @map("Rwanda")
  SAINT_HELENA                             @map("Saint Helena")
  SAINT_KITTS_AND_NEVIS                    @map("Saint Kitts And Nevis")
  SAINT_LUCIA                              @map("Saint Lucia")
  SAINT_PIERRE_AND_MIQUELON                @map("Saint Pierre And Miquelon")
  SAINT_VINCENT_AND_THE_GRENADINES         @map("Saint Vincent And The Grenadines")
  SAN_MARINO                               @map("San Marino")
  SAO_TOME_AND_PRINCIPE                    @map("Sao Tome And Principe")
  SAUDI_ARABIA                             @map("Saudi Arabia")
  SENEGAL                                  @map("Senegal")
  SVALBARD_AND_JAN_MAYEN                   @map("Svalbard And Jan Mayen")
  SERBIA                                   @map("Serbia")
  SEYCHELLES                               @map("Seychelles")
  SIERRA_LEONE                             @map("Sierra Leone")
  SINGAPORE                                @map("Singapore")
  SLOVAKIA                                 @map("Slovakia")
  VIETNAM                                  @map("Vietnam")
  WESTERN_SAHARA                           @map("Western Sahara")
  SLOVENIA                                 @map("Slovenia")
  SOMALIA                                  @map("Somalia")
  SOUTH_AFRICA                             @map("South Africa")
  ZIMBABWE                                 @map("Zimbabwe")
  SPAIN                                    @map("Spain")
  SURINAME                                 @map("Suriname")
  SWAZILAND                                @map("Swaziland")
  SWEDEN                                   @map("Sweden")
  SWITZERLAND                              @map("Switzerland")
  TAJIKISTAN                               @map("Tajikistan")
  THAILAND                                 @map("Thailand")
  TOGO                                     @map("Togo")
  TOKELAU                                  @map("Tokelau")
  TONGA                                    @map("Tonga")
  TRINIDAD_AND_TOBAGO                      @map("Trinidad And Tobago")
  UNITED_ARAB_EMIRATES                     @map("United Arab Emirates")
  TUNISIA                                  @map("Tunisia")
  TURKIYE                                  @map("Türkiye")
  TURKMENISTAN                             @map("Turkmenistan")
  TUVALU                                   @map("Tuvalu")
  UGANDA                                   @map("Uganda")
  UKRAINE                                  @map("Ukraine")
  MACEDONIA_FYROM                          @map("Macedonia (Fyrom)")
  EGYPT                                    @map("Egypt")
  UNITED_KINGDOM                           @map("United Kingdom")
  TANZANIA                                 @map("Tanzania")
  UNITED_STATES                            @map("United States")
  BURKINA_FASO                             @map("Burkina Faso")
  URUGUAY                                  @map("Uruguay")
  UZBEKISTAN                               @map("Uzbekistan")
  VENEZUELA                                @map("Venezuela")
  BRITISH_VIRGIN_ISLANDS                   @map("British Virgin Islands")
  WALLIS_AND_FUTUNA                        @map("Wallis And Futuna")
  SAMOA                                    @map("Samoa")
  YEMEN                                    @map("Yemen")
  ZAMBIA                                   @map("Zambia")
  CANARY_ISLANDS                           @map("Canary Islands")

  @@map("nationality")
}

enum GDPRConsent {
  YES     @map("Yes")
  NO      @map("No")
  PENDING @map("Pending")

  @@map("gdpr_consent")
}

enum MarketingConsent {
  YES @map("Yes")
  NO  @map("No")

  @@map("marketing_consent")
}

enum StudentRecordStatus {
  ACTIVE    @map("Active")
  INACTIVE  @map("Inactive")
  DUPLICATE @map("Duplicate")
  MERGED    @map("Merged")

  @@map("student_record_status")
}
