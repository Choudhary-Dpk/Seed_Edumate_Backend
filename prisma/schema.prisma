generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model LoanEligibilityMatrix {
  id                      Int      @id @default(autoincrement())
  country_of_study        String?  @db.VarChar(100)
  level_of_education      String?  @db.VarChar(50)
  course_type             String?  @db.VarChar(100)
  is_stem_designated      Boolean?
  analytical_exam_name    String?  @db.VarChar(50)
  language_exam_name      String?  @db.VarChar(50)
  preference              String?  @db.VarChar(20)
  loan_amount             Decimal? @db.Decimal(12, 2)
  loan_amount_currency    String?  @db.VarChar(3)
  analytical_score_min    Decimal? @db.Decimal(6, 2)
  analytical_score_max    Decimal? @db.Decimal(6, 2)
  language_exam_score_min Decimal? @db.Decimal(6, 2)
  language_exam_score_max Decimal? @db.Decimal(6, 2)

  @@index([loan_amount, loan_amount_currency], map: "idx_amount_currency")
  @@index([analytical_exam_name], map: "idx_analytical_exam")
  @@index([country_of_study, level_of_education], map: "idx_country_education")
  @@index([country_of_study], map: "idx_country_study")
  @@index([course_type], map: "idx_course_type")
  @@index([loan_amount_currency], map: "idx_currency")
  @@index([level_of_education], map: "idx_education_level")
  @@index([language_exam_name], map: "idx_language_exam")
  @@index([loan_amount], map: "idx_loan_amount")
  @@index([preference], map: "idx_preference")
  @@index([is_stem_designated], map: "idx_stem_designated")
  @@index([is_stem_designated, preference], map: "idx_stem_preference")
  @@map("loan_eligibility_matrix")
}
model Role {
  id          Int       @id @default(autoincrement())
  role        String    @unique
  display_name String
  description String?
  
  users       UserRole[]
  permissions RolePermission[]

  @@map("b2b_partner_roles")
}

model UserRole {
  id      Int  @id @default(autoincrement())
  user_id Int  @map("user_id")
  role_id Int  @map("role_id")

  // Relations
  user User @relation("UserRole",fields: [user_id], references: [id], onDelete: Cascade)
  role Role @relation(fields: [role_id], references: [id], onDelete: Cascade)

  @@unique([user_id, role_id])
  @@map("b2b_partner_user_roles")
}

model Session {
  id                 Int      @id @default(autoincrement())
  user_id            Int      @map("user_id")
  refresh_token_hash String   @map("refresh_token_hash")
  device_info        String?  @map("device_info")
  ip_address         String?  @db.Inet @map("ip_address")
  is_valid           Boolean  @default(true) @map("is_valid")
  created_at         DateTime @default(now()) @map("created_at")
  expires_at         DateTime? @map("expires_at")

  // Relation
  user User @relation("Session",fields: [user_id], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model LoginHistory {
  id          Int      @id @default(autoincrement())
  user_id     Int      @map("user_id")
  ip_address  String?  @db.Inet @map("ip_address")
  device_info String?  @map("device_info")
  status      LoginStatus @map("status")
  created_at  DateTime @default(now()) @map("created_at")

  // Relation
  user User @relation("LoginHistory",fields: [user_id], references: [id], onDelete: Cascade)

  @@map("login_history")
}

model Permission {
  id          Int     @id @default(autoincrement())
  permission  String  @map("permission")
  module      String? @map("module")

  roles RolePermission[]

  @@map("b2b_partner_permissions")
}

model RolePermission {
  id            Int  @id @default(autoincrement())
  role_id       Int  @map("role_id")
  permission_id Int  @map("permission_id")

  // Relations
  role       Role       @relation(fields: [role_id], references: [id], onDelete: Cascade)
  permission Permission @relation(fields: [permission_id], references: [id], onDelete: Cascade)

  @@unique([role_id, permission_id])
  @@map("b2b_partner_role_permissions")
}

// B2B Partners - Main Entity
model B2BPartner {
  id                    Int      @id @default(autoincrement())
  
  // Basic Information (from b2b_partners_information group)
  business_address      String?
  business_type         String?  
  city                  String?
  country               String?
  gst_number            String?
  incorporation_date    DateTime?
  pan_number            String?
  partner_display_name  String?
  partner_name          String?
  partner_type          String?
  pincode               String?
  registration_number   String?
  state                 String?
  website_url           String?
  
  // System tracking
  created_by            String?
  created_date          DateTime?
  data_source           String?
  integration_status    String?
  internal_tags         String?
  last_modified_by      String?
  last_modified_date    DateTime?
  notes                 String?
  partner_record_status String?
  portal_access_provided String?
  api_access_provided   String?

  // external
  hs_created_by_user_id     Int?       @map("hs_created_by_user_id")     
  hs_createdate             DateTime?  @map("hs_createdate")            
  hs_lastmodifieddate       DateTime?  @map("hs_lastmodifieddate")       
  hs_object_id              String?       @map("hs_object_id")              
  hs_updated_by_user_id     Int?       @map("hs_updated_by_user_id")     
  hubspot_owner_id          String?    @map("hubspot_owner_id")
  
  created_at             DateTime @default(now())
  updated_at             DateTime @default(now())
  
  // Relations to normalized tables
  business_capabilities  B2BPartnerBusinessCapabilities?
  commission_structure   B2BPartnerCommissionStructure?
  compliance            B2BPartnerCompliance?
  contact_info           B2BPartnerContactInfo?
  financial_tracking     B2BPartnerFinancialTracking?
  lead_attribution       B2BPartnerLeadAttribution?
  marketing_promo        B2BPartnerMarketingPromo?
  partnership_details    B2BPartnerPartnershipDetails?
  performance_metrics    B2BPartnerPerformanceMetrics?
  relationship_managemenet      B2BPartnerRelationshipManagement?
  system_tracking B2BSystemTracking?
  b2b_partner_contacts EdumateContact[] @relation("B2BPartnerContacts")

  @@map("b2b_partners")
}

// Business Capabilities
model B2BPartnerBusinessCapabilities {
  id                      Int        @id @default(autoincrement())
  partner_id               Int        @unique
  partner                 B2BPartner @relation(fields: [partner_id], references: [id], onDelete: Cascade)
  
  experience_years        Float?
  student_capacity_monthly Float?
  student_capacity_yearly Float?
  target_courses          String?
  target_desrinations     String?
  target_universities     String?
  team_size               Float?
  
  @@map("b2b_partner_business_capabilities")
}

// Commission Structure
model B2BPartnerCommissionStructure {
  id                        Int        @id @default(autoincrement())
  partner_id                 Int        @unique
  partner                   B2BPartner @relation(fields: [partner_id], references: [id], onDelete: Cascade)
  
  bank_account_number       String?
  bank_branch               String?
  bank_name                 String?
  beneficiary_name          String?
  bonus_structure           String?
  commission_model          String?
  commission_rate           Float?
  commission_type           String?
  fixed_commission_amount   Float?
  gst_applicable            String?
  ifsc_code                 String?
  invoice_requirements      String?
  payment_frequency         String?
  payment_method            String?
  payment_terms             String?
  tds_applicable            String?
  tds_rate                  Float?
  tiered_commission_structure String?
  
  @@map("b2b_partner_commission_structure")
}

// Compliance & Documentation
model B2BPartnerCompliance {
  id                           Int        @id @default(autoincrement())
  partner_id                    Int        @unique
  partner                      B2BPartner @relation(fields: [partner_id], references: [id], onDelete: Cascade)
  
  agreement_signed_date        DateTime?
  background_verification_status String?
  kyc_completion_date          DateTime?
  kyc_status                   String?
  
  @@map("b2b_partner_compliance")
}

// Contact Information
model B2BPartnerContactInfo {
  id                         Int        @id @default(autoincrement())
  partner_id                  Int        @unique
  partner                    B2BPartner @relation(fields: [partner_id], references: [id], onDelete: Cascade)
  
  accounts_contact_email     String?
  accounts_contact_person    String?
  accounts_contact_phone     String?
  marketing_contact_email    String?
  marketing_contact_person   String?
  marketing_contact_phone    String?
  primary_contact_designation String?
  primary_contact_email      String?
  primary_contact_person     String?
  primary_contact_phone      String?
  secondary_contact_email    String?
  secondary_contact_person   String?
  secondary_contact_phone    String?
  
  @@map("b2b_partner_contact_info")
}

// Financial Tracking
model B2BPartnerFinancialTracking {
  id                        Int        @id @default(autoincrement())
  partner_id                 Int        @unique
  partner                   B2BPartner @relation(fields: [partner_id], references: [id], onDelete: Cascade)
  
  average_monthly_commission Float?
  current_month_commission   Float?
  last_payment_amount        Float?
  last_payment_date          DateTime?
  lifetime_value             String?
  next_payment_due_date      DateTime?
  outstanding_commission     Float?
  payment_status             String?
  total_commission_earned    Float?
  total_commission_paid      Float?
  ytd_commission_earned      Float?
  ytd_commission_paid        Float?
  
  @@map("b2b_partner_financial_tracking")
}

// Lead Attribution
model B2BPartnerLeadAttribution {
  id                      Int        @id @default(autoincrement())
  partner_id               Int        @unique
  partner                 B2BPartner @relation(fields: [partner_id], references: [id], onDelete: Cascade)
  
  lead_submission_method  String?
  lead_tracking_method    String?
  tracking_link           String?
  unique_referral_code    String?
  utm_source_assigned     String?
  
  @@map("b2b_partner_lead_attribution")
}

// Marketing & Promotion
model B2BPartnerMarketingPromo {
  id                        Int        @id @default(autoincrement())
  partner_id                 Int        @unique
  partner                   B2BPartner @relation(fields: [partner_id], references: [id], onDelete: Cascade)
  
  brand_usage_guidelines    String?
  co_marketing_approval     String?
  content_collaboration     String?
  digital_presence_rating   Float?
  event_participation       String?
  marketing_materials_provided String?
  promotional_activities    String?
  social_media_followers    Float?
  
  @@map("b2b_partner_marketing_promo")
}

// Partnership Details
model B2BPartnerPartnershipDetails {
  id                    Int        @id @default(autoincrement())
  partner_id             Int        @unique
  partner               B2BPartner @relation(fields: [partner_id], references: [id], onDelete: Cascade)
  
  agreement_type        String?
  partnership_end_date  DateTime?
  partnership_start_date DateTime?
  partnership_status    String?
  
  @@map("b2b_partner_partnership_details")
}

// Performance Metrics
model B2BPartnerPerformanceMetrics {
  id                           Int        @id @default(autoincrement())
  partner_id                    Int        @unique
  partner                      B2BPartner @relation(fields: [partner_id], references: [id], onDelete: Cascade)
  
  application_conversion_rate  Float?
  applications_approved        Float?
  approval_conversion_rate     Float?
  average_lead_quality_score   Float?
  average_loan_amount          Float?
  best_performing_month        String?
  last_lead_date               DateTime?
  lead_conversion_rate         Float?
  leads_converted_to_applications Float?
  loans_disbursed              Float?
  partner_rating               Float?
  qualified_leads_provided     Float?
  seasonal_performance_pattern String?
  total_leads_provided         Float?
  total_loan_value_generated   Float?
  
  @@map("b2b_partner_performance_metrics")
}

// Relationship Management
model B2BPartnerRelationshipManagement {
  id                        Int        @id @default(autoincrement())
  partner_id                 Int        @unique
  partner                   B2BPartner @relation(fields: [partner_id], references: [id], onDelete: Cascade)
  
  assigned_account_manager  String?
  communication_frequency   String?
  escalation_history        String?
  feedback_comments         String?
  joint_marketing_activities String?
  last_interaction_date     DateTime?
  relationship_status       String?
  satisfaction_score        Float?
  training_completed        String?
  
  @@map("b2b_partner_relationship_mgmt")
}

model B2BSystemTracking {
  id                        Int                     @id @default(autoincrement())
  partner B2BPartner  @relation(fields: [partner_id], references: [id], onDelete: Cascade)

  // Partner Information
  partner_id                Int                     @unique @map("partner_id")
  partner_name              String                  @map("partner_name")
  
  // System Tracking Fields
  api_access_provided       ApiAccessStatus         @map("api_access_provided")
  created_by                String                  @map("created_by")
  created_date              DateTime                @map("created_date")
  data_source               B2BDataSource              @map("data_source")
  integration_status        B2BIntegrationStatus       @map("integration_status")
  internal_tags             String?                 @map("internal_tags")
  last_modified_by          String                  @map("last_modified_by")
  last_modified_date        DateTime                @map("last_modified_date")
  notes                     String?                 @db.Text @map("notes")
  partner_record_status     PartnerRecordStatus     @map("partner_record_status")
  portal_access_provided    PortalAccessStatus      @map("portal_access_provided")
  
  // System timestamps
  created_at                DateTime                @default(now()) @map("created_at")
  updated_at                DateTime                @default(now()) @updatedAt @map("updated_at")
  
  // Indexes for better query performance
  @@index([partner_name])
  @@index([partner_record_status])
  @@index([integration_status])
  @@index([data_source])
  @@index([created_date])
  @@index([last_modified_date])
  
  @@map("b2b_system_tracking")
}

model Token {
  id        Int      @id @default(autoincrement())
  token     String
  user_id    Int
  createdOn DateTime @default(now())

  user      User     @relation("Tokens", fields: [user_id], references: [id])

  @@map("tokens")
}

model UserOtp {
  id        Int      @id @default(autoincrement())
  user_id    Int
  otp       String
  createdOn DateTime     @default(now())

  @@map("userOtps")
}

model currency_conversion {
  id            Int       @id @default(autoincrement())
  from_currency String    @db.VarChar(3)
  to_currency   String    @db.VarChar(3)
  exchange_rate Decimal   @db.Decimal(12, 6)
  last_updated  DateTime @default(now()) @db.Timestamp(6)
  is_active     Boolean  @default(true)

  @@unique([from_currency, to_currency])
}

model User {
  id            Int        @id @default(autoincrement())
  b2b_id      Int
  email         String     @unique @map("email")
  password_hash String?     @map("password_hash")
  full_name     String?    @map("full_name")
  is_active     Boolean    @default(true) @map("is_active")
  created_at    DateTime   @default(now()) @map("created_at")
  updated_at    DateTime   @default(now()) @updatedAt @map("updated_at")

  // Back relation
  roles         UserRole[] @relation("UserRole")
  sessions      Session[] @relation("Session")
  login_history  LoginHistory[] @relation("LoginHistory")
  loan_applications    LoanApplication[] @relation("UserLoanApplications")
  assigned_applications LoanApplication[] @relation("AssignedCounselor")
  created_applications LoanApplication[] @relation("CreatedBy")
  modified_applications LoanApplication[] @relation("LastModifiedBy")
  uploaded_files  FileUpload[] @relation("FileUpload")
  email_history EmailHistory[] @relation("EmailHistory")
  tokens Token[] @relation("Tokens")
  deleted_by  LoanApplication[] @relation("DeletedBy")
  deleted_by_contacts_info EdumateContactsPersonalInformation[] @relation("ContactsDeletedBy")
  deleted_By_contacts  EdumateContact[] @relation("ContactsDeletedBy")

  @@map("users")
}

model LoanApplication {
  id                      Int      @id @default(autoincrement())
  application_date        DateTime @default(now())
  lead_reference_code     String?  @unique
  student_id              String?  @unique
  student_name            String
  student_email           String
  student_phone           String?
  application_source      ApplicationSource @default(DIRECT)
  assigned_counselor_id   Int?
  b2b_partner_id          Int?
  is_deleted              Boolean  @default(false)

  // Foreign Keys
  user_id                 Int
  contact_id        Int?

  // System tracking
  created_by_id           Int?
  last_modified_by_id     Int?
  deleted_by_id           Int?          // 👈 new field
  created_at              DateTime @default(now())
  updated_at              DateTime @default(now()) @updatedAt
  deleted_at              DateTime?

  // external
  hs_created_by_user_id     Int?       @map("hs_created_by_user_id")     
  hs_createdate             DateTime?  @map("hs_createdate")            
  hs_lastmodifieddate       DateTime?  @map("hs_lastmodifieddate")       
  hs_object_id              String?       @map("hs_object_id")              
  hs_updated_by_user_id     Int?       @map("hs_updated_by_user_id")     
  hubspot_owner_id          String?    @map("hubspot_owner_id") 

  // Relations
  user                    User     @relation("UserLoanApplications", fields: [user_id], references: [id])
  assigned_counselor      User?    @relation("AssignedCounselor", fields: [assigned_counselor_id], references: [id])
  created_by              User?    @relation("CreatedBy", fields: [created_by_id], references: [id])
  last_modified_by        User?    @relation("LastModifiedBy", fields: [last_modified_by_id], references: [id])
  deleted_by              User?    @relation("DeletedBy", fields: [deleted_by_id], references: [id])
  edumate_contact           EdumateContact? @relation(fields: [contact_id], references: [id])

  // One-to-One relations
  academic_details        LoanApplicationAcademicDetails?
  financial_requirements  LoanApplicationFinancialRequirements?
  loan_application_status      LoanApplicationStatus?
  lender_information      LoanApplicationLenderInformation?
  document_management     LoanApplicationDocumentManagement?
  processing_timeline    LoanApplicationProcessingTimeline?
  rejection_details       LoanApplicationRejectionDetails?
  communication_prefs     LoanApplicationCommunicationPreferences?
  system_tracking         LoanApplicationSystemTracking?

  // One-to-Many relations
  commission_records      LoanApplicationCommissionRecord[]
  additional_services     LoanApplicationAdditionalService[]

  @@index([student_email])
  @@index([application_date])
  @@index([assigned_counselor_id])
  @@map("loan_applications")
}

// ACADEMIC DETAILS
model LoanApplicationAcademicDetails {
  id                         Int       @id @default(autoincrement())
  loan_application_id        Int       @unique
  target_course              String?
  target_university          String?
  target_university_country  String?
  course_level               CourseLevel?
  course_start_date          DateTime?
  course_end_date            DateTime?
  course_duration            Int?      // in months
  admission_status           AdmissionStatus @default(NOT_APPLIED)
  visa_status               VisaStatus @default(NOT_APPLIED)
  i20_cas_received          I20CasStatus @default(NOT_APPLICABLE)
  created_at                DateTime  @default(now())
  updated_at                DateTime  @default(now()) @updatedAt

  // Relations
  loan_application          LoanApplication @relation(fields: [loan_application_id], references: [id], onDelete: Cascade)

  @@map("loan_application_academic_details")
}

// FINANCIAL REQUIREMENTS
model LoanApplicationFinancialRequirements {
  id                        Int     @id @default(autoincrement())
  loan_application_id       Int     @unique
  loan_amount_requested     Decimal @db.Decimal(12, 2)
  loan_amount_approved      Decimal? @db.Decimal(12, 2)
  loan_amount_disbursed     Decimal? @db.Decimal(12, 2)
  tuition_fee              Decimal? @db.Decimal(12, 2)
  living_expenses          Decimal? @db.Decimal(12, 2)
  travel_expenses          Decimal? @db.Decimal(12, 2)
  insurance_cost           Decimal? @db.Decimal(12, 2)
  other_expenses           Decimal? @db.Decimal(12, 2)
  total_funding_required   Decimal? @db.Decimal(12, 2)
  scholarship_amount       Decimal? @db.Decimal(12, 2)
  self_funding_amount      Decimal? @db.Decimal(12, 2)
  created_at               DateTime @default(now())
  updated_at               DateTime @default(now()) @updatedAt

  // Relations
  loan_application         LoanApplication @relation(fields: [loan_application_id], references: [id], onDelete: Cascade)

  @@map("loan_application_financial_requirements")
}

// APPLICATION STATUS
model LoanApplicationStatus {
  id                    Int             @id @default(autoincrement())
  loan_application_id   Int             @unique
  status               ApplicationStatusEnum @default(PRE_APPROVED)
  priority_level       PriorityLevel   @default(LOW)
  application_notes    String?         @db.Text
  internal_notes       String?         @db.Text
  record_status        RecordStatus    @default(ACTIVE)
  created_at           DateTime        @default(now())
  updated_at           DateTime        @default(now()) @updatedAt

  // Relations
  loan_application     LoanApplication @relation(fields: [loan_application_id], references: [id], onDelete: Cascade)

  @@map("loan_application_status")
}

// LENDER INFORMATION
model LoanApplicationLenderInformation {
  id                        Int            @id @default(autoincrement())
  loan_application_id       Int            @unique
  primary_lender_id         String?
  primary_lender_name       String?
  loan_product_id           String?
  loan_product_name         String?
  loan_product_type         LoanProductType?
  interest_rate_offered     Decimal?       @db.Decimal(5, 2)
  interest_rate_type        InterestRateType?
  loan_tenure_years         Int?
  moratorium_period_months  Int?
  emi_amount               Decimal?       @db.Decimal(12, 2)
  processing_fee           Decimal?       @db.Decimal(12, 2)
  co_signer_required       Boolean        @default(false)
  collateral_required      Boolean        @default(false)
  collateral_type          String?
  collateral_value         Decimal?       @db.Decimal(12, 2)
  guarantor_details        String?        @db.Text
  created_at               DateTime       @default(now())
  updated_at               DateTime       @default(now()) @updatedAt

  // Relations
  loan_application         LoanApplication @relation(fields: [loan_application_id], references: [id], onDelete: Cascade)

  @@map("loan_application_lender_information")
}

// DOCUMENT MANAGEMENT
model LoanApplicationDocumentManagement {
  id                        Int      @id @default(autoincrement())
  loan_application_id       Int      @unique
  documents_required_list   String?  @db.Text
  documents_submitted_list  String?  @db.Text
  documents_pending_list    String?  @db.Text
  created_at               DateTime @default(now())
  updated_at               DateTime @default(now()) @updatedAt

  // Relations
  loan_application         LoanApplication @relation(fields: [loan_application_id], references: [id], onDelete: Cascade)

  @@map("loan_application_document_management")
}

// PROCESSING TIMELINE
model LoanApplicationProcessingTimeline {
  id                           Int       @id @default(autoincrement())
  loan_application_id          Int       @unique
  lender_submission_date       DateTime?
  lender_acknowledgment_date   DateTime?
  approval_date               DateTime?
  sanction_letter_date        DateTime?
  disbursement_request_date   DateTime?
  disbursement_date           DateTime?
  total_processing_days       Int?
  sla_breach                  Boolean   @default(false)
  delay_reason                DelayReason?
  created_at                  DateTime  @default(now())
  updated_at                  DateTime  @default(now()) @updatedAt

  // Relations
  loan_application            LoanApplication @relation(fields: [loan_application_id], references: [id], onDelete: Cascade)

  @@map("loan_application_processing_timeline")
}

// REJECTION DETAILS
model LoanApplicationRejectionDetails {
  id                    Int            @id @default(autoincrement())
  loan_application_id   Int            @unique
  rejection_date        DateTime?
  rejection_reason      RejectionReason?
  rejection_details     String?        @db.Text
  appeal_submitted      Boolean        @default(false)
  appeal_outcome        AppealOutcome  @default(NOT_APPLICABLE)
  resolution_provided   String?        @db.Text
  created_at           DateTime       @default(now())
  updated_at           DateTime       @default(now()) @updatedAt

  // Relations
  loan_application     LoanApplication @relation(fields: [loan_application_id], references: [id], onDelete: Cascade)

  @@map("loan_application_rejection_details")
}

// COMMUNICATION PREFERENCES
model LoanApplicationCommunicationPreferences {
  id                          Int                    @id @default(autoincrement())
  loan_application_id         Int                    @unique
  communication_preference    CommunicationChannel   @default(EMAIL)
  follow_up_frequency        FollowUpFrequency      @default(AS_NEEDED)
  last_contact_date          DateTime?
  next_follow_up_date        DateTime?
  customer_satisfaction_rating Int?                  @db.SmallInt // 1-10
  customer_feedback          String?                @db.Text
  complaint_raised           Boolean                @default(false)
  complaint_details          String?                @db.Text
  complaint_resolution_date  DateTime?
  created_at                 DateTime               @default(now())
  updated_at                 DateTime               @default(now()) @updatedAt

  // Relations
  loan_application           LoanApplication        @relation(fields: [loan_application_id], references: [id], onDelete: Cascade)

  @@map("loan_application_communication_preferences")
}

// SYSTEM TRACKING
model LoanApplicationSystemTracking {
  id                      Int              @id @default(autoincrement())
  loan_application_id     Int              @unique
  application_source_system ApplicationSourceSystem @default(MANUAL_ENTRY)
  integration_status      IntegrationStatus @default(NOT_REQUIRED)
  audit_trail            String?          @db.Text
  hs_object_id           String?
  hs_merged_object_ids   String?
  hs_object_source_label String?
  application_record_status   RecordStatus?  @default(ACTIVE)
  external_reference_id     String?

  // tracking
  created_at             DateTime         @default(now())
  created_by            String?
  last_modified_by  String?
  updated_at             DateTime         @default(now()) @updatedAt

  // Relations
  loan_application       LoanApplication  @relation(fields: [loan_application_id], references: [id], onDelete: Cascade)

  @@map("loan_application_system_tracking")
}

// COMMISSION RECORDS (One-to-Many)
model LoanApplicationCommissionRecord {
  id                         Int              @id @default(autoincrement())
  loan_application_id        Int
  commission_amount          Decimal?         @db.Decimal(12, 2)
  commission_rate            Decimal?         @db.Decimal(5, 2)
  commission_calculation_base CommissionBase?
  commission_status          CommissionStatus @default(NOT_APPLICABLE)
  commission_approval_date   DateTime?
  commission_payment_date    DateTime?
  partner_commission_applicable Boolean       @default(false)
  settlement_id             String?
  created_at                DateTime         @default(now())
  updated_at                DateTime         @default(now()) @updatedAt

  // Relations
  loan_application          LoanApplication  @relation(fields: [loan_application_id], references: [id], onDelete: Cascade)

  @@map("loan_application_commission_records")
}

// ADDITIONAL SERVICES (One-to-Many)
model LoanApplicationAdditionalService {
  id                    Int      @id @default(autoincrement())
  loan_application_id   Int
  additional_services_notes                String?  @db.Text
  created_at           DateTime @default(now())
  updated_at           DateTime @default(now()) @updatedAt

  // Relations
  loan_application     LoanApplication @relation(fields: [loan_application_id], references: [id], onDelete: Cascade)

  @@map("loan_application_additional_services")
}

model FileUpload {
  id                Int       @id @default(autoincrement())
  filename          String
  file_data         Json
  total_records     Int           @default(0)
  mime_type         String?

  // Relation to entity type
  entity_type_id    Int
  entity_type       FileEntity    @relation(fields: [entity_type_id], references: [id])


  // Processing status
  processed_records Int           @default(0)
  failed_records    Int           @default(0)

  // User tracking
  uploaded_by_id    Int
  uploaded_by       User          @relation("FileUpload",fields: [uploaded_by_id], references: [id])

  // Timestamps
  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt
  processed_at      DateTime?

  @@index([entity_type_id])
  @@index([created_at])
  @@map("file_uploads")
}

model FileEntity {
  id          Int           @id @default(autoincrement())
  type        String        @unique  @map("type")
  description String?   @map("description")

  uploads     FileUpload[]

  @@index([type])
  @@map("file_entities")
}

model EmailType {
  id          Int      @id @default(autoincrement())
  subject     String   @unique @map("subject")
  type        String   @map("type")
  created_at  DateTime @default(now()) @map("created_at")
  
  // Relations
  email_history EmailHistory[]
  
  @@index([subject,type])
  @@map("email_types")
}

model EmailHistory {
  id              Int         @id @default(autoincrement())
  user_id         Int?         @map("user_id")
  reciepient 	String	      @map("reciepient")
  cc		String?                 @map("cc")
  bcc		String?	                @map("bcc")
  email_type_id   Int         @map("email_type_id")
  sent_at         DateTime?   @map("sent_at")
  created_at      DateTime    @default(now()) @map("created_at")
  
  // Relations
  user      User?      @relation("EmailHistory",fields: [user_id], references: [id])
  email_type EmailType @relation(fields: [email_type_id], references: [id])
  
  @@index([user_id])
  @@index([email_type_id])
  @@index([sent_at])
  @@map("email_history")
}

model EdumateContactsApplicationJourney {
  id                                     Int                           @id @default(autoincrement())
  contact_id                            Int                          @unique @map("contact_id")
  contact                       EdumateContact                @relation(fields: [contact_id], references: [id], onDelete: Cascade)

  // Counselor Information
  assigned_counselor                    String?                      @map("assigned_counselor")
  counselor_notes                       String?                      @map("counselor_notes") @db.Text
  
  // Status Information
  current_status_disposition            CurrentStatusDisposition?    @map("current_status_disposition")
  current_status_disposition_reason     StatusDispositionReason?    @map("current_status_disposition_reason")
  priority_level                        PriorityLevel?               @map("priority_level")
  
  // Contact Dates
  first_contact_date                    DateTime?                    @map("first_contact_date")
  last_contact_date                     DateTime?                    @map("last_contact_date")
  follow_up_date                        DateTime?                    @map("follow_up_date")
  next_follow_up_date                   DateTime?                    @map("next_follow_up_date")
  
  created_at                            DateTime                     @default(now()) @map("created_at")
  updated_at                            DateTime                     @updatedAt @map("updated_at")
  
  @@map("edumate_contacts_application_journey")
}

model EdumateContactsAcademicProfile {
  id                            Int                           @id @default(autoincrement())
  contact_id                    Int                        @unique @map("contact_id")
  
  // Admission Status
  admission_status              EdumateContactAdmissionStatus?              @map("admission_status")
  
  // Current Education
  current_education_level       CurrentEducationLevel?        @map("current_education_level")
  current_institution           String?                       @map("current_institution")
  current_course_major          String?                       @map("current_course_major")
  current_cgpa_percentage       Float?                        @map("current_cgpa_percentage")
  current_graduation_year       Int?                          @map("current_graduation_year")
  
  // Course Details
  course_duration_months        Int?                          @map("course_duration_months")
  
  // Test Scores
  cat_score                     Int?                          @map("cat_score")
  gre_score                     Int?                          @map("gre_score")
  gmat_score                    Int?                          @map("gmat_score")
  toefl_score                   Int?                          @map("toefl_score")
  ielts_score                   Float?                        @map("ielts_score")
  sat_score                     Int?                          @map("sat_score")
  duolingo_score                Int?                          @map("duolingo_score")
  nmat_score                    Int?                          @map("nmat_score")
  xat_score                     Int?                          @map("xat_score")
  other_test_scores             String?                       @map("other_test_scores") @db.Text
  
  // Target Education
  target_degree_level           TargetDegreeLevel?            @map("target_degree_level")
  target_course_major           String?                       @map("target_course_major")
  preferred_study_destination   PreferredStudyDestination?    @map("preferred_study_destination")
  target_universities           String?                       @map("target_universities") @db.Text
  
  // Intake Details
  intended_start_term           IntendedStartTerm?            @map("intended_start_term")
  intended_start_date           DateTime?                     @map("intended_start_date")
  intake_month                  String?                       @map("intake_month")
  intake_year                   String?                       @map("intake_year")
  
  created_at                    DateTime                      @default(now()) @map("created_at")
  updated_at                    DateTime                      @updatedAt @map("updated_at")
  
  // Relations
  contact                       EdumateContact                @relation(fields: [contact_id], references: [id], onDelete: Cascade)
  
  @@map("edumate_contact_academic_profiles")
}

model EdumateContact {
  id                              Int                           @id @default(autoincrement())
  deleted_by_id Int?
  first_name String? @map("first_name")
  b2b_partner_id Int?

 // HubSpot System Fields
  hs_created_by_user_id     Int?       @map("hs_created_by_user_id")     
  hs_createdate             DateTime?  @map("hs_createdate")            
  hs_lastmodifieddate       DateTime?  @map("hs_lastmodifieddate")       
  hs_object_id              String?       @map("hs_object_id")              
  hs_updated_by_user_id     Int?       @map("hs_updated_by_user_id")     
  hubspot_owner_id          String?    @map("hubspot_owner_id")          

  // Currency Information
  base_currency                   String?         @map("base_currency")
  study_destination_currency      String?         @map("study_destination_currency")
  user_selected_currency          String?         @map("user_selected_currency")
  
  // Course Information
  course_type                     EdumateContactCourseType?     @map("course_type")
  
  // Co-applicant Information
  co_applicant_1_email            String?         @map("co_applicant_1_email")
  co_applicant_1_mobile_number    String?         @map("co_applicant_1_mobile_number")
  
  created_at                      DateTime        @default(now()) @map("created_at")
  updated_at                      DateTime        @updatedAt @map("updated_at")
  deleted_by  User?    @relation("ContactsDeletedBy", fields: [deleted_by_id], references: [id])
  is_deleted   Boolean @default(false)
  
  // Relations
  academic_profile                EdumateContactsAcademicProfile?
  application_journey             EdumateContactsApplicationJourney?
  financial_Info                       EdumateContactsFinancialInfo?
  leads                                    EdumateContactsLeadAttribution?
  loan_preference                   EdumateContactsLoanPreferences?
  personal_information          EdumateContactsPersonalInformation?
  system_tracking                   EdumateContactsSystemTracking?
  loan_application                  LoanApplication[]
  b2b_partner       B2BPartner? @relation("B2BPartnerContacts",fields: [b2b_partner_id], references: [id])
  
  @@map("edumate_contacts")
}

model EdumateContactsSystemTracking {
  id                        Int                     @id @default(autoincrement())
  contact_id                Int                  @unique @map("contact_id")
  contact                   EdumateContact          @relation(fields: [contact_id], references: [id], onDelete: Cascade)
  
  // Creation & Modification Info
  created_by                Int?                 @map("created_by")
  created_date              DateTime?               @map("created_date")
  last_modified_by          String?                 @map("last_modified_by")
  last_modified_date        DateTime?               @map("last_modified_date")
  
  // Data Management
  data_source               DataSource?             @map("data_source")
  student_record_status     StudentRecordStatus?    @map("student_record_status")
  tags                      String?                 @map("tags") @db.Text
  
  // Consent Management
  gdpr_consent              GDPRConsent?            @map("gdpr_consent")
  marketing_consent         MarketingConsent?       @map("marketing_consent")
  
  created_at                DateTime                @default(now()) @map("created_at")
  updated_at                DateTime                @updatedAt @map("updated_at")
  
  @@map("edumate_contacts_system_tracking")
}

// Financial information
model EdumateContactsFinancialInfo {
  id                            Int                           @id @default(autoincrement())
  contact_id                    Int                        @unique @map("contact_id")
  contact                       EdumateContact                @relation(fields: [contact_id], references: [id], onDelete: Cascade)
  
  // General Financial Info
  annual_family_income          Decimal?                      @db.Decimal(15, 2) @map("annual_family_income")
  currency                      FinancialCurrency?            @map("currency")
  
  // Co-applicant 1
  co_applicant_1_name           String?                       @map("co_applicant_1_name")
  co_applicant_1_income         Decimal?                      @db.Decimal(15, 2) @map("co_applicant_1_income")
  co_applicant_1_occupation     CoApplicantOccupation?        @map("co_applicant_1_occupation")
  co_applicant_1_relationship   CoApplicantRelationship?     @map("co_applicant_1_relationship")
  
  // Co-applicant 2
  co_applicant_2_name           String?                       @map("co_applicant_2_name")
  co_applicant_2_income         Decimal?                      @db.Decimal(15, 2) @map("co_applicant_2_income")
  co_applicant_2_occupation     CoApplicantOccupation?        @map("co_applicant_2_occupation")
  co_applicant_2_relationship   CoApplicantRelationship?     @map("co_applicant_2_relationship")
  
  // Co-applicant 3
  co_applicant_3_name           String?                       @map("co_applicant_3_name")
  co_applicant_3_income         Decimal?                      @db.Decimal(15, 2) @map("co_applicant_3_income")
  co_applicant_3_occupation     CoApplicantOccupation?        @map("co_applicant_3_occupation")
  co_applicant_3_relationship   CoApplicantRelationship?     @map("co_applicant_3_relationship")
  
  // Collateral 1
  collateral_available          CollateralAvailable?          @map("collateral_available")
  collateral_type               EdumateContactCollateralType?               @map("collateral_type")
  collateral_value              Decimal?                      @db.Decimal(15, 2) @map("collateral_value")
  
  // Collateral 2
  collateral_2_available        CollateralAvailable?          @map("collateral_2_available")
  collateral_2_type             EdumateContactCollateralType?               @map("collateral_2_type")
  collateral_2_value            Decimal?                      @db.Decimal(15, 2) @map("collateral_2_value")
  
  // Expenses
  living_expenses               Decimal?                      @db.Decimal(15, 2) @map("living_expenses")
  other_expenses                Decimal?                      @db.Decimal(15, 2) @map("other_expenses")
  
  // Education Costs
  total_course_cost             Decimal?                      @db.Decimal(15, 2) @map("total_course_cost")
  tuition_fee                   Decimal?                      @db.Decimal(15, 2) @map("tuition_fee")
  
  // Funding
  loan_amount_required          Decimal?                      @db.Decimal(15, 2) @map("loan_amount_required")
  scholarship_amount            Decimal?                      @db.Decimal(15, 2) @map("scholarship_amount")
  self_funding_amount           Decimal?                      @db.Decimal(15, 2) @map("self_funding_amount")
  
  created_at                    DateTime                      @default(now()) @map("created_at")
  updated_at                    DateTime                      @updatedAt @map("updated_at")
  
  @@map("edumate_contacts_financial_info")
}

// Lead tracking and attribution
model EdumateContactsLeadAttribution {
  id                              Int                               @id @default(autoincrement())
  contact_id                      Int                            @unique @map("contact_id")
  contact                         EdumateContact                    @relation(fields: [contact_id], references: [id], onDelete: Cascade)
  
  // Lead Information
  lead_source                     LeadSource?                       @map("lead_source")
  lead_source_detail              String?                           @map("lead_source_detail")
  lead_quality_score              Float?                            @map("lead_quality_score")
  lead_reference_code             String?                           @map("lead_reference_code")
  
  // B2B Partner Information
  b2b_partner_id                  String?                           @map("b2b_partner_id")
  b2b_partner_name                String?                           @map("b2b_partner_name")
  partner_commission_applicable   PartnerCommissionApplicable?     @map("partner_commission_applicable")
  
  // Referral Information
  referral_person_name            String?                           @map("referral_person_name")
  referral_person_contact         String?                           @map("referral_person_contact")
  
  // UTM Parameters
  utm_source                      String?                           @map("utm_source")
  utm_medium                      String?                           @map("utm_medium")
  utm_campaign                    String?                           @map("utm_campaign")
  utm_term                        String?                           @map("utm_term")
  utm_content                     String?                           @map("utm_content")
  
  created_at                      DateTime                          @default(now()) @map("created_at")
  updated_at                      DateTime                          @updatedAt @map("updated_at")
  
  @@map("edumate_contacts_lead_attribution")
}

model EdumateContactsLoanPreferences {
  id                           Int                          @id @default(autoincrement())
  contact_id                   Int                       @unique @map("contact_id")
  contact                      EdumateContact               @relation(fields: [contact_id], references: [id], onDelete: Cascade)
  
  // Loan Preferences
  loan_type_preference         LoanTypePreference?          @map("loan_type_preference")
  preferred_lenders            PreferredLenders[]           @map("preferred_lenders")
  repayment_type_preference    RepaymentTypePreference?     @map("repayment_type_preference")
  
  created_at                   DateTime                     @default(now()) @map("created_at")
  updated_at                   DateTime                     @updatedAt @map("updated_at")
  
  @@map("edumate_contacts_loan_preferences")
}

model EdumateContactsPersonalInformation {
  id                              Int              @id @default(autoincrement())
  contact_id                      Int           @unique @map("contact_id")
  contact                         EdumateContact   @relation(fields: [contact_id], references: [id], onDelete: Cascade)
  
  // Basic Information
  first_name                      String           @map("first_name")  // Required field
  last_name                       String?          @map("last_name")
  email                           String?          @map("email")
  phone_number                    String?          @map("phone_number")
  date_of_birth                   DateTime?        @map("date_of_birth")
  gender                          Gender?          @map("gender")
  nationality                     Nationality?     @map("nationality")
  
  // Current Address
  current_address                 String?          @map("current_address") @db.Text
  city__current_address_         String?          @map("city__current_address_")
  state__current_address_        String?          @map("state__current_address_")
  country__current_address_      String?          @map("country__current_address_")
  pincode__current_address_      String?          @map("pincode__current_address_")
  
  // Permanent Address
  permanent_address               String?          @map("permanent_address") @db.Text
  city__permanent_address_       String?          @map("city__permanent_address_")
  state__permanent_address_      String?          @map("state__permanent_address_")
  country__permanent_address_    String?          @map("country__permanent_address_")
  pincode__permanent_address_    String?          @map("pincode__permanent_address_")
  
  created_at                      DateTime         @default(now()) @map("created_at")
  updated_at                      DateTime         @updatedAt @map("updated_at")
  deleted_by_id Int?
  is_deleted Boolean @default(false)
  deleted_by User?    @relation("ContactsDeletedBy", fields: [deleted_by_id], references: [id])
  
  @@map("edumate_contacts_personal_information")
}

// Main lender table
model Lender {
  id                    Int                 @id @default(autoincrement())
  external_id           String?             @unique @map("external_id") // HubSpot or other CRM ID
  
  // Basic Information
  lender_display_name                  String              @map("lender_display_name")
  lender_name String @map("lender_name")
  legal_name            String?             @map("legal_name")
  short_code            String?             @map("short_code")
  lender_logo_url              String?             @map("lender_logo_url")
  website_url               String?             @map("website_url")
  lender_category       LenderCategory      @map("lender_category")
  lender_type           LenderType          @map("lender_type")
  
  // System fields
  is_active             Boolean             @default(true) @map("is_active")
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  created_by            String?             @map("created_by")
  updated_by            String?             @map("updated_by")

  // external
  hs_created_by_user_id     Int?       @map("hs_created_by_user_id")     
  hs_createdate             DateTime?  @map("hs_createdate")            
  hs_lastmodifieddate       DateTime?  @map("hs_lastmodifieddate")       
  hs_object_id              String?       @map("hs_object_id")              
  hs_updated_by_user_id     Int?       @map("hs_updated_by_user_id")     
  hubspot_owner_id          String?    @map("hubspot_owner_id")
  
  // Relations
  contact_info          LenderContactInfo?
  business_metrics      LenderBusinessMetrics?
  loan_products         LoanProduct[]
  operational_details   LenderOperationalDetails?
  partnership           LenderPartnership?
  lender_system_tracking  LenderSystemTracking?
  
  @@index([lender_category])
  @@index([lender_type])
  @@index([created_at])
  @@map("lenders")
}

model LenderSystemTracking {
  id                      Int              @default(autoincrement())
  lender_id               Int              @unique
  data_source LenderDataSource @default(MANUAL_ENTRY)
  lender_record_status LenderRecordStatus @default(INACTIVE)
  notes String?
  performance_rating PerformanceRating @default(AVERAGE)

  created_at              DateTime         @default(now())
  updated_at              DateTime         @default(now()) @updatedAt
  last_modified_by    String?
  last_modified_date  DateTime?

  // Relations
  lender_system_tracking                  Lender           @relation(fields: [lender_id], references: [id], onDelete: Cascade)

  @@map("lender_system_tracking")
}

// Contact information for lender
model LenderContactInfo {
  id                    Int                 @id @default(autoincrement())
  lender_id             Int                 @unique @map("lender_id")
  lender                Lender              @relation(fields: [lender_id], references: [id], onDelete: Cascade)
  
  // Primary Contact
  primary_contact_email String?             @map("primary_contact_email")
  primary_contact_phone String?             @map("primary_contact_phone")
  primary_contact_designation String?       @map("primary_contact_designation")
  primary_contact_person  String?             @map("primary_contact_person")

  // RelationShip Management
  relationship_manager_email String?    @map("relationship_manager_email")
  relationship_manager_name String?   @map("relationship_manager_name")
  relationship_manager_phone String?    @map("relationship_manager_phone")

  // Escalation
  escalation_hierarchy_1_designation String?    @map("escalation_hierarchy_1_designation")
  escalation_hierarchy_1_email String? @map("escalation_hierarchy_1_email")
  escalation_hierarchy_1_name String? @map("escalation_hierarchy_1_name")
  escalation_hierarchy_1_phone String? @map("escalation_hierarchy_1_phone")
  
  // Customer Service
  customer_service_email String?            @map("customer_service_email")
  customer_service_number String?            @map("customer_service_number")
  
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@map("lender_contact_info")
}

// Business metrics and performance
model LenderBusinessMetrics {
  id                    Int                 @id @default(autoincrement())
  lender_id             Int                 @unique @map("lender_id")
  lender                Lender              @relation(fields: [lender_id], references: [id], onDelete: Cascade)
  
  average_approval_rate Int?              @map("average_approval_rate")
  monthly_application_volume  Int? @map("monthly_application_volume")
  quarterly_application_volume  Int? @map("quarterly_application_volume") 
  yearly_application_volume   Int? @map("yearly_application_volume") 
  average_processing_days Int?              @map("average_processing_days")
  average_disbursement_days Int?            @map("average_disbursement_days")
  
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@map("lender_business_metrics")
}

model LenderOfferings {
    id                    Int                 @id @default(autoincrement())
    co_signer_requirements  CoSignerRequirement @default(NOT_REQUIRED)
    collateral_requirements LenderCollateralType @default(NO_COLLATERAL)
    interest_rate_range_max_secured Int? @map("interest_rate_range_max_secured")
    interest_rate_range_max_unsecured Int? @map("interest_rate_range_max_unsecured")
    interest_rate_range_min_secured Int? @map("interest_rate_range_min_secured")
    interest_rate_range_min_unsecured Int? @map("interest_rate_range_min_unsecured")
    margin_money_requirement Int? @map("margin_money_requirement")
    maximum_loan_amount_secured Int? @map("maximum_loan_amount_secured")
    maximum_loan_amount_unsecured Int? @map("maximum_loan_amount_unsecured")
    minimum_loan_amount_secured Int? @map("minimum_loan_amount_secured")
    minimum_loan_amount_unsecured Int? @map("minimum_loan_amount_unsecured")
    not_supported_universities String? @map("not_supported_universities")
    processing_fee_range String? @map("processing_fee_range")
    special_programs String? @map("special_programs")
    supported_course_types  SupportedCourseTypes @default(CERTIFICATE)
    supported_destinations SupportedDestinations @default(US)

    created_at              DateTime         @default(now())
    updated_at              DateTime         @default(now()) @updatedAt
     
    @@map("lender_offerings")
}

// Loan products offered by lender
model LoanProduct {
  id                    Int                 @id @default(autoincrement())

  // Lender Information
  lender_id             Int                 @map("lender_id")
  lender                Lender              @relation(fields: [lender_id], references: [id], onDelete: Cascade)
  lender_name           String              @map("lender_name")
  partner_name  String? @map("partner_name")
  product_description   String?             @db.Text @map("product_description")
  product_display_name  String? @map("product_display_name")
  product_category         ProductCategory        @map("product_category")
  product_status        ProductStatus       @default(ACTIVE) @map("product_status")
  product_type          ProductType
  
  last_updated_date DateTime? @map("last_updated_date")
  is_active             Boolean             @default(true) @map("is_active")
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  created_by            String?             @map("created_by")
  updated_by            String?             @map("updated_by")

  // external
  hs_created_by_user_id     Int?       @map("hs_created_by_user_id")     
  hs_createdate             DateTime?  @map("hs_createdate")            
  hs_lastmodifieddate       DateTime?  @map("hs_lastmodifieddate")       
  hs_object_id              String?       @map("hs_object_id")              
  hs_updated_by_user_id     Int?       @map("hs_updated_by_user_id")     
  hubspot_owner_id          String?    @map("hubspot_owner_id")
  
  // Relations
  eligibility_criteria  LoanEligibilityCriteria[]
  financial_terms       LoanProductFinancialTerms?
  collateral_security   LoanProductCollateralSecurity?
  repayment_terms       LoanProductRepaymentTerms?
  processing_details    LoanProductProcessingDetails?
  geographic_coverage   LoanProductGeographicCoverage?
  special_features      LoanProductSpecialFeatures?
  performance_metrics   LoanPerformanceMetrics?
  system_integration    LoanProductSystemIntegration?
  loan_product_competitive_analysis LoanProductCompetitiveAnalytics?
  system_tracking LoanProductSystemTracking?
  
  @@unique([lender_id])
  @@index([lender_id])
  @@index([is_active])
  @@index([product_type])
  @@index([product_category])
  @@index([product_status])
  @@index([created_at])
  @@map("loan_products")
}

model LoanProductSystemTracking {
  id                      Int              @id @default(autoincrement())
  product_id Int @unique
  product  LoanProduct  @relation(fields: [product_id], references: [id], onDelete: Cascade)

  change_log String? @map("change_log")
  created_by  String? @map("created_by")
  created_date  DateTime? @map("created_date")
  last_modified_by DateTime? @map("last_modified_by")
  last_modified_date   DateTime? @map("last_modified_date")
  next_review_date   DateTime? @map("next_review_date")
  notes String? @map("notes")
  product_record_status ProductRecordStatus?
  review_frequency ReviewFrequency?
  version_number  Int? @map("version_number")

  created_at              DateTime         @default(now())
  updated_at              DateTime         @default(now()) @updatedAt
   
    @@map("loan_product_system_tracking")
}

model LoanProductCompetitiveAnalytics {
  id                      Int              @id @default(autoincrement())
  loan_product_id Int @unique
  loan_product_competitive_analysis LoanProduct  @relation(fields: [loan_product_id], references: [id], onDelete: Cascade)

  market_positioning LoanProductMarketPositioning
  pricing_strategy PricingStrategy

  created_at              DateTime         @default(now())
  updated_at              DateTime         @default(now()) @updatedAt  
   
@@map("loan_product_competitive_analysis")    
}

// Detailed eligibility criteria for loan products
model LoanEligibilityCriteria {
  id                        Int       @id @default(autoincrement())
  loan_product_id           Int       @map("loan_product_id")
  loan_product              LoanProduct @relation(fields: [loan_product_id], references: [id], onDelete: Cascade)
  
  // General Criteria Metadata
  criteria_type             String    @map("criteria_type") // ACADEMIC, FINANCIAL, DEMOGRAPHIC
  criteria_name             String    @map("criteria_name")
  criteria_description      String?   @map("criteria_description")
  is_mandatory              Boolean   @default(true) @map("is_mandatory")
  validation_rule           Json?     @map("validation_rule") // JSON rule for validation
  
  // Age Criteria
  min_age                   Int?      @map("min_age")
  max_age                   Int?      @map("max_age")
  max_age_at_maturity       Int?      @map("max_age_at_maturity")
  
  // Academic Criteria
  min_academic_percentage   Decimal?  @db.Decimal(5, 2) @map("min_academic_percentage")
  entrance_exam_required    Boolean   @default(false) @map("entrance_exam_required")
  entrance_exam_list        Json?     @map("entrance_exam_list") // Array of accepted exams
  minimum_percentage_required Decimal?  @db.Decimal(5, 2) @map("minimum_percentage_required")
  nationality_restrictions NationalityRestrictions? @map("nationality_restrictions")
  residency_requirements ResidencyRequirements?  @map("residency_requirements")
  target_segment TargetSegment? @map("target_segment")
  
  // Income Criteria
  maximum_family_income Decimal?  @db.Decimal(10, 2) @map("maximum_family_income")
  minimum_family_income Decimal?  @db.Decimal(10, 2) @map("minimum_family_income")
  min_annual_income         Decimal?  @db.Decimal(10, 2) @map("min_annual_income")
  min_co_applicant_income   Decimal?  @db.Decimal(10, 2) @map("min_co_applicant_income")
  employment_criteria       String?   @db.Text @map("employment_criteria")
  
  // Co-applicant
  co_applicant_income_criteria String? @map("co_applicant_income_criteria")
  co_applicant_required     String    @map("co_applicant_required") // ALWAYS, SOMETIMES, NOT REQUIRED
  co_applicant_relationship Json?     @map("co_applicant_relationship") // Array of accepted relationships
  guarantor_required        Boolean   @default(false) @map("guarantor_required")
  
  // Credit Score
  min_credit_score          Int?      @map("min_credit_score")
  credit_history_required   Boolean   @default(false) @map("credit_history_required")
  
  // Nationality
  indian_citizen_only       Boolean   @default(true) @map("indian_citizen_only")
  nri_eligible              Boolean   @default(false) @map("nri_eligible")
  pio_oci_eligible          Boolean   @default(false) @map("pio_oci_eligible")
  
  // Other Criteria
  work_experience_required  Boolean   @default(false) @map("work_experience_required")
  min_work_experience_months Int?     @map("min_work_experience_months")
  admission_confirmation_required Boolean @default(true) @map("admission_confirmation_required")
  
  created_at                DateTime  @default(now()) @map("created_at")
  updated_at                DateTime  @updatedAt @map("updated_at")
  
  @@index([loan_product_id])
  @@map("loan_eligibility_criteria")
}

// Operational details of lender
model LenderOperationalDetails {
  id                    Int                 @id @default(autoincrement())
  lender_id             Int                 @unique @map("lender_id")
  lender                Lender              @relation(fields: [lender_id], references: [id], onDelete: Cascade)
  
  // Digital Integration
  api_connectivity_status APIConnectivityStatus? @map("api_connectivity_status")
  digital_integration_level     IntegrationLevel?   @map("digital_integration_level")
  documentation_requirements Json?          @map("documentation_requirements")
  holiday_processing HolidayProcessing @default(NO)
  late_payment_charges          String?             @map("late_payment_charges")
  prepayment_charges      String?               @map("prepayment_charges")
  repayment_options RepaymentOptions @default(EMI)
  turnaround_time_commitment Int? @map("turnaround_time_commitment")
  working_hours         String?             @map("working_hours")
  
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@map("lender_operational_details")
}

// Partnership details
model LenderPartnership {
  id                    Int                 @id @default(autoincrement())
  lender_id             Int                 @unique @map("lender_id")
  lender                Lender              @relation(fields: [lender_id], references: [id], onDelete: Cascade)
  
  partnership_type      String?             @map("partnership_type") // EXCLUSIVE, NON_EXCLUSIVE
  
  agreement_start_date  DateTime?           @map("agreement_start_date")
  agreement_end_date    DateTime?           @map("agreement_end_date")
  auto_renewal          Boolean             @default(false) @map("auto_renewal")
  renewal_notice_days   Int?                @map("renewal_notice_days")
  
  // Commission Structure
  commission_structure  String?             @map("commission_structure")
  commission_percentage Decimal?            @db.Decimal(5, 2) @map("commission_percentage")
  partnership_end_date  DateTime? @map("partnership_end_date")
  partnership_start_date  DateTime? @map("partnership_start_date")
  partnership_status    PartnershipStatus   @default(PENDING) @map("partnership_status")
  payout_terms PayoutTerms @default(CUSTOM)
  revenue_share_model String? @map("revenue_share_model")

  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@map("lender_partnerships")
}

// Collateral and security requirements
model LoanProductCollateralSecurity {
  id                    Int                 @id @default(autoincrement())
  product_id            Int                 @unique @map("product_id")
  product               LoanProduct         @relation(fields: [product_id], references: [id], onDelete: Cascade)
    
  // Collateral Types and Values
  collateral_margin Int?      @map("collateral_margin")
  collateral_required   CollateralRequirement @map("collateral_required")
  collateral_threshold_amount  Decimal?            @db.Decimal(10, 2) @map("collateral_threshold_amount")
  collateral_types_accepted CollateralType @default(NA_PLOT)
  guarantor_required GurantorRequired @default(NOT_REQUIRED)
  insurance_coverage_percentage Int? @map("insurance_coverage_percentage")
  insurance_required InsuranceRequired @default(NOT_REQUIRED)
  third_party_guarantee_required ThirdPartyGuaranteeRequired  @default(NO)
  
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@map("loan_collateral_security")
}

// Repayment terms
model LoanProductRepaymentTerms {
  id                    Int                 @id @default(autoincrement())
  product_id            Int                 @unique @map("product_id")
  product               LoanProduct         @relation(fields: [product_id], references: [id], onDelete: Cascade)
  
  // Moratorium Period
  moratorium_type       MoratoriumType      @map("moratorium_type")
  moratorium_period Int?             @map("moratorium_period")
  
  // Repayment Schedule
  repayment_frequency   RepaymentFrequency  @map("repayment_frequency")
  repayment_period_maximum Int? @map("repayment_period_maximum")
  repayment_period_minimum Int? @map("repayment_period_minimum")
  
  // Prepayment Terms
  prepayment_allowed    Boolean             @default(true) @map("prepayment_allowed")
  prepayment_charges Decimal?    @db.Decimal(5, 2) @map("prepayment_charges")
  prepayment_lock_in_period Int?            @map("prepayment_lock_in_period")
  
  // Foreclosure Terms
  foreclosure_allowed   Boolean             @default(true) @map("foreclosure_allowed")
  foreclosure_charges   String?             @map("foreclosure_charges")
  
  // Penalty Charges
  late_payment_charges  String?             @map("late_payment_charges")
  bounce_charges        Decimal?            @db.Decimal(10, 2) @map("bounce_charges")
  
  // Repayment Options
  part_payment_allowed PartPaymentAllowed? @map("part_payment_allowed")
  part_payment_minimum Int? @map("part_payment_minimum")
  
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@map("loan_repayment_terms")
}

// Application and processing details
model LoanProductProcessingDetails {
  id                    Int                 @id @default(autoincrement())
  product_id            Int                 @unique @map("product_id")
  product               LoanProduct         @relation(fields: [product_id], references: [id], onDelete: Cascade)
  
  // Application Process
  application_mode      ApplicationMode     @map("application_mode")
  
  // Disbursement
  disbursement_process  DisbursementProcess @map("disbursement_process")
  disbursement_timeline String?             @map("disbursement_timeline")
  partial_disbursement_allowed Boolean      @default(false) @map("partial_disbursement_allowed")
  disbursement_stages   Json?               @map("disbursement_stages") // Array of stages
  
  // Documentation
  documentation_list    String?               @map("documentation_list")
  mandatory_documents String?            @map("mandatory_documents")
  optional_documents   String?             @map("optional_documents")
  
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@map("loan_product_processing_details")
}

// Geographic and course coverage
model LoanProductGeographicCoverage {
  id                    Int                 @id @default(autoincrement())
  product_id            Int                 @unique @map("product_id")
  product               LoanProduct         @relation(fields: [product_id], references: [id], onDelete: Cascade)
  
  // Course Coverage
  course_restrictions   String?             @db.Text @map("course_restrictions")
  not_supported_universities String? @map("not_supported_universities")
  restricted_countries String? @map("restricted_countries")
  course_duration_minimum Int?           @map("course_duration_minimum")
  course_duration_maximum Int?           @map("course_duration_maximum")
  supported_course_types LoanProductCourseTypes? @map("supported_course_types")
  
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@map("loan_geographic_coverage")
}

// Special features and benefits
model LoanProductSpecialFeatures {
  id                    Int                 @id @default(autoincrement())
  product_id            Int                 @unique @map("product_id")
  product               LoanProduct         @relation(fields: [product_id], references: [id], onDelete: Cascade)
  
  // Digital Features
  digital_features      DigitalFeatures?               @map("digital_features")
  customer_support_features CustomerSupportFeatures?           @map("customer_support_features")
  flexible_repayment_options FlexibleRepaymentOptions?          @map("flexible_repayment_options")
  
  // Benefits
  tax_benefits_available          String?             @db.Text @map("tax_benefits_available")
  forex_tax_benefits        String?             @db.Text @map("forex_tax_benefits")
  grace_period_benefits String? @db.Text @map("grace_period_benefits")
  insurance_coverage_included Boolean       @default(false) @map("insurance_coverage_included")
  loyalty_benefits       String?               @map("loyalty_benefits")
    
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@map("loan_special_features")
}

// Performance metrics
model LoanPerformanceMetrics {
  id                    Int                 @id @default(autoincrement())
  product_id            Int                 @unique @map("product_id")
  product               LoanProduct         @relation(fields: [product_id], references: [id], onDelete: Cascade)
  
  // Application Volume
  application_volume_monthly Int?           @map("application_volume_monthly")
  application_volume_quarterly Int?         @map("application_volume_quarterly")
  application_volume_yearly Int?            @map("application_volume_yearly")
  approval_rate         Decimal?            @db.Decimal(5, 2) @map("approval_rate")
  average_loan_amount Decimal?            @db.Decimal(5, 2) @map("average_loan_amount")
  average_processing_days Int? @map("average_processing_days")
  customer_satisfaction_rating Int? @map("customer_satisfaction_rating")
  product_popularity_score Int? @map("product_popularity_score")
  
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@map("loan_performance_metrics")
}

// System integration details
model LoanProductSystemIntegration {
  id                    Int                 @id @default(autoincrement())
  product_id            Int                 @unique @map("product_id")
  product               LoanProduct         @relation(fields: [product_id], references: [id], onDelete: Cascade)
  
  // API Details
  api_availability      ApiAvailability?     @map("api_availability")
  technical_documentation_url String?             @map("technical_documentation_url")
  
  integration_complexity IntegrationComplexity? @map("integration_complexity")
  data_format           DataFormat?             @map("data_format")
  sandbox_environment     SandboxEnvironment? @map("sandbox_environment")
  webhook_support       WebHookSupport?   @map("webhook_support")
  
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@map("loan_system_integration")
}

// Financial terms and conditions
model LoanProductFinancialTerms {
  id                    Int                 @id @default(autoincrement())
  product_id            Int                 @unique @map("product_id")
  product               LoanProduct         @relation(fields: [product_id], references: [id], onDelete: Cascade)
  
  // Interest Rates
  interest_rate_type    InterestRateType    @map("interest_rate_type")
  interest_rate_range_min     Decimal             @db.Decimal(5, 2) @map("interest_rate_range_min")
  interest_rate_range_max     Decimal             @db.Decimal(5, 2) @map("interest_rate_range_max")
  legal_charges Decimal? @db.Decimal(5, 2) @map("legal_charges")
  loan_to_value_ratio Int? @map("loan_to_value_ratio")
  rack_rate             Decimal?            @db.Decimal(10, 2) @map("rack_rate")
  valuation_charges           Decimal?            @db.Decimal(10, 2) @map("valuation_charges")
  
  // Processing Fee
  processing_fee_type   ProcessingFeeType   @map("processing_fee_type")
  processing_fee_percentage Decimal?        @db.Decimal(5, 2) @map("processing_fee_percentage")
  processing_fee_amount Decimal?            @db.Decimal(10, 2) @map("processing_fee_amount")
  processing_fee_minimum    Decimal?            @db.Decimal(10, 2) @map("processing_fee_minimum")
  processing_fee_maximum    Decimal?            @db.Decimal(10, 2) @map("processing_fee_maximum")
  administrative_charges Decimal?           @db.Decimal(10, 2) @map("administrative_charges")
  
  // Margin Money
  margin_money_percentage     Decimal?            @db.Decimal(5, 2) @map("margin_money_percentage")
  maximum_loan_amount_secured Decimal? @db.Decimal(10, 2) @map("maximum_loan_amount_secured")
  maximum_loan_amount_unsecured Decimal? @db.Decimal(10, 2) @map("maximum_loan_amount_unsecured")
  minimum_loan_amount_secured Decimal? @db.Decimal(10, 2) @map("minimum_loan_amount_secured")
  minimum_loan_amount_unsecured Decimal? @db.Decimal(10, 2) @map("minimum_loan_amount_unsecured")
  
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@map("loan_financial_terms")
}

model LoanDocument {
  id                    Int                 @id @default(autoincrement())
  
  // Classification
  document_category     DocumentCategory    @map("document_category")
  document_description  String?             @db.Text @map("document_description")
  document_display_name String              @map("document_display_name")
  document_id           String              @unique @map("document_id")
  document_name         String              @map("document_name")
  document_priority     DocumentPriority    @default(OPTIONAL) @map("document_priority")
  document_stage        DocumentStage       @map("document_stage")
  document_sub_category String? @map("document_sub_category")
  document_type         DocumentType        @map("document_type")  
  
  // System fields
  is_active             Boolean             @default(true) @map("is_active")
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  created_by            String?             @map("created_by")
  updated_by            String?             @map("updated_by")

  // external
  hs_created_by_user_id     Int?       @map("hs_created_by_user_id")     
  hs_createdate             DateTime?  @map("hs_createdate")            
  hs_lastmodifieddate       DateTime?  @map("hs_lastmodifieddate")       
  hs_object_id              String?       @map("hs_object_id")              
  hs_updated_by_user_id     Int?       @map("hs_updated_by_user_id")     
  hubspot_owner_id          String?    @map("hubspot_owner_id") 
  
  // Relations
  alternative_docs      AlternativeDocument?
  applicability_rules   DocumentApplicability?
  compliance_config     DocumentCompliance?
  customer_experience   DocumentCustomerExperience?
  digital_config        DocumentDigitalConfig?
  specifications        DocumentSpecification?
  performance_metrics   DocumentPerformanceMetrics?
  processing_workflow DocumentProcessingWorkflow?
  system_tracking DocumentSystemTracking?
  
  @@index([document_category])
  @@index([document_type])
  @@index([created_at])
  @@map("document_masters")
}

model DocumentSystemTracking {
  id                        String                  @id @default(cuid())
  document_master_id        Int                     @unique @map("document_master_id")
  document_master           LoanDocument            @relation(fields: [document_master_id], references: [id], onDelete: Cascade)
  
  change_history            String?                 @map("change_history") @db.Text
  created_by                String?                 @map("created_by")
  created_date              DateTime?               @map("created_date")
  document_record_status    DocumentRecordStatus?   @map("document_record_status")
  improvement_suggestions   String?                 @map("improvement_suggestions") @db.Text
  last_modified_by          String?                 @map("last_modified_by")
  last_modified_date        DateTime?               @map("last_modified_date")
  next_review_date          DateTime?               @map("next_review_date")
  notes                     String?                 @map("notes") @db.Text
  review_frequency          ReviewFrequency?        @map("review_frequency")
  version_number            String?                 @map("version_number")
  
  created_at                DateTime                @default(now()) @map("created_at")
  updated_at                DateTime                @updatedAt @map("updated_at")
  
  @@map("loan_document_system_tracking")
}

model DocumentProcessingWorkflow {
  id                              String                        @id @default(cuid())
  document_master_id              Int                          @unique @map("document_master_id")
  document_master                 LoanDocument                 @relation(fields: [document_master_id], references: [id], onDelete: Cascade)
  
  auto_extraction_possible        AutoExtractionPossible?      @map("auto_extraction_possible")
  data_points_extractable         String?                      @map("data_points_extractable") @db.Text
  maximum_resubmission_attempts   Int?                         @map("maximum_resubmission_attempts")
  ocr_compatibility               OCRCompatibility?            @map("ocr_compatibility")
  parallel_processing_allowed     ParallelProcessingAllowed?   @map("parallel_processing_allowed")
  rejection_criteria              String?                      @map("rejection_criteria") @db.Text
  resubmission_allowed            ResubmissionAllowed?         @map("resubmission_allowed")
  validation_rules                String?                      @map("validation_rules") @db.Text
  
  created_at                      DateTime                     @default(now()) @map("created_at")
  updated_at                      DateTime                     @updatedAt @map("updated_at")
  
  @@map("document_processing_workflow")
}

model DocumentSpecification {
  id                        Int                    @id @default(autoincrement())
    document_master_id    Int                 @unique @map("document_master_id")
  document_master       LoanDocument      @relation(fields: [document_master_id], references: [id], onDelete: Cascade)

  accepted_formats          AcceptedFormats?
  color_requirements        ColorRequirements?
  combined_document_allowed CombinedDocumentAllowed?
  language_requirements     LanguageRequirements?
  maximum_file_size_mb      Float?
  multiple_pages_allowed    MultiplePagesAllowed?
  quality_standards         QualityStandards?
  resolution_requirements   String?

  createdAt                 DateTime               @default(now())
  updatedAt                 DateTime               @updatedAt
   
    @@map("document_specification")
}
// Document applicability rules
model DocumentApplicability {
  id                    Int                 @id @default(autoincrement())
  document_master_id    Int                 @unique @map("document_master_id")
  document_master       LoanDocument      @relation(fields: [document_master_id], references: [id], onDelete: Cascade)
  
  // Applicability for different parties
  applicable_for_student ApplicabilityStatus @map("applicable_for_student")
  applicable_for_coapplicant1 ApplicabilityStatus @map("applicable_for_coapplicant1")
  applicable_for_coapplicant2 ApplicabilityStatus @map("applicable_for_coapplicant2")
  applicable_for_coapplicant3 ApplicabilityStatus @map("applicable_for_coapplicant3")
  applicable_for_guarantor ApplicabilityStatus @map("applicable_for_guarantor")
  
  // Conditional Rules
  age_criteria          String?             @map("age_criteria") // e.g., "18-65 years"
  collateral_dependency CollateralDependency?

  income_criteria       String?             @map("income_criteria")
  loan_amount_threshold  String?             @map("loan_amount_threshold")
  required_for_countries  RequiredForCountries?               @map("required_for_countries")
  required_for_courses      RequiredForCourses?               @map("required_for_courses")
  required_for_lenders    Json? @map("required_for_lenders")
  required_for_loan_products Json? @map("required_for_loan_products")
  
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@map("document_applicability")
}

// Compliance and legal configuration
model DocumentCompliance {
  id                    Int                 @id @default(autoincrement())
  document_master_id    Int                 @unique @map("document_master_id")
  document_master       LoanDocument      @relation(fields: [document_master_id], references: [id], onDelete: Cascade)
  
  // Data Classification
  data_retention_policy String? @map("data_retention_policy")
  data_sensitivity      DataSensitivity     @map("data_sensitivity")
  gdpr_relevance         GdprRelevance? @map("gdpr_relevance")
  
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@map("document_compliance")
}

// Digital and integration configuration
model DocumentDigitalConfig {
  id                    Int                 @id @default(autoincrement())
  document_master_id    Int                 @unique @map("document_master_id")
  document_master       LoanDocument      @relation(fields: [document_master_id], references: [id], onDelete: Cascade)
  
  // Integration
  api_integration_available DocumentAvailability?    @map("api_integration_available")
  automated_processing          AutomatedProcessing? @map("automated_processing")
  blockchain_verification BlockchainVerification ? @map("blockchain_verification")
  digital_signature_required DigitalSignatureRequired? @map("digital_signature_required")
  e_signature_accepted        ESignatureAccepted?             @map("e_signature_accepted")
  real_time_verification RealTimeVerification? @map("real_time_verification")

  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@map("document_digital_configs")
}

// Alternative documents configuration
model AlternativeDocument {
  id                    Int                 @id @default(autoincrement())
  primary_document_id   Int      @unique           @map("primary_document_id")
  primary_document      LoanDocument      @relation(fields: [primary_document_id], references: [id], onDelete: Cascade)
  
  alternative_documents_accepted String           @map("alternative_documents_accepted")
  equivalent_documents String?     @map("equivalent_documents")
  exemption_criteria String? @map("exemption_criteria")
  special_cases_handling String? @map("special_cases_handling")
  waiver_conditions String? @map("waiver_conditions")
  
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@index([primary_document_id])
  @@map("alternative_documents")
}

// Document performance metrics
model DocumentPerformanceMetrics {
  id                              String          @id @default(cuid())
  document_master_id              Int             @unique @map("document_master_id")
  document_master                 LoanDocument    @relation(fields: [document_master_id], references: [id], onDelete: Cascade)

  acceptance_rate                 Float?          @map("acceptance_rate")
  automation_level                Float?          @map("automation_level")
  average_processing_time_hours   Float?          @map("average_processing_time_hours")
  bottleneck_score                Float?          @map("bottleneck_score")
  customer_satisfaction_score     Float?          @map("customer_satisfaction_score")
  error_rate                      Float?          @map("error_rate")
  rejection_rate                  Float?          @map("rejection_rate")
  resubmission_rate               Float?          @map("resubmission_rate")
  submission_rate                 Float?          @map("submission_rate")
  verification_success_rate       Float?          @map("verification_success_rate")
  
  created_at                      DateTime        @default(now()) @map("created_at")
  updated_at                      DateTime        @updatedAt @map("updated_at")
  
  @@map("document_performance_metrics")
}

// Customer experience configuration
model DocumentCustomerExperience {
  id                    Int                 @id @default(autoincrement())
  document_master_id    Int                 @unique @map("document_master_id")
  document_master       LoanDocument      @relation(fields: [document_master_id], references: [id], onDelete: Cascade)
  
  // Sample Documents
  customer_support_faq          Json?               @map("customer_support_faq") // Array of Q&A
  sample_document_available DocumentAvailability?
  
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@map("document_customer_experience")
}

// Settlement status history
model CommissionSettlementStatus {
  id                    Int                 @id @default(autoincrement())
  settlement_id         Int            @unique     @map("settlement_id")
  settlement            CommissionSettlement @relation(fields: [settlement_id], references: [id], onDelete: Cascade)
  
  calculated_by            String              @map("calculated_by")
  calculation_date DateTime?
  settlement_status SettlementStatus?
  verification_date DateTime?
  verification_status VerificationStatus?
  
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@index([settlement_id])
  @@index([created_at])
  @@map("settlement_status_history")
}

// Main commission settlement table
model CommissionSettlement {
  id                    Int                 @id @default(autoincrement())
  lead_reference_id         String              @unique @map("lead_reference_id")
  settlement_id         String              @unique @map("settlement_id")
  student_id String? @unique @map("student_id")

  // Partner Information
  partner_id            Int                 @map("partner_id")
  partner_name          String              @map("partner_name")
  student_name String? @map("student_name")
  verified_by String? @map("verified_by")
  
  // Settlement Period
  settlement_period     SettlementPeriod    @map("settlement_period")
  settlement_month      SettlementMonth?             @map("settlement_month")
  settlement_year       Int                 @map("settlement_year")
  settlement_reference_number String? @map("settlement_reference_number")

  // System fields
  is_active             Boolean             @default(true) @map("is_active")
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  created_by            String?             @map("created_by")
  updated_by            String?             @map("updated_by")

  // external
  hs_created_by_user_id     Int?       @map("hs_created_by_user_id")     
  hs_createdate             DateTime?  @map("hs_createdate")            
  hs_lastmodifieddate       DateTime?  @map("hs_lastmodifieddate")       
  hs_object_id              String?       @map("hs_object_id")              
  hs_updated_by_user_id     Int?       @map("hs_updated_by_user_id")     
  hubspot_owner_id          String?    @map("hubspot_owner_id")
  
  // Relations
  calculation_details   CommissionSettlementCalculation?
  communication CommissionSettlementCommunication?
  tax_deductions        CommissionSettlementTaxDeduction?
  documentaion CommissionSettlementDocumentation?
  hold_dispute          CommissionSettlementHoldDispute?
  loan_details          CommissionSettlementLoanDetails?
  payment_details       CommissionSettlementPaymentProcessing?
  performance_metrics   CommissionSettlementPerformanceAnalytics?
  reconciliation        CommissionSettlementReconciliation?
  status_history        CommissionSettlementStatus?
  system_tracking CommissionSettlementSystemTracking?
  transaction CommissionSettlementTransactionDetails?

  @@index([partner_id])
  @@index([lead_reference_id])
  @@index([student_id])
  @@index([created_at])

  @@map("commission_settlements")
}

model CommissionSettlementSystemTracking {
  id                       Int                     @id @default(autoincrement())
  settlement_id         Int                 @unique @map("settlement_id")
  settlement_system_tracking            CommissionSettlement @relation(fields: [settlement_id], references: [id], onDelete: Cascade)

  audit_trail              String?                 @map("audit_trail")
  change_log               String?                 @map("change_log")
  created_by               String?                 @map("created_by")
  created_date             DateTime?               @default(now()) @map("created_date")
  data_source              CommissionDataSource?             @map("data_source")
  integration_status       IntegrationStatus?      @map("integration_status")
  internal_notes           String?                 @map("internal_notes")
  last_modified_by         String?                 @map("last_modified_by")
  last_modified_date       DateTime?               @updatedAt @map("last_modified_date")
  notes                    String?                 @map("notes")
  settlement_record_status SettlementRecordStatus? @map("settlement_record_status")
  system_generated         SystemGenerated?        @map("system_generated")
  version_number           String?                 @map("version_number")
  batch_payment_id         String?                 @map("batch_payment_id")
  disbursement_trigger     DisbursementTrigger?    @map("disbursement_trigger")
  original_transaction_id  String?                 @map("original_transaction_id")
  related_settlement_id    String?                 @map("related_settlement_id")
  transaction_sub_type     String?                 @map("transaction_sub_type")
  transaction_type         TransactionTypes?        @map("transaction_type")

  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")

  @@map("commission_settlement_system_tracking")
}

model CommissionSettlementTransactionDetails {
  id                      Int                   @id @default(autoincrement())
  settlement_id         Int                 @unique @map("settlement_id")
  transaction            CommissionSettlement @relation(fields: [settlement_id], references: [id], onDelete: Cascade)

  batch_payment_id        String?               @map("batch_payment_id")
  disbursement_trigger    DisbursementTrigger?  @map("disbursement_trigger")
  original_transaction_id String?               @map("original_transaction_id")
  related_settlement_id   String?               @map("related_settlement_id")
  transaction_sub_type    String?               @map("transaction_sub_type")
  transaction_type        TransactionTypes?      @map("transaction_type")

    created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")

  @@map("commission_settlement_transaction_details")
}

// Commission calculation details
model CommissionSettlementCalculation {
  id                    Int                 @id @default(autoincrement())
  settlement_id         Int                 @unique @map("settlement_id")
  settlement            CommissionSettlement @relation(fields: [settlement_id], references: [id], onDelete: Cascade)
  
  // Commission Model
  commission_model      CommissionModel     @map("commission_model")
  commission_rate_applied       Decimal?            @db.Decimal(5, 2) @map("commission_rate_applied")
  commission_tier_applied String? @map("commission_tier_applied") 
  
  // Calculated Amounts
  gross_commission_amount      Decimal             @db.Decimal(12, 2) @map("gross_commission_amount")
  bonus_amount          Decimal?            @db.Decimal(12, 2) @map("bonus_amount")
  bonus_rate_applied    Decimal?            @db.Decimal(5, 2) @map("bonus_rate_applied")
  incentive_amount      Decimal?            @db.Decimal(12, 2) @map("incentive_amount")
  
  // Adjustments
  adjustment_amount     Decimal?            @db.Decimal(12, 2) @map("adjustment_amount")
  adjustment_reason     String?             @db.Text @map("adjustment_reason")
  
  // Final Amount
  penalty_amount  Decimal             @db.Decimal(12, 2) @map("penalty_amount")
  total_gross_amount      Decimal             @db.Decimal(12, 2) @map("total_gross_amount")
  
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@map("commission_settlement_calculations")
}

model CommissionSettlementCommunication {
  id                         Int                          @id @default(autoincrement())
  settlement_id         Int       @unique          @map("settlement_id")
  settlement            CommissionSettlement @relation(fields: [settlement_id], references: [id], onDelete: Cascade)

  acknowledgment_date        DateTime?                   @map("acknowledgment_date")
  acknowledgment_received    AcknowledgmentStatus?     @map("acknowledgment_received")
  communication_log          String?                     @map("communication_log")
  email_sent_count           Int?                        @map("email_sent_count")
  last_communication_date    DateTime?                   @map("last_communication_date")
  notification_date          DateTime?                   @map("notification_date")
  notification_method        NotificationMethod?         @map("notification_method")
  partner_notification_sent  PartnerNotificationSent?    @map("partner_notification_sent")
  sms_sent_count             Int?                        @map("sms_sent_count")

  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")

  @@map("commission_settlement_communication")
}

// Loan details for commission
model CommissionSettlementLoanDetails {
  id                    Int                 @id @default(autoincrement())
  settlement_id         Int          @unique       @map("settlement_id")
  settlement            CommissionSettlement @relation(fields: [settlement_id], references: [id], onDelete: Cascade)
  
  // Application Details
  course_name           String?             @map("course_name")
  lender_name           String              @map("lender_name")
  loan_amount_disbursed Decimal             @db.Decimal(12, 2) @map("loan_amount_disbursed")
  loan_disbursement_date DateTime           @map("loan_disbursement_date")
  loan_product_name     String              @map("loan_product_name")
  student_destination_country String? @map("student_destination_country")
  university_name String? @map("university_name")

  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@index([settlement_id])
  @@index([loan_disbursement_date])
  @@map("commission_settlement_loan_details")
}

// Payment processing details
model CommissionSettlementPaymentProcessing {
  id                    Int                 @id @default(autoincrement())
  settlement_id         Int                 @unique @map("settlement_id")
  settlement            CommissionSettlement @relation(fields: [settlement_id], references: [id], onDelete: Cascade)
  
  // Beneficiary Details
  beneficiary_name      String              @map("beneficiary_name")
  beneficiary_account_number String          @map("beneficiary_account_number")
  beneficiary_bank_name String              @map("beneficiary_bank_name")
  beneficiary_ifsc_code String              @map("beneficiary_ifsc_code")
  last_retry_date       DateTime?           @map("last_retry_date")
  payment_completed_date DateTime?          @map("payment_completed_date")
  payment_failure_reason          String?             @map("payment_failure_reason")
  payment_initiation_date DateTime?          @map("payment_initiation_date")
  payment_method        PaymentMethod       @map("payment_method")
  payment_reference_number String? @map("payment_reference_number")
  payment_status PaymentStatus? @map("payment_status")
  retry_attempt_count Int? @map("retry_attempt_count")

  // Payment Transaction
  bank_transaction_id   String?             @unique @map("bank_transaction_id")
  payment_gateway_reference String?          @map("payment_gateway_reference")
  
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@map("commission_settlement_payment_processing")
}

// Tax and deduction details
model CommissionSettlementTaxDeduction {
  id                    Int                 @id @default(autoincrement())
  settlement_id         Int                 @unique @map("settlement_id")
  settlement            CommissionSettlement @relation(fields: [settlement_id], references: [id], onDelete: Cascade)
  
  // GST Details
  gst_applicable        Boolean             @default(true) @map("gst_applicable")
  gst_rate_applied              Decimal?            @db.Decimal(5, 2) @map("gst_rate_applied")
  gst_amount            Decimal?            @db.Decimal(12, 2) @map("gst_amount")
  net_payable_amount    Decimal             @db.Decimal(12, 2) @map("net_payable_amount")
  service_tax_amount Int? @map("service_tax_amount")

  // Other Deductions
  other_deductions      Decimal?            @db.Decimal(12, 2) @map("other_deductions")
  other_deductions_description String?            @map("other_deductions_description")
  
  // TDS Details
  tds_applicable        Boolean             @default(true) @map("tds_applicable")
  tds_rate_applied              Decimal?            @db.Decimal(5, 2) @map("tds_rate_applied")
  tds_amount            Decimal?            @db.Decimal(12, 2) @map("tds_amount")
  tds_certificate_number Int? @map("tds_certificate_number")
  
  // Withholding Tax (for international)
  withholding_tax_applicable Boolean        @default(false) @map("withholding_tax_applicable")
  withholding_tax_rate  Decimal?            @db.Decimal(5, 2) @map("withholding_tax_rate")
  withholding_tax_amount Decimal?           @db.Decimal(12, 2) @map("withholding_tax_amount")
  
  // Total Deductions
  total_deductions      Decimal             @db.Decimal(12, 2) @map("total_deductions")
    
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@map("commission_settlement_tax_deductions")
}

// Documentation for commission
model CommissionSettlementDocumentation {
  id                    Int                 @id @default(autoincrement())
  settlement_id         Int                 @unique @map("settlement_id")
  settlement            CommissionSettlement @relation(fields: [settlement_id], references: [id], onDelete: Cascade)
  
  // Agreement Reference
  agreement_reference   String?             @map("agreement_reference")
  
  // Invoice Details
  invoice_required      Boolean             @default(true) @map("invoice_required")
  invoice_number        String?             @unique @map("invoice_number")
  invoice_date          DateTime?           @map("invoice_date")
  invoice_amount        Decimal?            @db.Decimal(12, 2) @map("invoice_amount")
  invoice_status        InvoiceStatus?      @map("invoice_status")
  invoice_url     String?             @map("invoice_url")
  
  payment_terms_applied String? @map("payment_terms_applied")
  supporting_documents String? @map("supporting_documents")
  tax_certificate_required TaxCertificateRequired @map("tax_certificate_required")
  tax_certificate_url String? @map("tax_certificate_url")
  
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@map("commission_settlement_documentation")
}

// Hold and dispute management
model CommissionSettlementHoldDispute {
  id                    Int                 @id @default(autoincrement())
  settlement_id         Int                 @unique @map("settlement_id")
  settlement            CommissionSettlement @relation(fields: [settlement_id], references: [id], onDelete: Cascade)
    
  // Dispute Information
  dispute_date          DateTime?           @map("dispute_date")
  dispute_description   String?             @db.Text @map("dispute_description")
  dispute_raised        Boolean             @default(false) @map("dispute_raised")
  dispute_raised_by     String?             @map("dispute_raised_by")
  dispute_resolution    String?             @db.Text @map("dispute_resolution")
  dispute_resolution_date       DateTime?           @map("dispute_resolution_date")
  dispute_resolved_by String? @map("dispute_resolved_by")
  hold_date             DateTime?           @map("hold_date")
  hold_initiated_by               String?             @map("hold_initiated_by")
  hold_reason           HoldReason?         @map("hold_reason")
  hold_release_approved_by           String?             @map("hold_release_approved_by")
  hold_release_date          DateTime?           @map("hold_release_date")
  on_hold               Boolean             @default(false) @map("on_hold")
  
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@map("commission_settlement_hold_disputes")
}

// Reconciliation details
model CommissionSettlementReconciliation {
  id                    Int                 @id @default(autoincrement())
  settlement_id         Int                 @unique @map("settlement_id")
  settlement            CommissionSettlement @relation(fields: [settlement_id], references: [id], onDelete: Cascade)
  
  // Reconciliation Status
  reconciliation_status ReconciliationStatus @default(PENDING) @map("reconciliation_status")
  reconciliation_date   DateTime?           @map("reconciliation_date")
  reconciled_by         String?             @map("reconciled_by")
  reconciliation_notes String? @map("reconciliation_notes")
  
  // Bank Statement
  bank_statement_reference String?          @map("bank_statement_reference")
    
  // Discrepancy
  discrepancy_amount    Decimal?            @db.Decimal(12, 2) @map("discrepancy_amount")
  discrepancy_reason    String?             @db.Text @map("discrepancy_reason")
    
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@map("commission_settlement_reconciliations")
}

// Performance analytics
model CommissionSettlementPerformanceAnalytics {
  id                    Int                 @id @default(autoincrement())
  settlement_id         Int                 @unique @map("settlement_id")
  settlement            CommissionSettlement @relation(fields: [settlement_id], references: [id], onDelete: Cascade)
  
  // SLA Compliance
  sla_breach            Boolean             @default(false) @map("sla_breach")
  sla_breach_reason     String?             @map("sla_breach_reason")
  
  // Partner Satisfaction
  partner_satisfaction_rating Decimal?      @db.Decimal(3, 2) @map("partner_satisfaction_rating")
  payment_delay_days    Int?                @map("payment_delay_days")
  processing_time_days  Int?                @map("processing_time_days")
  
  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")
  
  @@map("commission_settlement_performance_analytics")
}

// ENUMS

// enum I20CasStatus {
//   YES
//   NO
//   NOT_APPLICABLE    @map("NOT APPLICABLE")
//   PENDING
// }

// enum ApplicationStatusEnum {
//   PRE_APPROVED          @map("Pre-Approved")
//   APPROVED              @map("Approved")
//   SANCTION_LETTER_ISSUED @map("Sanction Letter Issued")
//   DISBURSEMENT_PENDING  @map("Disbursement Pending")
//   DISBURSED             @map("Disbursed")
//   REJECTED              @map("Rejected")
//   ON_HOLD               @map("On Hold")
//   WITHDRAWN             @map("Withdrawn")
//   CANCELLED             @map("Cancelled")
// }

// enum PriorityLevel {
//   HIGH
//   MEDIUM
//   LOW
//   URGENT
// }

// enum RecordStatus {
//   ACTIVE
//   COMPLETED
//   CANCELLED
//   ARCHIVED
// }

// enum LoanProductType {
//   SECURED
//   UNSECURED
//   GOVERNMENT_SCHEME   @map("GOVERNMENT SCHEME")
// }

// enum InterestRateType {
//   FIXED
//   FLOATING
//   HYBRID
//   CHOICE_BASED    @map("CHOICE BASED")
// }

// enum DelayReason {
//   INCOMPLETE_DOCUMENTS    @map("INCOMPLETE DOCUMENTS")
//   CUSTOMER_NOT_RESPONDING   @map("CUSTOMER NOT RESPONDING")
//   LENDER_PROCESSING   @map("LENDER PROCESSING")
//   INTERNAL_REVIEW   @map("INTERNAL REVIEW")
//   COMPLIANCE_CHECK    @map("COMPLIANCE CHECK")
//   OTHER
// }

// enum RejectionReason {
//   // Loan-related
//   INSUFFICIENT_INCOME       @map("INSUFFICIENT INCOME")
//   POOR_CREDIT_SCORE         @map("POOR CREDIT SCORE")
//   INCOMPLETE_DOCUMENTS      @map("INCOMPLETE DOCUMENTS")
//   COURSE_NOT_APPROVED       @map("COURSE NOT APPROVED")
//   UNIVERSITY_NOT_APPROVED   @map("UNIVERSITY NOT APPROVED")
//   HIGH_RISK_PROFILE         @map("HIGH RISK PROFILE")
//   POLICY_CHANGES            @map("POLICY CHANGES")
  
//   // Document-related
//   INVALID_FORMAT            @map("INVALID FORMAT")
//   EXPIRED_DOCUMENT          @map("EXPIRED DOCUMENT")
//   UNCLEAR_IMAGE             @map("UNCLEAR IMAGE")
//   INCOMPLETE_INFORMATION    @map("INCOMPLETE INFORMATION")
//   MISMATCH_DATA             @map("MISMATCH DATA")
//   FRAUDULENT
//   WRONG_DOCUMENT            @map("WRONG DOCUMENT")
//   NOT_CERTIFIED             @map("NOT CERTIFIED")
  
//   OTHER

//   @@map("rejection_reason")
// }

// enum AppealOutcome {
//   PENDING
//   APPROVED
//   REJECTED
//   NOT_APPLICABLE
// }

// enum CommunicationChannel {
//   PHONE
//   EMAIL
//   WHATSAPP
//   SMS
//   VIDEO_CALL    @map("VIDEO CALL")
// }

// enum FollowUpFrequency {
//   DAILY
//   WEEKLY
//   BI_WEEKLY   @map("BI WEEKLY")
//   MONTHLY
//   AS_NEEDED   @map("AS NEEDED")
// }

// enum ApplicationSourceSystem {
//   MANUAL_ENTRY  @map("MANUAL_ENTRY")
//   WEBSITE_FORM    @map("WEBSITE_FORM")
//   PARTNER_PORTAL    @map("PARTNER_PORTAL")
//   IMPORT
//   API
// }

// enum LoanApplicationSystemTrackingEnum {
//   ACTIVE
//   COMPLETED
//   CANCELLED
//   ARCHIVED
// }

// enum IntegrationStatus {
//   SYNCED
//   PENDING_SYNC    @map("PENDING_SYNC")
//   SYNC_FAILED   @map("SYNC_FAILED")
//   NOT_REQUIRED    @map("NOT_REQUIRED")
// }

// enum CommissionBase {
//   LOAN_AMOUNT   @map("LOAN_AMOUNT")
//   FIXED_AMOUNT    @map("FIXED_AMOUNT")
//   TIERED
// }

// enum CommissionStatus {
//   NOT_APPLICABLE    @map("NOT_APPLICABLE")
//   PENDING_CALCULATION   @map("PENDING_CALCULATION")
//   CALCULATED
//   APPROVED_FOR_PAYMENT    @map("APPROVED_FOR_PAYMENT")
//   PAID
//   ON_HOLD   @map("ON_HOLD")
// }

// enum AdmissionStatus {
//   NOT_APPLIED    @map("NOT APPLIED")
//   APPLIED
//   INTERVIEW_SCHEDULED   @map("INTERVIEW SCHEDULED")
//   WAITLISTED
//   ADMITTED
//   REJECTED
  
//   @@map("admission_status")
// }

// enum EducationLevel {
//   HIGH_SCHOOL   @map("HIGH SCHOOL")
//   BACHELOR
//   MASTER
//   PHD
//   DIPLOMA
//   OTHER

//   @@map("education_level")
// }

// enum AcademicTerm {
//   FALL
//   SPRING
//   SUMMER
//   WINTER
  
//   @@map("academic_term")
// }

// enum ApplicationStatuses {
//   LEAD
//   PROSPECT
//   APPLICATION_STARTED     @map("APPLICATION STARTED")
//   APPLICATION_SUBMITTED   @map("APPLICATION SUBMITTED")
//   IN_REVIEW               @map("IN REVIEW")
//   APPROVED
//   REJECTED
//   ENROLLED
//   DEFERRED
//   WITHDRAWN

//   @@map("application_status")
// }

// enum AdmissionStatuses {
//   NOT_APPLIED   @map("NOT APPLIED")
//   APPLIED
//   ADMITTED
//   WAITLISTED
//   REJECTED
//   DEFERRED
// }

// enum VisaStatus {
//   NOT_APPLIED   @map("NOT APPLIED")
//   APPLIED
//   APPROVED
//   REJECTED
//   PENDING
// }

// enum ApplicationSource {
//   DIRECT
//   B2B_PARTNER   @map("B2B PARTNER")
//   WEBSITE
//   REFERRAL
//   ADVERTISEMENT
// }

// enum CourseLevel {
//   BACHELORS
//   MASTERS
//   PHD
//   DIPLOMA
//   CERTIFICATE
//   PROFESSIONAL
// }

// enum LenderCategory {
//   DOMESTIC
//   INTERNATIONAL
//   BOTH
  
//   @@map("lender_category")
// }

// enum LenderType {
//   PUBLIC_BANK   @map("PUBLIC BANK")
//   PRIVATE_BANK    @map("PRIVATE BANK")
//   NBFC
//   CREDIT_UNION           @map("CREDIT UNION")
//   INTERNATIONAL_LENDER   @map("INTERNATIONAL LENDER")
//   FINTECH

//   @@map("lender_type")
// }

// enum LenderStatus {
//   ACTIVE
//   INACTIVE
//   SUSPENDED
//   PENDING_APPROVAL       @map("PENDING APPROVAL")
//   UNDER_REVIEW           @map("UNDER REVIEW")

//   @@map("lender_status")
// }

// enum CoSignerRequirement {
//   ALWAYS_REQUIRED        @map("ALWAYS REQUIRED")
//   SOMETIMES_REQUIRED     @map("SOMETIMES REQUIRED")
//   NOT_REQUIRED           @map("NOT REQUIRED")

//   @@map("co_signer_requirement")
// }

// enum CollateralType {
//   RESIDENTIAL_PROPERTY        @map("RESIDENTIAL PROPERTY")
//   COMMERCIAL_PROPERTY         @map("COMMERCIAL PROPERTY")
//   NON_AGRICULTURAL_LAND       @map("NON AGRICULTURAL LAND")
//   FIXED_DEPOSITS              @map("FIXED DEPOSITS")
//   GOVERNMENT_SECURITIES       @map("GOVERNMENT SECURITIES")
//   LIC_POLICIES                @map("LIC POLICIES")
//   NSC_KVP                     @map("NSC KVP")
//   GOLD
//   SHARES_MUTUAL_FUNDS         @map("SHARES MUTUAL FUNDS")
//   PROPERTY
//   SECURITIES
//   GUARANTOR_ONLY              @map("GUARANTOR ONLY")
//   NO_COLLATERAL               @map("NO COLLATERAL")
//   NA_PLOT                     @map("NA PLOT")

//   @@map("collateral_type")
// }

// enum CourseType {
//   UNDERGRADUATE
//   GRADUATE
//   PHD
//   DIPLOMA
//   CERTIFICATE
//   PROFESSIONAL
//   TECHNICAL
//   FULL_TIME            @map("FULL TIME")
//   PART_TIME            @map("PART TIME")
//   DISTANCE_LEARNING    @map("DISTANCE LEARNING")
//   ONLINE
//   EXECUTIVE
//   REGULAR
//   ACCELERATED

//   @@map("course_type")
// }

// enum APIConnectivityStatus {
//   CONNECTED
//   DISCONNECTED
//   IN_PROGRESS            @map("IN PROGRESS")
//   FAILED
//   NOT_APPLICABLE         @map("NOT APPLICABLE")

//   @@map("api_connectivity_status")
// }

// enum IntegrationLevel {
//   FULL_DIGITAL           @map("FULL DIGITAL")
//   PARTIAL_DIGITAL        @map("PARTIAL DIGITAL")
//   MANUAL
//   HYBRID

//   @@map("integration_level")
// }

// enum DataSource {
//   MANUAL_ENTRY      @map("Manual Entry")
//   API_SYNC          @map("API Sync")
//   IMPORT            @map("Import")
//   THIRD_PARTY       @map("Third Party")
//   SYSTEM_GENERATED  @map("System Generated")
//   API                   @map("API")
//   WEBSITE_FORM          @map("Website Form")
//   PARTNER_INTEGRATION   @map("Partner Integration")

//   @@map("data_source")
// }

// enum PartnershipStatus {
//   ACTIVE      @map("Active")
//   INACTIVE    @map("Inactive")
//   PENDING     @map("Pending")
//   TERMINATED  @map("Terminated")
//   ON_HOLD     @map("On Hold")

//   @@map("partnership_status")
// }

// enum ProductStatus {
//   ACTIVE        @map("Active")
//   INACTIVE      @map("Inactive")
//   DISCONTINUED  @map("Discontinued")
//   COMING_SOON   @map("Coming Soon")
//   UNDER_REVIEW  @map("Under Review")

//   @@map("product_status")
// }

// enum ProductType {
//   SECURED_EDUCATION_LOAN    @map("Secured Education Loan")
//   UNSECURED_EDUCATION_LOAN  @map("Unsecured Education Loan")
//   GOVERNMENT_SCHEME         @map("Government Scheme")
//   SCHOLAR_LOAN              @map("Scholar Loan")
//   EXPRESS_LOAN              @map("Express Loan")
//   PREMIUM_LOAN              @map("Premium Loan")
//   SKILL_DEVELOPMENT_LOAN    @map("Skill Development Loan")

//   @@map("product_type")
// }

// enum ProductCategory {
//   DOMESTIC
//   INTERNATIONAL
//   BOTH
//   VOCATIONAL
//   PROFESSIONAL
  
//   @@map("loan_category")
// }

// enum ApplicationMode {
//   ONLINE
//   OFFLINE
//   HYBRID
//   MOBILE_APP
//   PORTAL
  
//   @@map("application_mode")
// }

// enum DisbursementProcess {
//   DIRECT_TO_UNIVERSITY
//   DIRECT_TO_STUDENT
//   INSTALLMENT_BASED
//   FULL_AMOUNT
//   PARTIAL_DISBURSEMENT
  
//   @@map("disbursement_process")
// }

// enum CollateralRequirement {
//   ALWAYS_REQUIRED
//   ABOVE_THRESHOLD
//   NOT_REQUIRED
//   OPTIONAL
  
//   @@map("collateral_requirement")
// }

// enum ProcessingFeeType {
//   PERCENTAGE
//   FIXED_AMOUNT
//   NIL
//   TIERED
  
//   @@map("processing_fee_type")
// }

// enum RepaymentFrequency {
//   MONTHLY
//   QUARTERLY
//   HALF_YEARLY
//   ANNUALLY
//   FLEXIBLE
//   CUSTOM
  
//   @@map("repayment_frequency")
// }

// enum MoratoriumType {
//   COMPLETE        @map("Complete")
//   INTEREST_ONLY   @map("Interest Only")
//   PARTIAL_EMI     @map("Partial EMI")
//   NO_MORATORIUM   @map("No Moratorium")

//   @@map("moratorium_type")
// }

// enum IntegrationComplexity {
//   SIMPLE
//   MODERATE
//   COMPLEX
//   VERY_COMPLEX
  
//   @@map("integration_complexity")
// }

// enum MarketPositioning {
//   PREMIUM
//   COMPETITIVE
//   BUDGET
//   VALUE_FOR_MONEY
//   NICHE
  
//   @@map("market_positioning")
// }

// enum LoanStatus {
//   NOT_APPLIED           @map("NOT APPLIED")
//   EXPLORING
//   APPLICATION_STARTED   @map("APPLICATION STARTED")
//   DOCUMENTS_PENDING     @map("DOCUMENTS PENDING")
//   UNDER_REVIEW          @map("UNDER REVIEW")
//   APPROVED
//   REJECTED
//   DISBURSED
//   ACTIVE
//   CLOSED

//   @@map("loan_status")
// }

// enum Gender {
//   MALE  @map("Male")
//   FEMALE @map("Female")
//   OTHER @map("Other")
//   PREFER_NOT_TO_SAY     @map("Prefer not to say")

//   @@map("gender")
// }

// enum EmploymentStatus {
//   EMPLOYED
//   UNEMPLOYED
//   SELF_EMPLOYED         @map("SELF EMPLOYED")
//   STUDENT
//   RETIRED

//   @@map("employment_status")
// }

// enum MaritalStatus {
//   SINGLE
//   MARRIED
//   DIVORCED
//   WIDOWED
  
//   @@map("marital_status")
// }

// enum DocumentCategory {
//   STUDENT_DOCUMENTS          @map("STUDENT DOCUMENTS")
//   CO_APPLICANT_1_DOCUMENTS   @map("CO-APPLICANT 1 DOCUMENTS")
//   CO_APPLICANT_2_DOCUMENTS   @map("CO-APPLICANT 2 DOCUMENTS")
//   CO_APPLICANT_3_DOCUMENTS   @map("CO-APPLICANT 3 DOCUMENTS")
//   COLLATERAL_DOCUMENTS       @map("COLLATERAL DOCUMENTS")
//   INSTITUTIONAL_DOCUMENTS    @map("INSTITUTIONAL DOCUMENTS")
//   SUPPORTING_DOCUMENTS       @map("SUPPORTING DOCUMENTS")

//   @@map("document_category")
// }

// enum DocumentType {
//   IDENTITY_PROOF         @map("IDENTITY PROOF")
//   ADDRESS_PROOF          @map("ADDRESS PROOF")
//   INCOME_PROOF           @map("INCOME PROOF")
//   ACADEMIC_DOCUMENTS     @map("ACADEMIC DOCUMENTS")
//   EMPLOYMENT_PROOF       @map("EMPLOYMENT PROOF")
//   PROPERTY_DOCUMENTS     @map("PROPERTY DOCUMENTS")
//   BANK_STATEMENTS        @map("BANK STATEMENTS")
//   TAX_DOCUMENTS          @map("TAX DOCUMENTS")
//   ADMISSION_DOCUMENTS    @map("ADMISSION DOCUMENTS")
//   VISA_DOCUMENTS         @map("VISA DOCUMENTS")
//   FINANCIAL_DOCUMENTS    @map("FINANCIAL DOCUMENTS")
//   GUARANTEE_DOCUMENTS    @map("GUARANTEE DOCUMENTS")
//   OTHER

//   @@map("document_type")
// }

// enum DocumentPriority {
//   MANDATORY
//   CONDITIONAL
//   OPTIONAL
//   NICE_TO_HAVE           @map("NICE TO HAVE")

//   @@map("document_priority")
// }

// enum DocumentStage {
//   APPLICATION
//   INITIAL_REVIEW         @map("INITIAL REVIEW")
//   CREDIT_ASSESSMENT      @map("CREDIT ASSESSMENT")
//   FINAL_APPROVAL         @map("FINAL APPROVAL")
//   DISBURSEMENT
//   POST_DISBURSEMENT      @map("POST DISBURSEMENT")

//   @@map("document_stage")
// }

// enum DocumentFormat {
//   PDF
//   JPG
//   JPEG
//   PNG
//   TIFF
//   DOC
//   DOCX
//   ORIGINAL_HARD_COPY     @map("ORIGINAL HARD COPY")
//   SCANNED_COPY           @map("SCANNED COPY")
//   DIGITAL_COPY           @map("DIGITAL COPY")

//   @@map("document_format")
// }

// enum DocumentStatus {
//   ACTIVE
//   INACTIVE
//   UNDER_REVIEW           @map("UNDER REVIEW")
//   DEPRECATED
//   ARCHIVED

//   @@map("document_status")
// }

// enum VerificationStatus {
//   PENDING                   @map("Pending")
//   IN_PROGRESS               @map("In Progress")
//   VERIFIED                  @map("Verified")
//   REJECTED                  @map("Rejected")
//   EXPIRED                   @map("Expired")
//   NOT_REQUIRED              @map("Not Required")
//   ADDITIONAL_INFO_REQUIRED  @map("Additional Info Required")

//   @@map("verification_status")
// }

// enum VerificationMethod {
//   MANUAL
//   AUTOMATED
//   HYBRID
//   THIRD_PARTY            @map("THIRD PARTY")
//   BLOCKCHAIN
//   DIGILOCKER

//   @@map("verification_method")
// }

// enum DataSensitivity {
//   HIGHLY_SENSITIVE       @map("HIGHLY SENSITIVE")
//   SENSITIVE
//   MODERATE
//   LOW
//   PUBLIC

//   @@map("data_sensitivity")
// }

// enum ApplicabilityStatus {
//   YES
//   NO
//   CONDITIONAL

//   @@map("applicability_status")
// }

// enum AutomationLevel {
//   FULL
//   PARTIAL
//   MANUAL_ONLY            @map("MANUAL ONLY")
//   HYBRID

//   @@map("automation_level")
// }

// enum CommissionModel {
//   PERCENTAGE          @map("PERCENTAGE")
//   FIXED_AMOUNT        @map("FIXED AMOUNT")
//   TIERED              @map("TIERED")
//   HYBRID              @map("HYBRID")
//   PERFORMANCE_BASED   @map("PERFORMANCE BASED")

//   @@map("commission_model")
// }

// enum SettlementStatus {
//   PENDING_CALCULATION  @map("Pending Calculation")
//   CALCULATED           @map("Calculated")
//   PENDING_APPROVAL     @map("Pending Approval")
//   APPROVED             @map("Approved")
//   PAYMENT_INITIATED    @map("Payment Initiated")
//   PAID                 @map("Paid")
//   ON_HOLD              @map("On Hold")
//   REJECTED             @map("Rejected")
//   CANCELLED            @map("Cancelled")
//   DISPUTED             @map("Disputed")

//   @@map("settlement_status")
// }

// enum PaymentStatus {
//   PENDING      @map("Pending")
//   INITIATED    @map("Initiated")
//   IN_PROCESS   @map("In Process")
//   COMPLETED    @map("Completed")
//   FAILED       @map("Failed")
//   CANCELLED    @map("Cancelled")
//   RETURNED     @map("Returned")

//   @@map("payment_status")
// }

// enum PaymentMethod {
//   BANK_TRANSFER       @map("BANK TRANSFER")
//   NEFT                @map("NEFT")
//   RTGS                @map("RTGS")
//   IMPS                @map("IMPS")
//   UPI                 @map("UPI")
//   CHEQUE              @map("CHEQUE")
//   DEMAND_DRAFT        @map("DEMAND DRAFT")
//   DIGITAL_WALLET      @map("DIGITAL WALLET")
//   INTERNATIONAL_WIRE  @map("INTERNATIONAL WIRE")

//   @@map("payment_method")
// }

// enum SettlementPeriod {
//   MONTHLY      @map("MONTHLY")
//   QUARTERLY    @map("QUARTERLY")
//   HALF_YEARLY  @map("HALF YEARLY")
//   YEARLY       @map("YEARLY")
//   AD_HOC       @map("AD HOC")

//   @@map("settlement_period")
// }

// enum DisbursementTrigger {
//   LOAN_DISBURSED        @map("LOAN DISBURSED")
//   APPLICATION_APPROVED  @map("APPLICATION APPROVED")
//   TARGET_ACHIEVED       @map("TARGET ACHIEVED")
//   MANUAL_TRIGGER        @map("MANUAL TRIGGER")
//   SCHEDULED_PAYMENT     @map("SCHEDULED PAYMENT")

//   @@map("disbursement_trigger")
// }

// enum InvoiceStatus {
//   PENDING   @map("PENDING")
//   GENERATED @map("GENERATED")
//   SENT      @map("SENT")
//   RECEIVED  @map("RECEIVED")
//   APPROVED  @map("APPROVED")
//   REJECTED  @map("REJECTED")

//   @@map("invoice_status")
// }

// enum ReconciliationStatus {
//   PENDING            @map("PENDING")
//   RECONCILED         @map("RECONCILED")
//   DISCREPANCY_FOUND  @map("DISCREPANCY FOUND")
//   UNDER_REVIEW       @map("UNDER REVIEW")
//   RESOLVED           @map("RESOLVED")

//   @@map("reconciliation_status")
// }

// enum HoldReason {
//   DOCUMENT_VERIFICATION_PENDING  @map("DOCUMENT VERIFICATION PENDING")
//   INVOICE_ISSUES                 @map("INVOICE ISSUES")
//   PARTNER_AGREEMENT_DISPUTE      @map("PARTNER AGREEMENT DISPUTE")
//   CALCULATION_ERROR              @map("CALCULATION ERROR")
//   COMPLIANCE_ISSUES              @map("COMPLIANCE ISSUES")
//   MANAGEMENT_REVIEW              @map("MANAGEMENT REVIEW")
//   LEGAL_ISSUES                   @map("LEGAL ISSUES")
//   SYSTEM_ERROR                   @map("SYSTEM ERROR")

//   @@map("hold_reason")
// }

// enum NotificationMethod {
//   EMAIL               @map("EMAIL")
//   SMS                 @map("SMS")
//   WHATSAPP            @map("WHATSAPP")
//   PHONE_CALL          @map("PHONE CALL")
//   PORTAL_NOTIFICATION @map("PORTAL NOTIFICATION")

//   @@map("notification_method")
// }

// enum AcknowledgmentStatus {
//   YES
//   NO
//   PENDING
  
//   @@map("acknowledgment_status")
// }

// enum ApiAccessStatus {
//   YES           @map("Yes")
//   NO            @map("No")
//   NOT_REQUIRED  @map("Not Required")
  
//   @@map("api_access_status")
// }

// // Enum for Data Source
// enum B2BDataSource {
//   MANUAL_ENTRY          @map("Manual Entry")
//   IMPORT                @map("Import")
//   PARTNER_APPLICATION   @map("Partner Application")
//   REFERRAL              @map("Referral")
  
//   @@map("b2b_data_source")
// }

// // Enum for Integration Status
// enum B2BIntegrationStatus {
//   NOT_REQUIRED  @map("Not Required")
//   PENDING       @map("Pending")
//   COMPLETE      @map("Complete")
//   ISSUES        @map("Issues")
  
//   @@map("b2b_integration_status")
// }

// enum PartnerRecordStatus {
//   ACTIVE       @map("Active")
//   INACTIVE     @map("Inactive")
//   SUSPENDED    @map("Suspended")
//   UNDER_REVIEW @map("Under Review")
//   ARCHIVED     @map("Archived")

//   @@map("b2b_partner_record_status")
// }

// enum PortalAccessStatus {
//   YES     @map("Yes")
//   NO      @map("No")
//   PENDING @map("Pending")

//   @@map("b2b_portal_access_status")
// }

// enum LoginStatus {
//   success
//   failed
//   logout
// }

// enum LenderCoSignerRequirements {
//   ALWAYS_REQUIRED @map("Always Required")
//   SOMETIMES_REQUIRED @map("Sometimes Required")
//   NOT_REQUIRED @map("Not Required")
// }

// enum LenderCollateralType {
//   PROPERTY
//   FIXED_DEPOSITS  @map("Fixed Deposits")
//   LIC_POLICIES    @map("LIC Policies")
//   SECURITIES
//   GUARANTOR_ONLY  @map("Guarantor Only")
//   NO_COLLATERAL   @map("No Collateral")
//   NA_PLOT         @map("NA Plot")
// }

// enum SupportedCourseTypes {
//   UNDERGRADUATE @map("Undergraduate")
//   GRADUATE      @map("Graduate")
//   PHD           @map("PhD")
//   DIPLOMA       @map("Diploma")
//   CERTIFICATE   @map("Certificate")
//   PROFESSIONAL  @map("Professional")
//   TECHNICAL     @map("Technical")
// }

// enum SupportedDestinations {
//   US        @map("US")
//   UK        @map("UK")
//   CANADA    @map("Canada")
//   AUSTRALIA @map("Australia")
//   GERMANY   @map("Germany")
//   FRANCE    @map("France")
//   SINGAPORE @map("Singapore")
//   ITALY     @map("Italy")
//   UAE       @map("UAE")
//   OTHER     @map("Other")
// }

// enum HolidayProcessing {
//   YES     @map("Yes")
//   NO      @map("No")
//   LIMITED @map("Limited")
// }

// enum RepaymentOptions {
//   EMI             @map("EMI")
//   SIMPLE_INT      @map("Simple Int")
//   PARTIAL_INT     @map("Partial Int")
//   COMPLETE_MORAT  @map("Complete Morat")

//   @@map("repayment_options")
// }

// enum PayoutTerms {
//   NET_30  @map("Net 30")
//   NET_45  @map("Net 45")
//   NET_60  @map("Net 60")
//   CUSTOM  @map("Custom")

//   @@map("payout_terms")
// }

// enum PerformanceRating {
//   EXCELLENT @map("Excellent")
//   GOOD      @map("Good")
//   AVERAGE   @map("Average")
//   POOR      @map("Poor")

//   @@map("performance_rating")
// }

// enum LenderRecordStatus {
//   ACTIVE       @map("Active")
//   INACTIVE     @map("Inactive")
//   UNDER_REVIEW @map("Under Review")
//   SUSPENDED    @map("Suspended")

//   @@map("lender_record_status")
// }

// enum LenderDataSource {
//   MANUAL_ENTRY     @map("Manual Entry")
//   IMPORT           @map("Import")
//   API_INTEGRATION  @map("API Integration")

//   @@map("lender_data_source")
// }

// enum GurantorRequired {
//   ALWAYS           @map("Always")
//   ABOVE_THRESHOLD  @map("Above Threshold")
//   NOT_REQUIRED     @map("Not Required")
//   OPTIONAL         @map("Optional")

//   @@map("guarantor_required")
// }

// enum InsuranceRequired {
//   LIFE_INSURANCE      @map("Life Insurance")
//   PROPERTY_INSURANCE  @map("Property Insurance")
//   BOTH                @map("Both")
//   NOT_REQUIRED        @map("Not Required")

//   @@map("insurance_required")
// }

// enum ThirdPartyGuaranteeRequired {
//   YES            @map("Yes")
//   NO             @map("No")
//   CASE_BY_CASE   @map("Case by Case")

//   @@map("third_party_guarantee_required")
// }

// enum LoanProductMarketPositioning {
//   PREMIUM       @map("Premium")
//   MID_MARKET    @map("Mid-Market")
//   BUDGET        @map("Budget")
//   NICHE         @map("Niche")
//   MASS_MARKET   @map("Mass Market")

//   @@map("loan_product_market_segment")
// }

// enum PricingStrategy {
//   COMPETITIVE    @map("Competitive")
//   PREMIUM        @map("Premium")
//   PENETRATION    @map("Penetration")
//   VALUE_BASED    @map("Value Based")

//   @@map("pricing_strategy")
// }

// enum NationalityRestrictions {
//   INDIAN        @map("Indian")
//   OTHERS        @map("Others")

//   @@map("nationality_restrictions")
// }

// enum ResidencyRequirements {
//   RESIDENT       @map("Resident")
//   NON_RESIDENT   @map("Non-Resident")

//   @@map("residency_requirements")
// }

// enum TargetSegment {
//   UNDERGRADUATE   @map("Undergraduate")
//   GRADUATE        @map("Graduate")
//   PHD             @map("PhD")
//   DIPLOMA         @map("Diploma")
//   CERTIFICATE     @map("Certificate")
//   PROFESSIONAL    @map("Professional")
//   TECHNICAL       @map("Technical")
//   MEDICAL         @map("Medical")
//   MANAGEMENT      @map("Management")

//   @@map("target_segment")
// }

// enum LoanProductCourseTypes {
//   FULL_TIME          @map("Full Time")
//   PART_TIME          @map("Part Time")
//   DISTANCE_LEARNING  @map("Distance Learning")
//   ONLINE             @map("Online")
//   EXECUTIVE          @map("Executive")
//   REGULAR            @map("Regular")
//   ACCELERATED        @map("Accelerated")

//   @@map("loan_product_course_types")
// }

// enum PartPaymentAllowed {
//   YES             @map("Yes")
//   NO              @map("No")
//   MINIMUM_AMOUNT  @map("Minimum Amount")

//   @@map("part_payment_allowed")
// }

// enum CustomerSupportFeatures {
//   TWENTY_FOUR_SEVEN_SUPPORT  @map("24x7 Support")
//   DEDICATED_RM               @map("Dedicated RM")
//   ONLINE_CHAT                @map("Online Chat")
//   VIDEO_KYC                  @map("Video KYC")
//   DOOR_STEP_SERVICE          @map("Door Step Service")

//   @@map("customer_support_features")
// }

// enum DigitalFeatures {
//   ONLINE_APPLICATION     @map("Online Application")
//   DIGITAL_DOCUMENTATION  @map("Digital Documentation")
//   E_STATEMENTS           @map("E-Statements")
//   MOBILE_APP             @map("Mobile App")
//   SMS_ALERTS             @map("SMS Alerts")
//   EMAIL_NOTIFICATIONS    @map("Email Notifications")

//   @@map("digital_features")
// }

// enum FlexibleRepaymentOptions {
//   STEP_UP_EMI       @map("Step Up EMI")
//   STEP_DOWN_EMI     @map("Step Down EMI")
//   BULLET_PAYMENT    @map("Bullet Payment")
//   FLEXIBLE_EMI      @map("Flexible EMI")
//   HOLIDAY_OPTIONS   @map("Holiday Options")

//   @@map("flexible_repayment_options")
// }

// enum SandboxEnvironment {
//   AVAILABLE      @map("Available")
//   NOT_AVAILABLE  @map("Not Available")
//   ON_REQUEST     @map("On Request")

//   @@map("sandbox_environment")
// }

// enum DataFormat {
//   JSON    @map("JSON")
//   XML     @map("XML")
//   CSV     @map("CSV")
//   API     @map("API")
//   MANUAL  @map("Manual")

//   @@map("data_format")
// }

// enum ApiAvailability {
//   YES               @map("Yes")
//   NO                @map("No")
//   UNDER_DEVELOPMENT @map("Under Development")
//   PLANNED           @map("Planned")

//   @@map("api_availability")
// }

// enum WebHookSupport {
//   YES      @map("Yes")
//   NO       @map("No")
//   LIMITED  @map("Limited")

//   @@map("webhook_support")
// }

// enum ProductRecordStatus {
//   ACTIVE        @map("Active")
//   INACTIVE      @map("Inactive")
//   UNDER_REVIEW  @map("Under Review")
//   DISCONTINUED  @map("Discontinued")

//   @@map("product_record_status")
// }

// enum ReviewFrequency {
//   MONTHLY       @map("Monthly")
//   QUARTERLY     @map("Quarterly")
//   HALF_YEARLY   @map("Half-yearly")
//   YEARLY        @map("Yearly")

//   @@map("review_frequency")
// }

// enum SettlementMonth {
//   JANUARY     @map("January")
//   FEBRUARY    @map("February")
//   MARCH       @map("March")
//   APRIL       @map("April")
//   MAY         @map("May")
//   JUNE        @map("June")
//   JULY        @map("July")
//   AUGUST      @map("August")
//   SEPTEMBER   @map("September")
//   OCTOBER     @map("October")
//   NOVEMBER    @map("November")
//   DECEMBER    @map("December")

//   @@map("settlement_month")
// }

// enum TaxCertificateRequired {
//   YES             @map("Yes")
//   NO              @map("No")
//   AUTO_GENERATED  @map("Auto Generated")

//   @@map("tax_certificate_required")
// }

// enum CommissionDataSource {
//   MANUAL_ENTRY           @map("Manual Entry")
//   AUTOMATED_CALCULATION  @map("Automated Calculation")
//   IMPORT                 @map("Import")
//   API                    @map("API")
//   BULK_UPLOAD            @map("Bulk Upload")

//   @@map("commission_data_source")
// }

// enum CommissionIntegrationStatus {
//   SYNCED         @map("Synced")
//   PENDING_SYNC   @map("Pending Sync")
//   SYNC_FAILED    @map("Sync Failed")
//   NOT_REQUIRED   @map("Not Required")

//   @@map("integration_status")
// }

// enum SettlementRecordStatus {
//   ACTIVE              @map("Active")
//   COMPLETED           @map("Completed")
//   CANCELLED           @map("Cancelled")
//   ARCHIVED            @map("Archived")
//   UNDER_INVESTIGATION @map("Under Investigation")

//   @@map("settlement_record_status")
// }

// enum SystemGenerated {
//   YES        @map("Yes")
//   NO         @map("No")
//   PARTIALLY  @map("Partially")

//   @@map("system_generated")
// }

// enum CommissionDisbursementTrigger {
//   LOAN_DISBURSED        @map("Loan Disbursed")
//   APPLICATION_APPROVED  @map("Application Approved")
//   TARGET_ACHIEVED       @map("Target Achieved")
//   MANUAL_TRIGGER        @map("Manual Trigger")
//   SCHEDULED_PAYMENT     @map("Scheduled Payment")

//   @@map("commission_disbursement_trigger")
// }

// enum CommissionTransactionType {
//   COMMISSION_PAYMENT  @map("Commission Payment")
//   BONUS_PAYMENT       @map("Bonus Payment")
//   ADJUSTMENT          @map("Adjustment")
//   REVERSAL            @map("Reversal")
//   PENALTY_DEDUCTION   @map("Penalty Deduction")
//   ADVANCE_PAYMENT     @map("Advance Payment")
//   FINAL_SETTLEMENT    @map("Final Settlement")

//   @@map("commission_transaction_type")
// }

// enum AcknowledgmentReceived {
//   YES      @map("Yes")
//   NO       @map("No")
//   PENDING  @map("Pending")

//   @@map("acknowledgment_received")
// }

// enum CommissionNotificationMethod {
//   EMAIL               @map("Email")
//   SMS                 @map("SMS")
//   WHATSAPP            @map("WhatsApp")
//   PHONE_CALL          @map("Phone Call")
//   PORTAL_NOTIFICATION @map("Portal Notification")

//   @@map("commission_notification_method")
// }

// enum PartnerNotificationSent {
//   YES      @map("Yes")
//   NO       @map("No")
//   PENDING  @map("Pending")
//   FAILED   @map("Failed")

//   @@map("partner_notification_sent")
// }

// enum TransactionDisbursementTrigger {
//   LOAN_DISBURSED         @map("Loan Disbursed")
//   APPLICATION_APPROVED   @map("Application Approved")
//   TARGET_ACHIEVED        @map("Target Achieved")
//   MANUAL_TRIGGER         @map("Manual Trigger")
//   SCHEDULED_PAYMENT      @map("Scheduled Payment")

//   @@map("transaction_disbursement_trigger")
// }

// enum TransactionTypes {
//   COMMISSION_PAYMENT   @map("Commission Payment")
//   BONUS_PAYMENT        @map("Bonus Payment")
//   ADJUSTMENT           @map("Adjustment")
//   REVERSAL             @map("Reversal")
//   PENALTY_DEDUCTION    @map("Penalty Deduction")
//   ADVANCE_PAYMENT      @map("Advance Payment")
//   FINAL_SETTLEMENT     @map("Final Settlement")

//   @@map("transaction_types")
// }

// enum CollateralDependency {
//   YES             @map("Yes")
//   NO              @map("No")
//   NOT_APPLICABLE  @map("Not Applicable")

//   @@map("collateral_dependency")
// }

// enum RequiredForCountries {
//   US        @map("US")
//   UK        @map("UK")
//   CANADA    @map("Canada")
//   AUSTRALIA @map("Australia")
//   GERMANY   @map("Germany")
//   FRANCE    @map("France")
//   OTHER     @map("Other")

//   @@map("required_for_countries")
// }

// enum RequiredForCourses {
//   ENGINEERING  @map("Engineering")
//   MBA          @map("MBA")
//   MS           @map("MS")
//   MEDICINE     @map("Medicine")
//   LAW          @map("Law")
//   ARTS         @map("Arts")
//   SCIENCE      @map("Science")
//   OTHER        @map("Other")

//   @@map("required_for_courses")
// }

// enum GdprRelevance {
//   YES             @map("Yes")
//   NO              @map("No")
//   PARTIAL         @map("Partial")
//   NOT_APPLICABLE  @map("Not Applicable")

//   @@map("gdpr_relevance")
// }

// enum DocumentAvailability {
//   YES           @map("Yes")
//   NO            @map("No")
//   PLANNED       @map("Planned")
//   NOT_REQUIRED  @map("Not Required")

//   @@map("document_availability")
// }

// enum AutomatedProcessing {
//   FULL         @map("Full")
//   PARTIAL      @map("Partial")
//   MANUAL_ONLY  @map("Manual Only")
//   HYBRID       @map("Hybrid")

//   @@map("automated_processing")
// }

// enum BlockchainVerification {
//   YES             @map("Yes")
//   NO              @map("No")
//   NOT_APPLICABLE  @map("Not Applicable")
//   FUTURE          @map("Future")

//   @@map("blockchain_verification")
// }

// enum DigitalSignatureRequired {
//   YES        @map("Yes")
//   NO         @map("No")
//   OPTIONAL   @map("Optional")
//   PREFERRED  @map("Preferred")

//   @@map("digital_signature_required")
// }

// enum ESignatureAccepted {
//   YES          @map("Yes")
//   NO           @map("No")
//   CASE_BY_CASE @map("Case by Case")

//   @@map("e_signature_accepted")
// }

// enum RealTimeVerification {
//   YES             @map("Yes")
//   NO              @map("No")
//   PLANNED         @map("Planned")
//   NOT_APPLICABLE  @map("Not Applicable")

//   @@map("real_time_verification")
// }

// enum AcceptedFormats {
//   PDF                   @map("PDF")
//   JPG                   @map("JPG")
//   JPEG                  @map("JPEG")
//   PNG                   @map("PNG")
//   TIFF                  @map("TIFF")
//   DOC                   @map("DOC")
//   DOCX                  @map("DOCX")
//   ORIGINAL_HARD_COPY    @map("Original Hard Copy")
//   SCANNED_COPY          @map("Scanned Copy")
//   DIGITAL_COPY          @map("Digital Copy")
  
//   @@map("accepted_formats")
// }

// enum ColorRequirements {
//   COLOR_ONLY            @map("Color Only")
//   BLACK_WHITE_ONLY      @map("Black White Only")
//   BOTH_ACCEPTABLE       @map("Both Acceptable")
//   COLOR_PREFERRED       @map("Color Preferred")
  
//   @@map("color_requirements")
// }

// enum CombinedDocumentAllowed {
//   YES                   @map("Yes")
//   NO                    @map("No")
//   SINGLE_PAGE_ONLY      @map("Single Page Only")
  
//   @@map("combined_document_allowed")
// }

// enum LanguageRequirements {
//   ENGLISH                           @map("English")
//   HINDI                             @map("Hindi")
//   REGIONAL_WITH_TRANSLATION         @map("Regional with Translation")
//   NOTARIZED_TRANSLATION_REQUIRED    @map("Notarized Translation Required")
  
//   @@map("language_requirements")
// }

// enum MultiplePagesAllowed {
//   YES                   @map("Yes")
//   NO                    @map("No")
//   SINGLE_PAGE_ONLY      @map("Single Page Only")
  
//   @@map("multiple_pages_allowed")
// }

// enum QualityStandards {
//   CLEAR_LEGIBLE         @map("Clear Legible")
//   ALL_CORNERS_VISIBLE   @map("All Corners Visible")
//   NO_SHADOWS            @map("No Shadows")
//   ORIGINAL_COLORS       @map("Original Colors")
//   STAMPED_SIGNED        @map("Stamped Signed")
//   NOTARIZED             @map("Notarized")
//   APOSTILLED            @map("Apostilled")
  
//   @@map("quality_standards")
// }

// enum AutoExtractionPossible {
//   YES       @map("Yes")
//   NO        @map("No")
//   PARTIAL   @map("Partial")
  
//   @@map("auto_extraction_possible")
// }

// enum OCRCompatibility {
//   HIGH            @map("High")
//   MEDIUM          @map("Medium")
//   LOW             @map("Low")
//   NOT_COMPATIBLE  @map("Not Compatible")
  
//   @@map("ocr_compatibility")
// }

// enum ParallelProcessingAllowed {
//   YES       @map("Yes")
//   NO        @map("No")
//   PREFERRED @map("Preferred")
  
//   @@map("parallel_processing_allowed")
// }

// enum ResubmissionAllowed {
//   YES               @map("Yes")
//   NO                @map("No")
//   LIMITED_ATTEMPTS  @map("Limited Attempts")
  
//   @@map("resubmission_allowed")
// }

// enum DocumentRecordStatus {
//   ACTIVE        @map("Active")
//   INACTIVE      @map("Inactive")
//   UNDER_REVIEW  @map("Under Review")
//   DEPRECATED    @map("Deprecated")
  
//   @@map("document_record_status")
// }

// enum DocumentReviewFrequency {
//   MONTHLY       @map("Monthly")
//   QUARTERLY     @map("Quarterly")
//   HALF_YEARLY   @map("Half-yearly")
//   YEARLY        @map("Yearly")
//   AS_NEEDED     @map("As Needed")
  
//   @@map("document_review_frequency")
// }

// enum EdumateContactAdmissionStatus {
//   NOT_APPLIED           @map("Not Applied")
//   APPLIED               @map("Applied")
//   INTERVIEW_SCHEDULED   @map("Interview Scheduled")
//   WAITLISTED            @map("Waitlisted")
//   ADMITTED              @map("Admitted")
//   REJECTED              @map("Rejected")
  
//   @@map("edumate_contact_admission_status")
// }

// enum CurrentEducationLevel {
//   HIGH_SCHOOL   @map("High School")
//   BACHELORS      @map("Bachelors")
//   MASTERS        @map("Masters")
//   PHD           @map("PhD")
//   DIPLOMA       @map("Diploma")
//   OTHER         @map("Other")
  
//   @@map("current_education_level")
// }

// enum IntendedStartTerm {
//   FALL      @map("Fall")
//   SPRING    @map("Spring")
//   SUMMER    @map("Summer")
//   WINTER    @map("Winter")
  
//   @@map("intended_start_term")
// }

// enum PreferredStudyDestination {
//   US            @map("US")
//   UK            @map("UK")
//   CANADA        @map("Canada")
//   AUSTRALIA     @map("Australia")
//   GERMANY       @map("Germany")
//   FRANCE        @map("France")
//   SINGAPORE     @map("Singapore")
//   ITALY         @map("Italy")
//   UAE           @map("UAE")
//   JAPAN         @map("Japan")
//   CHINA         @map("China")
//   INDIA         @map("India")
//   NEW_ZEALAND   @map("New Zealand")
//   OTHER         @map("Other")
  
//   @@map("preferred_study_destination")
// }

// enum TargetDegreeLevel {
//   BACHELORS             @map("Bachelors")
//   MASTERS               @map("Masters")
//   PHD                   @map("PhD")
//   DIPLOMA               @map("Diploma")
//   CERTIFICATE           @map("Certificate")
//   PROFESSIONAL_COURSE   @map("Professional Course")
  
//   @@map("target_degree_level")
// }

// enum CurrentStatusDisposition {
//   NOT_INTERESTED                @map("Not Interested")
//   WRONG_NUMBER                  @map("Wrong Number")
//   CALL_NOT_ANSWERED            @map("Call not Answered")
//   FOLLOW_UP                    @map("Follow Up")
//   INT_FOR_NEXT_YEAR           @map("Int for Next Year")
//   PARTIAL_DOCUMENTS_RECEIVED   @map("Partial Documents Received")
  
//   @@map("current_status_disposition")
// }

// enum StatusDispositionReason {
//   ALREADY_APPLIED       @map("Already Applied")
//   NOT_LOOKING_AT_LOAN  @map("Not Looking at Loan")
//   SELF_FUNDING         @map("Self Funding")
//   OTHERS               @map("Others")
  
//   @@map("status_disposition_reason")
// }

// enum EdumateContactCourseType {
//   STEM      @map("Stem")
//   BUSINESS  @map("Business")
//   OTHERS    @map("Others")
  
//   @@map("edumate_contact_course_type")
// }

// enum CoApplicantOccupation {
//   SALARIED        @map("Salaried")
//   SELF_EMPLOYED   @map("Self Employed")
//   RETIRED         @map("Retired")
//   OTHERS          @map("Others")
  
//   @@map("co_applicant_occupation")
// }

// enum CoApplicantRelationship {
//   FATHER          @map("Father")
//   MOTHER          @map("Mother")
//   SPOUSE          @map("Spouse")
//   SIBLING         @map("Sibling")
//   UNCLE           @map("Uncle")
//   AUNT            @map("Aunt")
//   GRAND_FATHER    @map("Grand Father")
//   GRAND_MOTHER    @map("Grand Mother")
//   OTHERS          @map("Others")
  
//   @@map("co_applicant_relationship")
// }

// enum CollateralAvailable {
//   YES   @map("Yes")
//   NO    @map("No")
  
//   @@map("collateral_available")
// }

// enum EdumateContactCollateralType {
//   PROPERTY    @map("Property")
//   FD          @map("FD")
//   NA_PLOT     @map("NA Plot")
//   OTHER       @map("Other")
  
//   @@map("edumate_contact_collateral_type")
// }

// enum FinancialCurrency {
//   INR     @map("INR")
//   USD     @map("USD")
//   EUR     @map("EUR")
//   GBP     @map("GBP")
//   CAD     @map("CAD")
//   AUD     @map("AUD")
//   OTHER   @map("Other")
  
//   @@map("financial_currency")
// }

// enum LeadSource {
//   ORGANIC_SEARCH    @map("Organic Search")
//   SOCIAL_MEDIA      @map("Social Media")
//   B2B_PARTNER       @map("B2B Partner")
//   REFERRAL          @map("Referral")
//   ADVERTISEMENT     @map("Advertisement")
//   WEBSITE           @map("Website")
//   WALK_IN           @map("Walk-in")
//   OTHER             @map("Other")
  
//   @@map("lead_source")
// }

// enum PartnerCommissionApplicable {
//   YES   @map("Yes")
//   NO    @map("No")
  
//   @@map("partner_commission_applicable")
// }

// enum LoanTypePreference {
//   SECURED             @map("Secured")
//   UNSECURED           @map("Unsecured")
//   GOVERNMENT_SCHEME   @map("Government Scheme")
//   NO_PREFERENCE       @map("No Preference")
  
//   @@map("loan_type_preference")
// }

// enum PreferredLenders {
//   AXIS    @map("Axis")
//   // Add more lenders as needed
  
//   @@map("preferred_lenders")
// }

// enum RepaymentTypePreference {
//   EMI              @map("EMI")
//   SIMPLE_INT       @map("Simple Int")
//   PARTIAL_INT      @map("Partial Int")
//   COMPLETE_MORAT   @map("Complete Morat")
  
//   @@map("repayment_type_preference")
// }

// enum Nationality {
//   AFGHANISTAN           @map("Afghanistan")
//   ALBANIA              @map("Albania")
//   ANTARCTICA           @map("Antarctica")
//   ALAND_ISLANDS        @map("Åland Islands")
//   ALGERIA              @map("Algeria")
//   AMERICAN_SAMOA       @map("American Samoa")
//   ANDORRA              @map("Andorra")
//   ANGOLA               @map("Angola")
//   ANGUILLA             @map("Anguilla")
//   ANTIGUA_AND_BARBUDA  @map("Antigua and Barbuda")
//   ARUBA                @map("Aruba")
//   ASIA_PACIFIC_REGION  @map("Asia/Pacific Region")
//   AZERBAIJAN           @map("Azerbaijan")
//   ARGENTINA            @map("Argentina")
//   ARMENIA              @map("Armenia")
//   AUSTRALIA            @map("Australia")
//   AUSTRIA              @map("Austria")
//   BAHAMAS              @map("Bahamas")
//   BAHRAIN              @map("Bahrain")
//   BANGLADESH           @map("Bangladesh")
//   BARBADOS             @map("Barbados")
//   BELGIUM              @map("Belgium")
//   BHUTAN               @map("Bhutan")
//   BOLIVIA              @map("Bolivia")
//   BOSNIA_AND_HERZEGOVINA @map("Bosnia and Herzegovina")
//   BOTSWANA             @map("Botswana")
//   BOUVET_ISLAND        @map("Bouvet Island")
//   BRAZIL               @map("Brazil")
//   CARIBBEAN_NETHERLANDS @map("Caribbean Netherlands")
//   BELIZE               @map("Belize")
//   SOLOMON_ISLANDS      @map("Solomon Islands")
//   BRUNEI               @map("Brunei")
//   BULGARIA             @map("Bulgaria")
//   BURUNDI              @map("Burundi")
//   BELARUS              @map("Belarus")
//   BERMUDA              @map("Bermuda")
//   CAMBODIA             @map("Cambodia")
//   CAYMAN_ISLANDS       @map("Cayman Islands")
//   CAMEROON             @map("Cameroon")
//   CANADA               @map("Canada")
//   CAPE_VERDE           @map("Cape Verde")
//   CENTRAL_AFRICAN_REPUBLIC @map("Central African Republic")
//   CUBA                 @map("Cuba")
//   CURACAO              @map("Curaçao")
//   SRI_LANKA            @map("Sri Lanka")
//   CHAD                 @map("Chad")
//   CHILE                @map("Chile")
//   CHINA                @map("China")
//   CHRISTMAS_ISLAND     @map("Christmas Island")
//   COCOS_KEELING_ISLANDS @map("Cocos (Keeling) Islands")
//   COLOMBIA             @map("Colombia")
//   COMOROS              @map("Comoros")
//   CONGO                @map("Congo")
//   DEMOCRATIC_REPUBLIC_OF_THE_CONGO @map("Democratic Republic of the Congo")
//   COOK_ISLANDS         @map("Cook Islands")
//   COSTA_RICA           @map("Costa Rica")
//   CROATIA              @map("Croatia")
//   CYPRUS               @map("Cyprus")
//   CZECH_REPUBLIC       @map("Czech Republic")
//   BENIN                @map("Benin")
//   DENMARK              @map("Denmark")
//   DOMINICA             @map("Dominica")
//   DOMINICAN_REPUBLIC   @map("Dominican Republic")
//   ECUADOR              @map("Ecuador")
//   EL_SALVADOR          @map("El Salvador")
//   EQUATORIAL_GUINEA    @map("Equatorial Guinea")
//   ETHIOPIA             @map("Ethiopia")
//   ERITREA              @map("Eritrea")
//   ESTONIA              @map("Estonia")
//   EUROPE               @map("Europe")
//   SOUTH_GEORGIA_AND_SOUTH_SANDWICH_ISLANDS @map("South Georgia and the South Sandwich Islands")
//   FIJI                 @map("Fiji")
//   FINLAND              @map("Finland")
//   FRANCE               @map("France")
//   FALKLAND_ISLANDS     @map("Falkland Islands")
//   FAROE_ISLANDS        @map("Faroe Islands")
//   FRENCH_POLYNESIA     @map("French Polynesia")
//   FRENCH_SOUTHERN_AND_ANTARCTIC_LANDS @map("French Southern and Antarctic Lands")
//   DJIBOUTI             @map("Djibouti")
//   GABON                @map("Gabon")
//   GEORGIA              @map("Georgia")
//   GAMBIA               @map("Gambia")
//   GERMANY              @map("Germany")
//   GHANA                @map("Ghana")
//   GREENLAND            @map("Greenland")
//   GUADELOUPE           @map("Guadeloupe")
//   GUERNSEY             @map("Guernsey")
//   KIRIBATI             @map("Kiribati")
//   GREECE               @map("Greece")
//   GRENADA              @map("Grenada")
//   GUAM                 @map("Guam")
//   GUATEMALA            @map("Guatemala")
//   GUINEA               @map("Guinea")
//   GUYANA               @map("Guyana")
//   FRENCH_GUIANA        @map("French Guiana")
//   GIBRALTAR            @map("Gibraltar")
//   HAITI                @map("Haiti")
//   HEARD_ISLAND_AND_MCDONALD_ISLANDS @map("Heard Island and McDonald Islands")
//   VATICAN_CITY         @map("Vatican City")
//   HONDURAS             @map("Honduras")
//   HUNGARY              @map("Hungary")
//   HONG_KONG            @map("Hong Kong")
//   ISLE_OF_MAN          @map("Isle of Man")
//   IRAN                 @map("Iran")
//   JERSEY               @map("Jersey")
//   MACAU                @map("Macau")
//   MARTINIQUE           @map("Martinique")
//   MONTSERRAT           @map("Montserrat")
//   MYANMAR_BURMA        @map("Myanmar (Burma)")
//   NORTH_KOREA          @map("North Korea")
//   PALESTINE            @map("Palestine")
//   PUERTO_RICO          @map("Puerto Rico")
//   REUNION              @map("Réunion")
//   SAINT_BARTHELEMY     @map("Saint Barthélemy")
//   SAINT_MARTIN         @map("Saint Martin")
//   SINT_MAARTEN         @map("Sint Maarten")
//   SOUTH_SUDAN          @map("South Sudan")
//   SUDAN                @map("Sudan")
//   SYRIA                @map("Syria")
//   TAIWAN               @map("Taiwan")
//   TURKS_AND_CAICOS_ISLANDS @map("Turks and Caicos Islands")
//   US_VIRGIN_ISLANDS    @map("U.S. Virgin Islands")
//   ICELAND              @map("Iceland")
//   INDIA                @map("India")
//   INDONESIA            @map("Indonesia")
//   IRAQ                 @map("Iraq")
//   IRELAND              @map("Ireland")
//   ISRAEL               @map("Israel")
//   ITALY                @map("Italy")
//   BRITISH_INDIAN_OCEAN_TERRITORY @map("British Indian Ocean Territory")
//   COTE_DIVOIRE         @map("Cote dIvoire")
//   JAMAICA              @map("Jamaica")
//   JAPAN                @map("Japan")
//   KAZAKHSTAN           @map("Kazakhstan")
//   JORDAN               @map("Jordan")
//   KENYA                @map("Kenya")
//   SOUTH_KOREA          @map("South Korea")
//   KOSOVO               @map("Kosovo")
//   KUWAIT               @map("Kuwait")
//   KYRGYZSTAN           @map("Kyrgyzstan")
//   LAOS                 @map("Laos")
//   LEBANON              @map("Lebanon")
//   LESOTHO              @map("Lesotho")
//   LATVIA               @map("Latvia")
//   LIBERIA              @map("Liberia")
//   LIBYA                @map("Libya")
//   LIECHTENSTEIN        @map("Liechtenstein")
//   LITHUANIA            @map("Lithuania")
//   LUXEMBOURG           @map("Luxembourg")
//   MADAGASCAR           @map("Madagascar")
//   MALAWI               @map("Malawi")
//   MALAYSIA             @map("Malaysia")
//   MALDIVES             @map("Maldives")
//   MALI                 @map("Mali")
//   MALTA                @map("Malta")
//   MAURITANIA           @map("Mauritania")
//   MAURITIUS            @map("Mauritius")
//   MAYOTTE              @map("Mayotte")
//   MEXICO               @map("Mexico")
//   MONACO               @map("Monaco")
//   MONGOLIA             @map("Mongolia")
//   MOLDOVA              @map("Moldova")
//   MONTENEGRO           @map("Montenegro")
//   MOROCCO              @map("Morocco")
//   MOZAMBIQUE           @map("Mozambique")
//   OMAN                 @map("Oman")
//   NAMIBIA              @map("Namibia")
//   NAURU                @map("Nauru")
//   NEPAL                @map("Nepal")
//   NETHERLANDS          @map("Netherlands")
//   NEW_CALEDONIA        @map("New Caledonia")
//   VANUATU              @map("Vanuatu")
//   NETHERLANDS_ANTILLES @map("Netherlands Antilles")
//   NEW_ZEALAND          @map("New Zealand")
//   NICARAGUA            @map("Nicaragua")
//   NIGER                @map("Niger")
//   NIGERIA              @map("Nigeria")
//   NIUE                 @map("Niue")
//   NORFOLK_ISLAND       @map("Norfolk Island")
//   NORWAY               @map("Norway")
//   NORTHERN_MARIANA_ISLANDS @map("Northern Mariana Islands")
//   UNITED_STATES_MINOR_OUTLYING_ISLANDS @map("United States Minor Outlying Islands")
//   MICRONESIA           @map("Micronesia")
//   MARSHALL_ISLANDS     @map("Marshall Islands")
//   PALAU                @map("Palau")
//   PAKISTAN             @map("Pakistan")
//   PANAMA               @map("Panama")
//   PAPUA_NEW_GUINEA     @map("Papua New Guinea")
//   PARAGUAY             @map("Paraguay")
//   PERU                 @map("Peru")
//   PHILIPPINES          @map("Philippines")
//   PITCAIRN_ISLANDS     @map("Pitcairn Islands")
//   POLAND               @map("Poland")
//   PORTUGAL             @map("Portugal")
//   GUINEA_BISSAU        @map("Guinea-Bissau")
//   EAST_TIMOR           @map("East Timor")
//   QATAR                @map("Qatar")
//   ROMANIA              @map("Romania")
//   RUSSIA               @map("Russia")
//   RWANDA               @map("Rwanda")
//   SAINT_HELENA         @map("Saint Helena")
//   SAINT_KITTS_AND_NEVIS @map("Saint Kitts and Nevis")
//   SAINT_LUCIA          @map("Saint Lucia")
//   SAINT_PIERRE_AND_MIQUELON @map("Saint Pierre and Miquelon")
//   SAINT_VINCENT_AND_THE_GRENADINES @map("Saint Vincent and the Grenadines")
//   SAN_MARINO           @map("San Marino")
//   SAO_TOME_AND_PRINCIPE @map("Sao Tome and Principe")
//   SAUDI_ARABIA         @map("Saudi Arabia")
//   SENEGAL              @map("Senegal")
//   SVALBARD_AND_JAN_MAYEN @map("Svalbard and Jan Mayen")
//   SERBIA               @map("Serbia")
//   SEYCHELLES           @map("Seychelles")
//   SIERRA_LEONE         @map("Sierra Leone")
//   SINGAPORE            @map("Singapore")
//   SLOVAKIA             @map("Slovakia")
//   VIETNAM              @map("Vietnam")
//   WESTERN_SAHARA       @map("Western Sahara")
//   SLOVENIA             @map("Slovenia")
//   SOMALIA              @map("Somalia")
//   SOUTH_AFRICA         @map("South Africa")
//   ZIMBABWE             @map("Zimbabwe")
//   SPAIN                @map("Spain")
//   SURINAME             @map("Suriname")
//   SWAZILAND            @map("Swaziland")
//   SWEDEN               @map("Sweden")
//   SWITZERLAND          @map("Switzerland")
//   TAJIKISTAN           @map("Tajikistan")
//   THAILAND             @map("Thailand")
//   TOGO                 @map("Togo")
//   TOKELAU              @map("Tokelau")
//   TONGA                @map("Tonga")
//   TRINIDAD_AND_TOBAGO  @map("Trinidad and Tobago")
//   UNITED_ARAB_EMIRATES @map("United Arab Emirates")
//   TUNISIA              @map("Tunisia")
//   TURKIYE              @map("Türkiye")
//   TURKMENISTAN         @map("Turkmenistan")
//   TUVALU               @map("Tuvalu")
//   UGANDA               @map("Uganda")
//   UKRAINE              @map("Ukraine")
//   MACEDONIA_FYROM      @map("Macedonia (FYROM)")
//   EGYPT                @map("Egypt")
//   UNITED_KINGDOM       @map("United Kingdom")
//   TANZANIA             @map("Tanzania")
//   UNITED_STATES        @map("United States")
//   BURKINA_FASO         @map("Burkina Faso")
//   URUGUAY              @map("Uruguay")
//   UZBEKISTAN           @map("Uzbekistan")
//   VENEZUELA            @map("Venezuela")
//   BRITISH_VIRGIN_ISLANDS @map("British Virgin Islands")
//   WALLIS_AND_FUTUNA    @map("Wallis and Futuna")
//   SAMOA                @map("Samoa")
//   YEMEN                @map("Yemen")
//   ZAMBIA               @map("Zambia")
//   CANARY_ISLANDS       @map("Canary Islands")
  
//   @@map("nationality")
// }

// enum GDPRConsent {
//   YES       @map("Yes")
//   NO        @map("No")
//   PENDING   @map("Pending")
  
//   @@map("gdpr_consent")
// }

// enum MarketingConsent {
//   YES   @map("Yes")
//   NO    @map("No")
  
//   @@map("marketing_consent")
// }

// enum StudentRecordStatus {
//   ACTIVE      @map("Active")
//   INACTIVE    @map("Inactive")
//   DUPLICATE   @map("Duplicate")
//   MERGED      @map("Merged")
  
//   @@map("student_record_status")
// }

enum I20CasStatus {
  YES               @map("Yes")
  NO                @map("No")
  NOT_APPLICABLE    @map("Not Applicable")
  PENDING           @map("Pending")
}

enum ApplicationStatusEnum {
  PRE_APPROVED          @map("Pre-Approved")
  APPROVED              @map("Approved")
  SANCTION_LETTER_ISSUED @map("Sanction Letter Issued")
  DISBURSEMENT_PENDING  @map("Disbursement Pending")
  DISBURSED             @map("Disbursed")
  REJECTED              @map("Rejected")
  ON_HOLD               @map("On Hold")
  WITHDRAWN             @map("Withdrawn")
  CANCELLED             @map("Cancelled")
}

enum PriorityLevel {
  HIGH      @map("High")
  MEDIUM    @map("Medium")
  LOW       @map("Low")
  URGENT    @map("Urgent")
}

enum RecordStatus {
  ACTIVE      @map("Active")
  COMPLETED   @map("Completed")
  CANCELLED   @map("Cancelled")
  ARCHIVED    @map("Archived")
}

enum LoanProductType {
  SECURED             @map("Secured")
  UNSECURED           @map("Unsecured")
  GOVERNMENT_SCHEME   @map("Government Scheme")
}

enum InterestRateType {
  FIXED           @map("Fixed")
  FLOATING        @map("Floating")
  HYBRID          @map("Hybrid")
  CHOICE_BASED    @map("Choice Based")
}

enum DelayReason {
  INCOMPLETE_DOCUMENTS      @map("Incomplete Documents")
  CUSTOMER_NOT_RESPONDING   @map("Customer Not Responding")
  LENDER_PROCESSING         @map("Lender Processing")
  INTERNAL_REVIEW           @map("Internal Review")
  COMPLIANCE_CHECK          @map("Compliance Check")
  OTHER                     @map("Other")
}

enum RejectionReason {
  // Loan-related
  INSUFFICIENT_INCOME       @map("Insufficient Income")
  POOR_CREDIT_SCORE         @map("Poor Credit Score")
  INCOMPLETE_DOCUMENTS      @map("Incomplete Documents")
  COURSE_NOT_APPROVED       @map("Course Not Approved")
  UNIVERSITY_NOT_APPROVED   @map("University Not Approved")
  HIGH_RISK_PROFILE         @map("High Risk Profile")
  POLICY_CHANGES            @map("Policy Changes")
  
  // Document-related
  INVALID_FORMAT            @map("Invalid Format")
  EXPIRED_DOCUMENT          @map("Expired Document")
  UNCLEAR_IMAGE             @map("Unclear Image")
  INCOMPLETE_INFORMATION    @map("Incomplete Information")
  MISMATCH_DATA             @map("Mismatch Data")
  FRAUDULENT                @map("Fraudulent")
  WRONG_DOCUMENT            @map("Wrong Document")
  NOT_CERTIFIED             @map("Not Certified")
  
  OTHER                     @map("Other")

  @@map("rejection_reason")
}

enum AppealOutcome {
  PENDING           @map("Pending")
  APPROVED          @map("Approved")
  REJECTED          @map("Rejected")
  NOT_APPLICABLE    @map("Not Applicable")
}

enum CommunicationChannel {
  PHONE         @map("Phone")
  EMAIL         @map("Email")
  WHATSAPP      @map("Whatsapp")
  SMS           @map("Sms")
  VIDEO_CALL    @map("Video Call")
}

enum FollowUpFrequency {
  DAILY       @map("Daily")
  WEEKLY      @map("Weekly")
  BI_WEEKLY   @map("Bi Weekly")
  MONTHLY     @map("Monthly")
  AS_NEEDED   @map("As Needed")
}

enum ApplicationSourceSystem {
  MANUAL_ENTRY      @map("Manual Entry")
  WEBSITE_FORM      @map("Website Form")
  PARTNER_PORTAL    @map("Partner Portal")
  IMPORT            @map("Import")
  API               @map("Api")
}

enum IntegrationStatus {
  SYNCED          @map("Synced")
  PENDING_SYNC    @map("Pending Sync")
  SYNC_FAILED     @map("Sync Failed")
  NOT_REQUIRED    @map("Not Required")
}

enum CommissionBase {
  LOAN_AMOUNT     @map("Loan Amount")
  FIXED_AMOUNT    @map("Fixed Amount")
  TIERED          @map("Tiered")
}

enum CommissionStatus {
  NOT_APPLICABLE              @map("Not Applicable")
  PENDING_CALCULATION         @map("Pending Calculation")
  CALCULATED                  @map("Calculated")
  APPROVED_FOR_PAYMENT        @map("Approved For Payment")
  PAID                        @map("Paid")
  ON_HOLD                     @map("On Hold")
}

enum AdmissionStatus {
  NOT_APPLIED           @map("Not Applied")
  APPLIED               @map("Applied")
  INTERVIEW_SCHEDULED   @map("Interview Scheduled")
  WAITLISTED            @map("Waitlisted")
  ADMITTED              @map("Admitted")
  REJECTED              @map("Rejected")
  
  @@map("admission_status")
}

enum EducationLevel {
  HIGH_SCHOOL   @map("High School")
  BACHELOR      @map("Bachelor")
  MASTER        @map("Master")
  PHD           @map("Phd")
  DIPLOMA       @map("Diploma")
  OTHER         @map("Other")

  @@map("education_level")
}

enum AcademicTerm {
  FALL      @map("Fall")
  SPRING    @map("Spring")
  SUMMER    @map("Summer")
  WINTER    @map("Winter")
  
  @@map("academic_term")
}

enum ApplicationStatuses {
  LEAD                    @map("Lead")
  PROSPECT                @map("Prospect")
  APPLICATION_STARTED     @map("Application Started")
  APPLICATION_SUBMITTED   @map("Application Submitted")
  IN_REVIEW               @map("In Review")
  APPROVED                @map("Approved")
  REJECTED                @map("Rejected")
  ENROLLED                @map("Enrolled")
  DEFERRED                @map("Deferred")
  WITHDRAWN               @map("Withdrawn")

  @@map("application_status")
}

enum AdmissionStatuses {
  NOT_APPLIED   @map("Not Applied")
  APPLIED       @map("Applied")
  ADMITTED      @map("Admitted")
  WAITLISTED    @map("Waitlisted")
  REJECTED      @map("Rejected")
  DEFERRED      @map("Deferred")
}

enum VisaStatus {
  NOT_APPLIED   @map("Not Applied")
  APPLIED       @map("Applied")
  APPROVED      @map("Approved")
  REJECTED      @map("Rejected")
  PENDING       @map("Pending")
}

enum ApplicationSource {
  DIRECT        @map("Direct")
  B2B_PARTNER   @map("B2b Partner")
  WEBSITE       @map("Website")
  REFERRAL      @map("Referral")
  ADVERTISEMENT @map("Advertisement")
}

enum CourseLevel {
  BACHELORS     @map("Bachelors")
  MASTERS       @map("Masters")
  PHD           @map("Phd")
  DIPLOMA       @map("Diploma")
  CERTIFICATE   @map("Certificate")
  PROFESSIONAL  @map("Professional")
}

enum LenderCategory {
  DOMESTIC        @map("Domestic")
  INTERNATIONAL   @map("International")
  BOTH            @map("Both")
  
  @@map("lender_category")
}

enum LenderType {
  PUBLIC_BANK             @map("Public Bank")
  PRIVATE_BANK            @map("Private Bank")
  NBFC                    @map("Nbfc")
  CREDIT_UNION            @map("Credit Union")
  INTERNATIONAL_LENDER    @map("International Lender")
  FINTECH                 @map("Fintech")

  @@map("lender_type")
}

enum LenderStatus {
  ACTIVE              @map("Active")
  INACTIVE            @map("Inactive")
  SUSPENDED           @map("Suspended")
  PENDING_APPROVAL    @map("Pending Approval")
  UNDER_REVIEW        @map("Under Review")

  @@map("lender_status")
}

enum CoSignerRequirement {
  ALWAYS_REQUIRED       @map("Always Required")
  SOMETIMES_REQUIRED    @map("Sometimes Required")
  NOT_REQUIRED          @map("Not Required")

  @@map("co_signer_requirement")
}

enum CollateralType {
  RESIDENTIAL_PROPERTY        @map("Residential Property")
  COMMERCIAL_PROPERTY         @map("Commercial Property")
  NON_AGRICULTURAL_LAND       @map("Non Agricultural Land")
  FIXED_DEPOSITS              @map("Fixed Deposits")
  GOVERNMENT_SECURITIES       @map("Government Securities")
  LIC_POLICIES                @map("Lic Policies")
  NSC_KVP                     @map("Nsc Kvp")
  GOLD                        @map("Gold")
  SHARES_MUTUAL_FUNDS         @map("Shares Mutual Funds")
  PROPERTY                    @map("Property")
  SECURITIES                  @map("Securities")
  GUARANTOR_ONLY              @map("Guarantor Only")
  NO_COLLATERAL               @map("No Collateral")
  NA_PLOT                     @map("Na Plot")

  @@map("collateral_type")
}

enum CourseType {
  UNDERGRADUATE       @map("Undergraduate")
  GRADUATE           @map("Graduate")
  PHD                @map("Phd")
  DIPLOMA            @map("Diploma")
  CERTIFICATE        @map("Certificate")
  PROFESSIONAL       @map("Professional")
  TECHNICAL          @map("Technical")
  FULL_TIME          @map("Full Time")
  PART_TIME          @map("Part Time")
  DISTANCE_LEARNING  @map("Distance Learning")
  ONLINE             @map("Online")
  EXECUTIVE          @map("Executive")
  REGULAR            @map("Regular")
  ACCELERATED        @map("Accelerated")

  @@map("course_type")
}

enum APIConnectivityStatus {
  CONNECTED         @map("Connected")
  DISCONNECTED      @map("Disconnected")
  IN_PROGRESS       @map("In Progress")
  FAILED            @map("Failed")
  NOT_APPLICABLE    @map("Not Applicable")

  @@map("api_connectivity_status")
}

enum IntegrationLevel {
  FULL_DIGITAL      @map("Full Digital")
  PARTIAL_DIGITAL   @map("Partial Digital")
  MANUAL            @map("Manual")
  HYBRID            @map("Hybrid")

  @@map("integration_level")
}

enum DataSource {
  MANUAL_ENTRY          @map("Manual Entry")
  API_SYNC              @map("Api Sync")
  IMPORT                @map("Import")
  THIRD_PARTY           @map("Third Party")
  SYSTEM_GENERATED      @map("System Generated")
  API                   @map("Api")
  WEBSITE_FORM          @map("Website Form")
  PARTNER_INTEGRATION   @map("Partner Integration")

  @@map("data_source")
}

enum PartnershipStatus {
  ACTIVE        @map("Active")
  INACTIVE      @map("Inactive")
  PENDING       @map("Pending")
  TERMINATED    @map("Terminated")
  ON_HOLD       @map("On Hold")

  @@map("partnership_status")
}

enum ProductStatus {
  ACTIVE          @map("Active")
  INACTIVE        @map("Inactive")
  DISCONTINUED    @map("Discontinued")
  COMING_SOON     @map("Coming Soon")
  UNDER_REVIEW    @map("Under Review")

  @@map("product_status")
}

enum ProductType {
  SECURED_EDUCATION_LOAN      @map("Secured Education Loan")
  UNSECURED_EDUCATION_LOAN    @map("Unsecured Education Loan")
  GOVERNMENT_SCHEME           @map("Government Scheme")
  SCHOLAR_LOAN                @map("Scholar Loan")
  EXPRESS_LOAN                @map("Express Loan")
  PREMIUM_LOAN                @map("Premium Loan")
  SKILL_DEVELOPMENT_LOAN      @map("Skill Development Loan")

  @@map("product_type")
}

enum ProductCategory {
  DOMESTIC        @map("Domestic")
  INTERNATIONAL   @map("International")
  BOTH            @map("Both")
  VOCATIONAL      @map("Vocational")
  PROFESSIONAL    @map("Professional")
  
  @@map("loan_category")
}

enum ApplicationMode {
  ONLINE      @map("Online")
  OFFLINE     @map("Offline")
  HYBRID      @map("Hybrid")
  MOBILE_APP  @map("Mobile App")
  PORTAL      @map("Portal")
  
  @@map("application_mode")
}

enum DisbursementProcess {
  DIRECT_TO_UNIVERSITY    @map("Direct To University")
  DIRECT_TO_STUDENT       @map("Direct To Student")
  INSTALLMENT_BASED       @map("Installment Based")
  FULL_AMOUNT             @map("Full Amount")
  PARTIAL_DISBURSEMENT    @map("Partial Disbursement")
  
  @@map("disbursement_process")
}

enum CollateralRequirement {
  ALWAYS_REQUIRED   @map("Always Required")
  ABOVE_THRESHOLD   @map("Above Threshold")
  NOT_REQUIRED      @map("Not Required")
  OPTIONAL          @map("Optional")
  
  @@map("collateral_requirement")
}

enum ProcessingFeeType {
  PERCENTAGE      @map("Percentage")
  FIXED_AMOUNT    @map("Fixed Amount")
  NIL             @map("Nil")
  TIERED          @map("Tiered")
  
  @@map("processing_fee_type")
}

enum RepaymentFrequency {
  MONTHLY       @map("Monthly")
  QUARTERLY     @map("Quarterly")
  HALF_YEARLY   @map("Half Yearly")
  ANNUALLY      @map("Annually")
  FLEXIBLE      @map("Flexible")
  CUSTOM        @map("Custom")
  
  @@map("repayment_frequency")
}

enum MoratoriumType {
  COMPLETE          @map("Complete")
  INTEREST_ONLY     @map("Interest Only")
  PARTIAL_EMI       @map("Partial Emi")
  NO_MORATORIUM     @map("No Moratorium")

  @@map("moratorium_type")
}

enum IntegrationComplexity {
  SIMPLE          @map("Simple")
  MODERATE        @map("Moderate")
  COMPLEX         @map("Complex")
  VERY_COMPLEX    @map("Very Complex")
  
  @@map("integration_complexity")
}

enum MarketPositioning {
  PREMIUM           @map("Premium")
  COMPETITIVE       @map("Competitive")
  BUDGET            @map("Budget")
  VALUE_FOR_MONEY   @map("Value For Money")
  NICHE             @map("Niche")
  
  @@map("market_positioning")
}

enum LoanStatus {
  NOT_APPLIED           @map("Not Applied")
  EXPLORING             @map("Exploring")
  APPLICATION_STARTED   @map("Application Started")
  DOCUMENTS_PENDING     @map("Documents Pending")
  UNDER_REVIEW          @map("Under Review")
  APPROVED              @map("Approved")
  REJECTED              @map("Rejected")
  DISBURSED             @map("Disbursed")
  ACTIVE                @map("Active")
  CLOSED                @map("Closed")

  @@map("loan_status")
}

enum Gender {
  MALE                @map("Male")
  FEMALE              @map("Female")
  OTHER               @map("Other")
  PREFER_NOT_TO_SAY   @map("Prefer Not To Say")

  @@map("gender")
}

enum EmploymentStatus {
  EMPLOYED        @map("Employed")
  UNEMPLOYED      @map("Unemployed")
  SELF_EMPLOYED   @map("Self Employed")
  STUDENT         @map("Student")
  RETIRED         @map("Retired")

  @@map("employment_status")
}

enum MaritalStatus {
  SINGLE    @map("Single")
  MARRIED   @map("Married")
  DIVORCED  @map("Divorced")
  WIDOWED   @map("Widowed")
  
  @@map("marital_status")
}

enum DocumentCategory {
  STUDENT_DOCUMENTS           @map("Student Documents")
  CO_APPLICANT_1_DOCUMENTS    @map("Co-Applicant 1 Documents")
  CO_APPLICANT_2_DOCUMENTS    @map("Co-Applicant 2 Documents")
  CO_APPLICANT_3_DOCUMENTS    @map("Co-Applicant 3 Documents")
  COLLATERAL_DOCUMENTS        @map("Collateral Documents")
  INSTITUTIONAL_DOCUMENTS     @map("Institutional Documents")
  SUPPORTING_DOCUMENTS        @map("Supporting Documents")

  @@map("document_category")
}

enum DocumentType {
  IDENTITY_PROOF         @map("Identity Proof")
  ADDRESS_PROOF          @map("Address Proof")
  INCOME_PROOF           @map("Income Proof")
  ACADEMIC_DOCUMENTS     @map("Academic Documents")
  EMPLOYMENT_PROOF       @map("Employment Proof")
  PROPERTY_DOCUMENTS     @map("Property Documents")
  BANK_STATEMENTS        @map("Bank Statements")
  TAX_DOCUMENTS          @map("Tax Documents")
  ADMISSION_DOCUMENTS    @map("Admission Documents")
  VISA_DOCUMENTS         @map("Visa Documents")
  FINANCIAL_DOCUMENTS    @map("Financial Documents")
  GUARANTEE_DOCUMENTS    @map("Guarantee Documents")
  OTHER                  @map("Other")

  @@map("document_type")
}

enum DocumentPriority {
  MANDATORY       @map("Mandatory")
  CONDITIONAL     @map("Conditional")
  OPTIONAL        @map("Optional")
  NICE_TO_HAVE    @map("Nice To Have")

  @@map("document_priority")
}

enum DocumentStage {
  APPLICATION           @map("Application")
  INITIAL_REVIEW        @map("Initial Review")
  CREDIT_ASSESSMENT     @map("Credit Assessment")
  FINAL_APPROVAL        @map("Final Approval")
  DISBURSEMENT          @map("Disbursement")
  POST_DISBURSEMENT     @map("Post Disbursement")

  @@map("document_stage")
}

enum DocumentFormat {
  PDF                   @map("Pdf")
  JPG                   @map("Jpg")
  JPEG                  @map("Jpeg")
  PNG                   @map("Png")
  TIFF                  @map("Tiff")
  DOC                   @map("Doc")
  DOCX                  @map("Docx")
  ORIGINAL_HARD_COPY    @map("Original Hard Copy")
  SCANNED_COPY          @map("Scanned Copy")
  DIGITAL_COPY          @map("Digital Copy")

  @@map("document_format")
}

enum DocumentStatus {
  ACTIVE          @map("Active")
  INACTIVE        @map("Inactive")
  UNDER_REVIEW    @map("Under Review")
  DEPRECATED      @map("Deprecated")
  ARCHIVED        @map("Archived")

  @@map("document_status")
}

enum VerificationStatus {
  PENDING                     @map("Pending")
  IN_PROGRESS                 @map("In Progress")
  VERIFIED                    @map("Verified")
  REJECTED                    @map("Rejected")
  EXPIRED                     @map("Expired")
  NOT_REQUIRED                @map("Not Required")
  ADDITIONAL_INFO_REQUIRED    @map("Additional Info Required")

  @@map("verification_status")
}

enum VerificationMethod {
  MANUAL          @map("Manual")
  AUTOMATED       @map("Automated")
  HYBRID          @map("Hybrid")
  THIRD_PARTY     @map("Third Party")
  BLOCKCHAIN      @map("Blockchain")
  DIGILOCKER      @map("Digilocker")

  @@map("verification_method")
}

enum DataSensitivity {
  HIGHLY_SENSITIVE    @map("Highly Sensitive")
  SENSITIVE           @map("Sensitive")
  MODERATE            @map("Moderate")
  LOW                 @map("Low")
  PUBLIC              @map("Public")

  @@map("data_sensitivity")
}

enum ApplicabilityStatus {
  YES           @map("Yes")
  NO            @map("No")
  CONDITIONAL   @map("Conditional")

  @@map("applicability_status")
}

enum AutomationLevel {
  FULL          @map("Full")
  PARTIAL       @map("Partial")
  MANUAL_ONLY   @map("Manual Only")
  HYBRID        @map("Hybrid")

  @@map("automation_level")
}

enum CommissionModel {
  PERCENTAGE          @map("Percentage")
  FIXED_AMOUNT        @map("Fixed Amount")
  TIERED              @map("Tiered")
  HYBRID              @map("Hybrid")
  PERFORMANCE_BASED   @map("Performance Based")

  @@map("commission_model")
}

enum SettlementStatus {
  PENDING_CALCULATION   @map("Pending Calculation")
  CALCULATED            @map("Calculated")
  PENDING_APPROVAL      @map("Pending Approval")
  APPROVED              @map("Approved")
  PAYMENT_INITIATED     @map("Payment Initiated")
  PAID                  @map("Paid")
  ON_HOLD               @map("On Hold")
  REJECTED              @map("Rejected")
  CANCELLED             @map("Cancelled")
  DISPUTED              @map("Disputed")

  @@map("settlement_status")
}

enum PaymentStatus {
  PENDING       @map("Pending")
  INITIATED     @map("Initiated")
  IN_PROCESS    @map("In Process")
  COMPLETED     @map("Completed")
  FAILED        @map("Failed")
  CANCELLED     @map("Cancelled")
  RETURNED      @map("Returned")

  @@map("payment_status")
}

enum PaymentMethod {
  BANK_TRANSFER         @map("Bank Transfer")
  NEFT                  @map("Neft")
  RTGS                  @map("Rtgs")
  IMPS                  @map("Imps")
  UPI                   @map("Upi")
  CHEQUE                @map("Cheque")
  DEMAND_DRAFT          @map("Demand Draft")
  DIGITAL_WALLET        @map("Digital Wallet")
  INTERNATIONAL_WIRE    @map("International Wire")

  @@map("payment_method")
}

enum SettlementPeriod {
  MONTHLY       @map("Monthly")
  QUARTERLY     @map("Quarterly")
  HALF_YEARLY   @map("Half Yearly")
  YEARLY        @map("Yearly")
  AD_HOC        @map("Ad Hoc")

  @@map("settlement_period")
}

enum DisbursementTrigger {
  LOAN_DISBURSED          @map("Loan Disbursed")
  APPLICATION_APPROVED    @map("Application Approved")
  TARGET_ACHIEVED         @map("Target Achieved")
  MANUAL_TRIGGER          @map("Manual Trigger")
  SCHEDULED_PAYMENT       @map("Scheduled Payment")

  @@map("disbursement_trigger")
}

enum InvoiceStatus {
  PENDING     @map("Pending")
  GENERATED   @map("Generated")
  SENT        @map("Sent")
  RECEIVED    @map("Received")
  APPROVED    @map("Approved")
  REJECTED    @map("Rejected")

  @@map("invoice_status")
}

enum ReconciliationStatus {
  PENDING               @map("Pending")
  RECONCILED            @map("Reconciled")
  DISCREPANCY_FOUND     @map("Discrepancy Found")
  UNDER_REVIEW          @map("Under Review")
  RESOLVED              @map("Resolved")

  @@map("reconciliation_status")
}

enum HoldReason {
  DOCUMENT_VERIFICATION_PENDING   @map("Document Verification Pending")
  INVOICE_ISSUES                  @map("Invoice Issues")
  PARTNER_AGREEMENT_DISPUTE       @map("Partner Agreement Dispute")
  CALCULATION_ERROR               @map("Calculation Error")
  COMPLIANCE_ISSUES               @map("Compliance Issues")
  MANAGEMENT_REVIEW               @map("Management Review")
  LEGAL_ISSUES                    @map("Legal Issues")
  SYSTEM_ERROR                    @map("System Error")

  @@map("hold_reason")
}

enum NotificationMethod {
  EMAIL                 @map("Email")
  SMS                   @map("Sms")
  WHATSAPP              @map("Whatsapp")
  PHONE_CALL            @map("Phone Call")
  PORTAL_NOTIFICATION   @map("Portal Notification")

  @@map("notification_method")
}

enum AcknowledgmentStatus {
  YES       @map("Yes")
  NO        @map("No")
  PENDING   @map("Pending")
  
  @@map("acknowledgment_status")
}

enum ApiAccessStatus {
  YES           @map("Yes")
  NO            @map("No")
  NOT_REQUIRED  @map("Not Required")
  
  @@map("api_access_status")
}

enum B2BDataSource {
  MANUAL_ENTRY            @map("Manual Entry")
  IMPORT                  @map("Import")
  PARTNER_APPLICATION     @map("Partner Application")
  REFERRAL                @map("Referral")
  
  @@map("b2b_data_source")
}

enum B2BIntegrationStatus {
  NOT_REQUIRED    @map("Not Required")
  PENDING         @map("Pending")
  COMPLETE        @map("Complete")
  ISSUES          @map("Issues")
  
  @@map("b2b_integration_status")
}

enum PartnerRecordStatus {
  ACTIVE        @map("Active")
  INACTIVE      @map("Inactive")
  SUSPENDED     @map("Suspended")
  UNDER_REVIEW  @map("Under Review")
  ARCHIVED      @map("Archived")

  @@map("b2b_partner_record_status")
}

enum PortalAccessStatus {
  YES       @map("Yes")
  NO        @map("No")
  PENDING   @map("Pending")

  @@map("b2b_portal_access_status")
}

enum LoginStatus {
  success   @map("Success")
  failed    @map("Failed")
  logout    @map("Logout")
}

enum LenderCollateralType {
  PROPERTY          @map("Property")
  FIXED_DEPOSITS    @map("Fixed Deposits")
  LIC_POLICIES      @map("Lic Policies")
  SECURITIES        @map("Securities")
  GUARANTOR_ONLY    @map("Guarantor Only")
  NO_COLLATERAL     @map("No Collateral")
  NA_PLOT           @map("Na Plot")
}

enum SupportedCourseTypes {
  UNDERGRADUATE   @map("Undergraduate")
  GRADUATE        @map("Graduate")
  PHD             @map("Phd")
  DIPLOMA         @map("Diploma")
  CERTIFICATE     @map("Certificate")
  PROFESSIONAL    @map("Professional")
  TECHNICAL       @map("Technical")
}

enum SupportedDestinations {
  US          @map("Us")
  UK          @map("Uk")
  CANADA      @map("Canada")
  AUSTRALIA   @map("Australia")
  GERMANY     @map("Germany")
  FRANCE      @map("France")
  SINGAPORE   @map("Singapore")
  ITALY       @map("Italy")
  UAE         @map("Uae")
  OTHER       @map("Other")
}

enum HolidayProcessing {
  YES       @map("Yes")
  NO        @map("No")
  LIMITED   @map("Limited")
}

enum RepaymentOptions {
  EMI             @map("Emi")
  SIMPLE_INT      @map("Simple Int")
  PARTIAL_INT     @map("Partial Int")
  COMPLETE_MORAT  @map("Complete Morat")

  @@map("repayment_options")
}

enum PayoutTerms {
  NET_30    @map("Net 30")
  NET_45    @map("Net 45")
  NET_60    @map("Net 60")
  CUSTOM    @map("Custom")

  @@map("payout_terms")
}

enum PerformanceRating {
  EXCELLENT   @map("Excellent")
  GOOD        @map("Good")
  AVERAGE     @map("Average")
  POOR        @map("Poor")

  @@map("performance_rating")
}

enum LenderRecordStatus {
  ACTIVE        @map("Active")
  INACTIVE      @map("Inactive")
  UNDER_REVIEW  @map("Under Review")
  SUSPENDED     @map("Suspended")

  @@map("lender_record_status")
}

enum LenderDataSource {
  MANUAL_ENTRY        @map("Manual Entry")
  IMPORT              @map("Import")
  API_INTEGRATION     @map("Api Integration")

  @@map("lender_data_source")
}

enum GurantorRequired {
  ALWAYS            @map("Always")
  ABOVE_THRESHOLD   @map("Above Threshold")
  NOT_REQUIRED      @map("Not Required")
  OPTIONAL          @map("Optional")

  @@map("guarantor_required")
}

enum InsuranceRequired {
  LIFE_INSURANCE        @map("Life Insurance")
  PROPERTY_INSURANCE    @map("Property Insurance")
  BOTH                  @map("Both")
  NOT_REQUIRED          @map("Not Required")

  @@map("insurance_required")
}

enum ThirdPartyGuaranteeRequired {
  YES             @map("Yes")
  NO              @map("No")
  CASE_BY_CASE    @map("Case By Case")

  @@map("third_party_guarantee_required")
}

enum LoanProductMarketPositioning {
  PREMIUM       @map("Premium")
  MID_MARKET    @map("Mid-Market")
  BUDGET        @map("Budget")
  NICHE         @map("Niche")
  MASS_MARKET   @map("Mass Market")

  @@map("loan_product_market_segment")
}

enum PricingStrategy {
  COMPETITIVE     @map("Competitive")
  PREMIUM         @map("Premium")
  PENETRATION     @map("Penetration")
  VALUE_BASED     @map("Value Based")

  @@map("pricing_strategy")
}

enum NationalityRestrictions {
  INDIAN    @map("Indian")
  OTHERS    @map("Others")

  @@map("nationality_restrictions")
}

enum ResidencyRequirements {
  RESIDENT        @map("Resident")
  NON_RESIDENT    @map("Non-Resident")

  @@map("residency_requirements")
}

enum TargetSegment {
  UNDERGRADUATE   @map("Undergraduate")
  GRADUATE        @map("Graduate")
  PHD             @map("Phd")
  DIPLOMA         @map("Diploma")
  CERTIFICATE     @map("Certificate")
  PROFESSIONAL    @map("Professional")
  TECHNICAL       @map("Technical")
  MEDICAL         @map("Medical")
  MANAGEMENT      @map("Management")

  @@map("target_segment")
}

enum LoanProductCourseTypes {
  FULL_TIME           @map("Full Time")
  PART_TIME           @map("Part Time")
  DISTANCE_LEARNING   @map("Distance Learning")
  ONLINE              @map("Online")
  EXECUTIVE           @map("Executive")
  REGULAR             @map("Regular")
  ACCELERATED         @map("Accelerated")

  @@map("loan_product_course_types")
}

enum PartPaymentAllowed {
  YES               @map("Yes")
  NO                @map("No")
  MINIMUM_AMOUNT    @map("Minimum Amount")

  @@map("part_payment_allowed")
}

enum CustomerSupportFeatures {
  TWENTY_FOUR_SEVEN_SUPPORT   @map("24x7 Support")
  DEDICATED_RM                @map("Dedicated Rm")
  ONLINE_CHAT                 @map("Online Chat")
  VIDEO_KYC                   @map("Video Kyc")
  DOOR_STEP_SERVICE           @map("Door Step Service")

  @@map("customer_support_features")
}

enum DigitalFeatures {
  ONLINE_APPLICATION      @map("Online Application")
  DIGITAL_DOCUMENTATION   @map("Digital Documentation")
  E_STATEMENTS            @map("E-Statements")
  MOBILE_APP              @map("Mobile App")
  SMS_ALERTS              @map("Sms Alerts")
  EMAIL_NOTIFICATIONS     @map("Email Notifications")

  @@map("digital_features")
}

enum FlexibleRepaymentOptions {
  STEP_UP_EMI       @map("Step Up Emi")
  STEP_DOWN_EMI     @map("Step Down Emi")
  BULLET_PAYMENT    @map("Bullet Payment")
  FLEXIBLE_EMI      @map("Flexible Emi")
  HOLIDAY_OPTIONS   @map("Holiday Options")

  @@map("flexible_repayment_options")
}

enum SandboxEnvironment {
  AVAILABLE       @map("Available")
  NOT_AVAILABLE   @map("Not Available")
  ON_REQUEST      @map("On Request")

  @@map("sandbox_environment")
}

enum DataFormat {
  JSON      @map("Json")
  XML       @map("Xml")
  CSV       @map("Csv")
  API       @map("Api")
  MANUAL    @map("Manual")

  @@map("data_format")
}

enum ApiAvailability {
  YES                 @map("Yes")
  NO                  @map("No")
  UNDER_DEVELOPMENT   @map("Under Development")
  PLANNED             @map("Planned")

  @@map("api_availability")
}

enum WebHookSupport {
  YES       @map("Yes")
  NO        @map("No")
  LIMITED   @map("Limited")

  @@map("webhook_support")
}

enum ProductRecordStatus {
  ACTIVE          @map("Active")
  INACTIVE        @map("Inactive")
  UNDER_REVIEW    @map("Under Review")
  DISCONTINUED    @map("Discontinued")

  @@map("product_record_status")
}

enum ReviewFrequency {
  MONTHLY       @map("Monthly")
  QUARTERLY     @map("Quarterly")
  HALF_YEARLY   @map("Half-yearly")
  YEARLY        @map("Yearly")

  @@map("review_frequency")
}

enum SettlementMonth {
  JANUARY     @map("January")
  FEBRUARY    @map("February")
  MARCH       @map("March")
  APRIL       @map("April")
  MAY         @map("May")
  JUNE        @map("June")
  JULY        @map("July")
  AUGUST      @map("August")
  SEPTEMBER   @map("September")
  OCTOBER     @map("October")
  NOVEMBER    @map("November")
  DECEMBER    @map("December")

  @@map("settlement_month")
}

enum TaxCertificateRequired {
  YES               @map("Yes")
  NO                @map("No")
  AUTO_GENERATED    @map("Auto Generated")

  @@map("tax_certificate_required")
}

enum CommissionDataSource {
  MANUAL_ENTRY              @map("Manual Entry")
  AUTOMATED_CALCULATION     @map("Automated Calculation")
  IMPORT                    @map("Import")
  API                       @map("Api")
  BULK_UPLOAD               @map("Bulk Upload")

  @@map("commission_data_source")
}

enum SettlementRecordStatus {
  ACTIVE                @map("Active")
  COMPLETED             @map("Completed")
  CANCELLED             @map("Cancelled")
  ARCHIVED              @map("Archived")
  UNDER_INVESTIGATION   @map("Under Investigation")

  @@map("settlement_record_status")
}

enum SystemGenerated {
  YES         @map("Yes")
  NO          @map("No")
  PARTIALLY   @map("Partially")

  @@map("system_generated")
}

enum PartnerNotificationSent {
  YES       @map("Yes")
  NO        @map("No")
  PENDING   @map("Pending")
  FAILED    @map("Failed")

  @@map("partner_notification_sent")
}

enum TransactionTypes {
  COMMISSION_PAYMENT    @map("Commission Payment")
  BONUS_PAYMENT         @map("Bonus Payment")
  ADJUSTMENT            @map("Adjustment")
  REVERSAL              @map("Reversal")
  PENALTY_DEDUCTION     @map("Penalty Deduction")
  ADVANCE_PAYMENT       @map("Advance Payment")
  FINAL_SETTLEMENT      @map("Final Settlement")

  @@map("transaction_types")
}

enum CollateralDependency {
  YES               @map("Yes")
  NO                @map("No")
  NOT_APPLICABLE    @map("Not Applicable")

  @@map("collateral_dependency")
}

enum RequiredForCountries {
  US          @map("Us")
  UK          @map("Uk")
  CANADA      @map("Canada")
  AUSTRALIA   @map("Australia")
  GERMANY     @map("Germany")
  FRANCE      @map("France")
  OTHER       @map("Other")

  @@map("required_for_countries")
}

enum RequiredForCourses {
  ENGINEERING   @map("Engineering")
  MBA           @map("Mba")
  MS            @map("Ms")
  MEDICINE      @map("Medicine")
  LAW           @map("Law")
  ARTS          @map("Arts")
  SCIENCE       @map("Science")
  OTHER         @map("Other")

  @@map("required_for_courses")
}

enum GdprRelevance {
  YES               @map("Yes")
  NO                @map("No")
  PARTIAL           @map("Partial")
  NOT_APPLICABLE    @map("Not Applicable")

  @@map("gdpr_relevance")
}

enum DocumentAvailability {
  YES           @map("Yes")
  NO            @map("No")
  PLANNED       @map("Planned")
  NOT_REQUIRED  @map("Not Required")

  @@map("document_availability")
}

enum AutomatedProcessing {
  FULL          @map("Full")
  PARTIAL       @map("Partial")
  MANUAL_ONLY   @map("Manual Only")
  HYBRID        @map("Hybrid")

  @@map("automated_processing")
}

enum BlockchainVerification {
  YES               @map("Yes")
  NO                @map("No")
  NOT_APPLICABLE    @map("Not Applicable")
  FUTURE            @map("Future")

  @@map("blockchain_verification")
}

enum DigitalSignatureRequired {
  YES         @map("Yes")
  NO          @map("No")
  OPTIONAL    @map("Optional")
  PREFERRED   @map("Preferred")

  @@map("digital_signature_required")
}

enum ESignatureAccepted {
  YES             @map("Yes")
  NO              @map("No")
  CASE_BY_CASE    @map("Case By Case")

  @@map("e_signature_accepted")
}

enum RealTimeVerification {
  YES               @map("Yes")
  NO                @map("No")
  PLANNED           @map("Planned")
  NOT_APPLICABLE    @map("Not Applicable")

  @@map("real_time_verification")
}

enum AcceptedFormats {
  PDF                   @map("Pdf")
  JPG                   @map("Jpg")
  JPEG                  @map("Jpeg")
  PNG                   @map("Png")
  TIFF                  @map("Tiff")
  DOC                   @map("Doc")
  DOCX                  @map("Docx")
  ORIGINAL_HARD_COPY    @map("Original Hard Copy")
  SCANNED_COPY          @map("Scanned Copy")
  DIGITAL_COPY          @map("Digital Copy")
  
  @@map("accepted_formats")
}

enum ColorRequirements {
  COLOR_ONLY            @map("Color Only")
  BLACK_WHITE_ONLY      @map("Black White Only")
  BOTH_ACCEPTABLE       @map("Both Acceptable")
  COLOR_PREFERRED       @map("Color Preferred")
  
  @@map("color_requirements")
}

enum CombinedDocumentAllowed {
  YES                   @map("Yes")
  NO                    @map("No")
  SINGLE_PAGE_ONLY      @map("Single Page Only")
  
  @@map("combined_document_allowed")
}

enum LanguageRequirements {
  ENGLISH                               @map("English")
  HINDI                                 @map("Hindi")
  REGIONAL_WITH_TRANSLATION             @map("Regional With Translation")
  NOTARIZED_TRANSLATION_REQUIRED       @map("Notarized Translation Required")
  
  @@map("language_requirements")
}

enum MultiplePagesAllowed {
  YES                   @map("Yes")
  NO                    @map("No")
  SINGLE_PAGE_ONLY      @map("Single Page Only")
  
  @@map("multiple_pages_allowed")
}

enum QualityStandards {
  CLEAR_LEGIBLE           @map("Clear Legible")
  ALL_CORNERS_VISIBLE     @map("All Corners Visible")
  NO_SHADOWS              @map("No Shadows")
  ORIGINAL_COLORS         @map("Original Colors")
  STAMPED_SIGNED          @map("Stamped Signed")
  NOTARIZED               @map("Notarized")
  APOSTILLED              @map("Apostilled")
  
  @@map("quality_standards")
}

enum AutoExtractionPossible {
  YES       @map("Yes")
  NO        @map("No")
  PARTIAL   @map("Partial")
  
  @@map("auto_extraction_possible")
}

enum OCRCompatibility {
  HIGH              @map("High")
  MEDIUM            @map("Medium")
  LOW               @map("Low")
  NOT_COMPATIBLE    @map("Not Compatible")
  
  @@map("ocr_compatibility")
}

enum ParallelProcessingAllowed {
  YES         @map("Yes")
  NO          @map("No")
  PREFERRED   @map("Preferred")
  
  @@map("parallel_processing_allowed")
}

enum ResubmissionAllowed {
  YES                 @map("Yes")
  NO                  @map("No")
  LIMITED_ATTEMPTS    @map("Limited Attempts")
  
  @@map("resubmission_allowed")
}

enum DocumentRecordStatus {
  ACTIVE          @map("Active")
  INACTIVE        @map("Inactive")
  UNDER_REVIEW    @map("Under Review")
  DEPRECATED      @map("Deprecated")
  
  @@map("document_record_status")
}

enum DocumentReviewFrequency {
  MONTHLY       @map("Monthly")
  QUARTERLY     @map("Quarterly")
  HALF_YEARLY   @map("Half-yearly")
  YEARLY        @map("Yearly")
  AS_NEEDED     @map("As Needed")
  
  @@map("document_review_frequency")
}

enum EdumateContactAdmissionStatus {
  NOT_APPLIED             @map("Not Applied")
  APPLIED                 @map("Applied")
  INTERVIEW_SCHEDULED     @map("Interview Scheduled")
  WAITLISTED              @map("Waitlisted")
  ADMITTED                @map("Admitted")
  REJECTED                @map("Rejected")
  
  @@map("edumate_contact_admission_status")
}

enum CurrentEducationLevel {
  HIGH_SCHOOL   @map("High School")
  BACHELORS     @map("Bachelors")
  MASTERS       @map("Masters")
  PHD           @map("Phd")
  DIPLOMA       @map("Diploma")
  OTHER         @map("Other")
  
  @@map("current_education_level")
}

enum IntendedStartTerm {
  FALL      @map("Fall")
  SPRING    @map("Spring")
  SUMMER    @map("Summer")
  WINTER    @map("Winter")
  
  @@map("intended_start_term")
}

enum PreferredStudyDestination {
  US            @map("Us")
  UK            @map("Uk")
  CANADA        @map("Canada")
  AUSTRALIA     @map("Australia")
  GERMANY       @map("Germany")
  FRANCE        @map("France")
  SINGAPORE     @map("Singapore")
  ITALY         @map("Italy")
  UAE           @map("Uae")
  JAPAN         @map("Japan")
  CHINA         @map("China")
  INDIA         @map("India")
  NEW_ZEALAND   @map("New Zealand")
  OTHER         @map("Other")
  
  @@map("preferred_study_destination")
}

enum TargetDegreeLevel {
  BACHELORS               @map("Bachelors")
  MASTERS                 @map("Masters")
  PHD                     @map("Phd")
  DIPLOMA                 @map("Diploma")
  CERTIFICATE             @map("Certificate")
  PROFESSIONAL_COURSE     @map("Professional Course")
  
  @@map("target_degree_level")
}

enum CurrentStatusDisposition {
  NOT_INTERESTED                    @map("Not Interested")
  WRONG_NUMBER                      @map("Wrong Number")
  CALL_NOT_ANSWERED                 @map("Call Not Answered")
  FOLLOW_UP                         @map("Follow Up")
  INT_FOR_NEXT_YEAR                 @map("Int For Next Year")
  PARTIAL_DOCUMENTS_RECEIVED        @map("Partial Documents Received")
  
  @@map("current_status_disposition")
}

enum StatusDispositionReason {
  ALREADY_APPLIED         @map("Already Applied")
  NOT_LOOKING_AT_LOAN     @map("Not Looking At Loan")
  SELF_FUNDING            @map("Self Funding")
  OTHERS                  @map("Others")
  
  @@map("status_disposition_reason")
}

enum EdumateContactCourseType {
  STEM        @map("Stem")
  BUSINESS    @map("Business")
  OTHERS      @map("Others")
  
  @@map("edumate_contact_course_type")
}

enum CoApplicantOccupation {
  SALARIED        @map("Salaried")
  SELF_EMPLOYED   @map("Self Employed")
  RETIRED         @map("Retired")
  OTHERS          @map("Others")
  
  @@map("co_applicant_occupation")
}

enum CoApplicantRelationship {
  FATHER          @map("Father")
  MOTHER          @map("Mother")
  SPOUSE          @map("Spouse")
  SIBLING         @map("Sibling")
  UNCLE           @map("Uncle")
  AUNT            @map("Aunt")
  GRAND_FATHER    @map("Grand Father")
  GRAND_MOTHER    @map("Grand Mother")
  OTHERS          @map("Others")
  
  @@map("co_applicant_relationship")
}

enum CollateralAvailable {
  YES   @map("Yes")
  NO    @map("No")
  
  @@map("collateral_available")
}

enum EdumateContactCollateralType {
  PROPERTY    @map("Property")
  FD          @map("Fd")
  NA_PLOT     @map("Na Plot")
  OTHER       @map("Other")
  
  @@map("edumate_contact_collateral_type")
}

enum FinancialCurrency {
  INR     @map("Inr")
  USD     @map("Usd")
  EUR     @map("Eur")
  GBP     @map("Gbp")
  CAD     @map("Cad")
  AUD     @map("Aud")
  OTHER   @map("Other")
  
  @@map("financial_currency")
}

enum LeadSource {
  ORGANIC_SEARCH    @map("Organic Search")
  SOCIAL_MEDIA      @map("Social Media")
  B2B_PARTNER       @map("B2b Partner")
  REFERRAL          @map("Referral")
  ADVERTISEMENT     @map("Advertisement")
  WEBSITE           @map("Website")
  WALK_IN           @map("Walk-in")
  OTHER             @map("Other")
  
  @@map("lead_source")
}

enum PartnerCommissionApplicable {
  YES   @map("Yes")
  NO    @map("No")
  
  @@map("partner_commission_applicable")
}

enum LoanTypePreference {
  SECURED               @map("Secured")
  UNSECURED             @map("Unsecured")
  GOVERNMENT_SCHEME     @map("Government Scheme")
  NO_PREFERENCE         @map("No Preference")
  
  @@map("loan_type_preference")
}

enum PreferredLenders {
  AXIS    @map("Axis")
  
  @@map("preferred_lenders")
}

enum RepaymentTypePreference {
  EMI                @map("Emi")
  SIMPLE_INT         @map("Simple Int")
  PARTIAL_INT        @map("Partial Int")
  COMPLETE_MORAT     @map("Complete Morat")
  
  @@map("repayment_type_preference")
}

enum Nationality {
  AFGHANISTAN                                   @map("Afghanistan")
  ALBANIA                                      @map("Albania")
  ANTARCTICA                                   @map("Antarctica")
  ALAND_ISLANDS                                @map("Åland Islands")
  ALGERIA                                      @map("Algeria")
  AMERICAN_SAMOA                               @map("American Samoa")
  ANDORRA                                      @map("Andorra")
  ANGOLA                                       @map("Angola")
  ANGUILLA                                     @map("Anguilla")
  ANTIGUA_AND_BARBUDA                          @map("Antigua And Barbuda")
  ARUBA                                        @map("Aruba")
  ASIA_PACIFIC_REGION                          @map("Asia/Pacific Region")
  AZERBAIJAN                                   @map("Azerbaijan")
  ARGENTINA                                    @map("Argentina")
  ARMENIA                                      @map("Armenia")
  AUSTRALIA                                    @map("Australia")
  AUSTRIA                                      @map("Austria")
  BAHAMAS                                      @map("Bahamas")
  BAHRAIN                                      @map("Bahrain")
  BANGLADESH                                   @map("Bangladesh")
  BARBADOS                                     @map("Barbados")
  BELGIUM                                      @map("Belgium")
  BHUTAN                                       @map("Bhutan")
  BOLIVIA                                      @map("Bolivia")
  BOSNIA_AND_HERZEGOVINA                       @map("Bosnia And Herzegovina")
  BOTSWANA                                     @map("Botswana")
  BOUVET_ISLAND                                @map("Bouvet Island")
  BRAZIL                                       @map("Brazil")
  CARIBBEAN_NETHERLANDS                        @map("Caribbean Netherlands")
  BELIZE                                       @map("Belize")
  SOLOMON_ISLANDS                              @map("Solomon Islands")
  BRUNEI                                       @map("Brunei")
  BULGARIA                                     @map("Bulgaria")
  BURUNDI                                      @map("Burundi")
  BELARUS                                      @map("Belarus")
  BERMUDA                                      @map("Bermuda")
  CAMBODIA                                     @map("Cambodia")
  CAYMAN_ISLANDS                               @map("Cayman Islands")
  CAMEROON                                     @map("Cameroon")
  CANADA                                       @map("Canada")
  CAPE_VERDE                                   @map("Cape Verde")
  CENTRAL_AFRICAN_REPUBLIC                     @map("Central African Republic")
  CUBA                                         @map("Cuba")
  CURACAO                                      @map("Curaçao")
  SRI_LANKA                                    @map("Sri Lanka")
  CHAD                                         @map("Chad")
  CHILE                                        @map("Chile")
  CHINA                                        @map("China")
  CHRISTMAS_ISLAND                             @map("Christmas Island")
  COCOS_KEELING_ISLANDS                        @map("Cocos (Keeling) Islands")
  COLOMBIA                                     @map("Colombia")
  COMOROS                                      @map("Comoros")
  CONGO                                        @map("Congo")
  DEMOCRATIC_REPUBLIC_OF_THE_CONGO             @map("Democratic Republic Of The Congo")
  COOK_ISLANDS                                 @map("Cook Islands")
  COSTA_RICA                                   @map("Costa Rica")
  CROATIA                                      @map("Croatia")
  CYPRUS                                       @map("Cyprus")
  CZECH_REPUBLIC                               @map("Czech Republic")
  BENIN                                        @map("Benin")
  DENMARK                                      @map("Denmark")
  DOMINICA                                     @map("Dominica")
  DOMINICAN_REPUBLIC                           @map("Dominican Republic")
  ECUADOR                                      @map("Ecuador")
  EL_SALVADOR                                  @map("El Salvador")
  EQUATORIAL_GUINEA                            @map("Equatorial Guinea")
  ETHIOPIA                                     @map("Ethiopia")
  ERITREA                                      @map("Eritrea")
  ESTONIA                                      @map("Estonia")
  EUROPE                                       @map("Europe")
  SOUTH_GEORGIA_AND_SOUTH_SANDWICH_ISLANDS    @map("South Georgia And The South Sandwich Islands")
  FIJI                                         @map("Fiji")
  FINLAND                                      @map("Finland")
  FRANCE                                       @map("France")
  FALKLAND_ISLANDS                             @map("Falkland Islands")
  FAROE_ISLANDS                                @map("Faroe Islands")
  FRENCH_POLYNESIA                             @map("French Polynesia")
  FRENCH_SOUTHERN_AND_ANTARCTIC_LANDS          @map("French Southern And Antarctic Lands")
  DJIBOUTI                                     @map("Djibouti")
  GABON                                        @map("Gabon")
  GEORGIA                                      @map("Georgia")
  GAMBIA                                       @map("Gambia")
  GERMANY                                      @map("Germany")
  GHANA                                        @map("Ghana")
  GREENLAND                                    @map("Greenland")
  GUADELOUPE                                   @map("Guadeloupe")
  GUERNSEY                                     @map("Guernsey")
  KIRIBATI                                     @map("Kiribati")
  GREECE                                       @map("Greece")
  GRENADA                                      @map("Grenada")
  GUAM                                         @map("Guam")
  GUATEMALA                                    @map("Guatemala")
  GUINEA                                       @map("Guinea")
  GUYANA                                       @map("Guyana")
  FRENCH_GUIANA                                @map("French Guiana")
  GIBRALTAR                                    @map("Gibraltar")
  HAITI                                        @map("Haiti")
  HEARD_ISLAND_AND_MCDONALD_ISLANDS            @map("Heard Island And Mcdonald Islands")
  VATICAN_CITY                                 @map("Vatican City")
  HONDURAS                                     @map("Honduras")
  HUNGARY                                      @map("Hungary")
  HONG_KONG                                    @map("Hong Kong")
  ISLE_OF_MAN                                  @map("Isle Of Man")
  IRAN                                         @map("Iran")
  JERSEY                                       @map("Jersey")
  MACAU                                        @map("Macau")
  MARTINIQUE                                   @map("Martinique")
  MONTSERRAT                                   @map("Montserrat")
  MYANMAR_BURMA                                @map("Myanmar (Burma)")
  NORTH_KOREA                                  @map("North Korea")
  PALESTINE                                    @map("Palestine")
  PUERTO_RICO                                  @map("Puerto Rico")
  REUNION                                      @map("Réunion")
  SAINT_BARTHELEMY                             @map("Saint Barthélemy")
  SAINT_MARTIN                                 @map("Saint Martin")
  SINT_MAARTEN                                 @map("Sint Maarten")
  SOUTH_SUDAN                                  @map("South Sudan")
  SUDAN                                        @map("Sudan")
  SYRIA                                        @map("Syria")
  TAIWAN                                       @map("Taiwan")
  TURKS_AND_CAICOS_ISLANDS                     @map("Turks And Caicos Islands")
  US_VIRGIN_ISLANDS                            @map("U.S. Virgin Islands")
  ICELAND                                      @map("Iceland")
  INDIA                                        @map("India")
  INDONESIA                                    @map("Indonesia")
  IRAQ                                         @map("Iraq")
  IRELAND                                      @map("Ireland")
  ISRAEL                                       @map("Israel")
  ITALY                                        @map("Italy")
  BRITISH_INDIAN_OCEAN_TERRITORY               @map("British Indian Ocean Territory")
  COTE_DIVOIRE                                 @map("Cote Divoire")
  JAMAICA                                      @map("Jamaica")
  JAPAN                                        @map("Japan")
  KAZAKHSTAN                                   @map("Kazakhstan")
  JORDAN                                       @map("Jordan")
  KENYA                                        @map("Kenya")
  SOUTH_KOREA                                  @map("South Korea")
  KOSOVO                                       @map("Kosovo")
  KUWAIT                                       @map("Kuwait")
  KYRGYZSTAN                                   @map("Kyrgyzstan")
  LAOS                                         @map("Laos")
  LEBANON                                      @map("Lebanon")
  LESOTHO                                      @map("Lesotho")
  LATVIA                                       @map("Latvia")
  LIBERIA                                      @map("Liberia")
  LIBYA                                        @map("Libya")
  LIECHTENSTEIN                                @map("Liechtenstein")
  LITHUANIA                                    @map("Lithuania")
  LUXEMBOURG                                   @map("Luxembourg")
  MADAGASCAR                                   @map("Madagascar")
  MALAWI                                       @map("Malawi")
  MALAYSIA                                     @map("Malaysia")
  MALDIVES                                     @map("Maldives")
  MALI                                         @map("Mali")
  MALTA                                        @map("Malta")
  MAURITANIA                                   @map("Mauritania")
  MAURITIUS                                    @map("Mauritius")
  MAYOTTE                                      @map("Mayotte")
  MEXICO                                       @map("Mexico")
  MONACO                                       @map("Monaco")
  MONGOLIA                                     @map("Mongolia")
  MOLDOVA                                      @map("Moldova")
  MONTENEGRO                                   @map("Montenegro")
  MOROCCO                                      @map("Morocco")
  MOZAMBIQUE                                   @map("Mozambique")
  OMAN                                         @map("Oman")
  NAMIBIA                                      @map("Namibia")
  NAURU                                        @map("Nauru")
  NEPAL                                        @map("Nepal")
  NETHERLANDS                                  @map("Netherlands")
  NEW_CALEDONIA                                @map("New Caledonia")
  VANUATU                                      @map("Vanuatu")
  NETHERLANDS_ANTILLES                         @map("Netherlands Antilles")
  NEW_ZEALAND                                  @map("New Zealand")
  NICARAGUA                                    @map("Nicaragua")
  NIGER                                        @map("Niger")
  NIGERIA                                      @map("Nigeria")
  NIUE                                         @map("Niue")
  NORFOLK_ISLAND                               @map("Norfolk Island")
  NORWAY                                       @map("Norway")
  NORTHERN_MARIANA_ISLANDS                     @map("Northern Mariana Islands")
  UNITED_STATES_MINOR_OUTLYING_ISLANDS         @map("United States Minor Outlying Islands")
  MICRONESIA                                   @map("Micronesia")
  MARSHALL_ISLANDS                             @map("Marshall Islands")
  PALAU                                        @map("Palau")
  PAKISTAN                                     @map("Pakistan")
  PANAMA                                       @map("Panama")
  PAPUA_NEW_GUINEA                             @map("Papua New Guinea")
  PARAGUAY                                     @map("Paraguay")
  PERU                                         @map("Peru")
  PHILIPPINES                                  @map("Philippines")
  PITCAIRN_ISLANDS                             @map("Pitcairn Islands")
  POLAND                                       @map("Poland")
  PORTUGAL                                     @map("Portugal")
  GUINEA_BISSAU                                @map("Guinea-Bissau")
  EAST_TIMOR                                   @map("East Timor")
  QATAR                                        @map("Qatar")
  ROMANIA                                      @map("Romania")
  RUSSIA                                       @map("Russia")
  RWANDA                                       @map("Rwanda")
  SAINT_HELENA                                 @map("Saint Helena")
  SAINT_KITTS_AND_NEVIS                        @map("Saint Kitts And Nevis")
  SAINT_LUCIA                                  @map("Saint Lucia")
  SAINT_PIERRE_AND_MIQUELON                    @map("Saint Pierre And Miquelon")
  SAINT_VINCENT_AND_THE_GRENADINES             @map("Saint Vincent And The Grenadines")
  SAN_MARINO                                   @map("San Marino")
  SAO_TOME_AND_PRINCIPE                        @map("Sao Tome And Principe")
  SAUDI_ARABIA                                 @map("Saudi Arabia")
  SENEGAL                                      @map("Senegal")
  SVALBARD_AND_JAN_MAYEN                       @map("Svalbard And Jan Mayen")
  SERBIA                                       @map("Serbia")
  SEYCHELLES                                   @map("Seychelles")
  SIERRA_LEONE                                 @map("Sierra Leone")
  SINGAPORE                                    @map("Singapore")
  SLOVAKIA                                     @map("Slovakia")
  VIETNAM                                      @map("Vietnam")
  WESTERN_SAHARA                               @map("Western Sahara")
  SLOVENIA                                     @map("Slovenia")
  SOMALIA                                      @map("Somalia")
  SOUTH_AFRICA                                 @map("South Africa")
  ZIMBABWE                                     @map("Zimbabwe")
  SPAIN                                        @map("Spain")
  SURINAME                                     @map("Suriname")
  SWAZILAND                                    @map("Swaziland")
  SWEDEN                                       @map("Sweden")
  SWITZERLAND                                  @map("Switzerland")
  TAJIKISTAN                                   @map("Tajikistan")
  THAILAND                                     @map("Thailand")
  TOGO                                         @map("Togo")
  TOKELAU                                      @map("Tokelau")
  TONGA                                        @map("Tonga")
  TRINIDAD_AND_TOBAGO                          @map("Trinidad And Tobago")
  UNITED_ARAB_EMIRATES                         @map("United Arab Emirates")
  TUNISIA                                      @map("Tunisia")
  TURKIYE                                      @map("Türkiye")
  TURKMENISTAN                                 @map("Turkmenistan")
  TUVALU                                       @map("Tuvalu")
  UGANDA                                       @map("Uganda")
  UKRAINE                                      @map("Ukraine")
  MACEDONIA_FYROM                              @map("Macedonia (Fyrom)")
  EGYPT                                        @map("Egypt")
  UNITED_KINGDOM                               @map("United Kingdom")
  TANZANIA                                     @map("Tanzania")
  UNITED_STATES                                @map("United States")
  BURKINA_FASO                                 @map("Burkina Faso")
  URUGUAY                                      @map("Uruguay")
  UZBEKISTAN                                   @map("Uzbekistan")
  VENEZUELA                                    @map("Venezuela")
  BRITISH_VIRGIN_ISLANDS                       @map("British Virgin Islands")
  WALLIS_AND_FUTUNA                            @map("Wallis And Futuna")
  SAMOA                                        @map("Samoa")
  YEMEN                                        @map("Yemen")
  ZAMBIA                                       @map("Zambia")
  CANARY_ISLANDS                               @map("Canary Islands")
  
  @@map("nationality")
}

enum GDPRConsent {
  YES       @map("Yes")
  NO        @map("No")
  PENDING   @map("Pending")
  
  @@map("gdpr_consent")
}

enum MarketingConsent {
  YES   @map("Yes")
  NO    @map("No")
  
  @@map("marketing_consent")
}

enum StudentRecordStatus {
  ACTIVE      @map("Active")
  INACTIVE    @map("Inactive")
  DUPLICATE   @map("Duplicate")
  MERGED      @map("Merged")
  
  @@map("student_record_status")
}